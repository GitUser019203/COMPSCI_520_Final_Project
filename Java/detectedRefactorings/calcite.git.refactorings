VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b32f026b42f23be17dcf3
Issue Title: : Add BINDABLE convention and make it the default convention for query root
Refactorings at 66cfb120fca58e4c809748e2bcef4d3d5a7c6b82
Rename Class	org.apache.calcite.interpreter.ScanNode renamed to org.apache.calcite.interpreter.TableScanNode
Change Class Access Modifier	package to public in class org.apache.calcite.adapter.enumerable.AggImpState
Change Return Type	org.apache.calcite.sql.SqlAggFunction to SqlAggFunction in method public aggregation() : SqlAggFunction from class org.apache.calcite.adapter.enumerable.EnumerableAggregate.implement.new AggContext
Inline Variable	program : RexProgram in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.enumerable.EnumerableCalcRule
Change Return Type	org.apache.calcite.sql.SqlAggFunction to SqlAggFunction in method public aggregation() : SqlAggFunction from class org.apache.calcite.adapter.enumerable.EnumerableWindow.declareAndResetState.new WinAggContext
Extract Method	public of(typeFactory JavaTypeFactory, rowType RelDataType, format JavaRowFormat, optimize boolean) : PhysType extracted from public of(typeFactory JavaTypeFactory, rowType RelDataType, format JavaRowFormat) : PhysType in class org.apache.calcite.adapter.enumerable.PhysTypeImpl
Add Parameter	root : Expression in method private RexToLixTranslator(program RexProgram, typeFactory JavaTypeFactory, root Expression, inputGetter InputGetter, list BlockBuilder) from class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Add Parameter	root : Expression in method private RexToLixTranslator(program RexProgram, typeFactory JavaTypeFactory, root Expression, inputGetter InputGetter, list BlockBuilder, exprNullableMap Map<RexNode,Boolean>, builder RexBuilder) from class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Add Parameter	root : Expression in method private RexToLixTranslator(program RexProgram, typeFactory JavaTypeFactory, root Expression, inputGetter InputGetter, list BlockBuilder, exprNullableMap Map<? extends RexNode,Boolean>, builder RexBuilder, parent RexToLixTranslator) from class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Add Parameter	root : Expression in method private RexToLixTranslator(program RexProgram, typeFactory JavaTypeFactory, root Expression, inputGetter InputGetter, list BlockBuilder, exprNullableMap Map<? extends RexNode,Boolean>, builder RexBuilder, parent RexToLixTranslator, correlates Function1<String,InputGetter>) from class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Add Parameter	root : Expression in method public translateProjects(program RexProgram, typeFactory JavaTypeFactory, list BlockBuilder, outputPhysType PhysType, root Expression, inputGetter InputGetter, correlates Function1<String,InputGetter>) : List<Expression> from class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Add Attribute Modifier	final in attribute private grouping : ImmutableBitSet from class org.apache.calcite.interpreter.AggregateNode.Grouping
Rename Attribute	accum : Map<Row,AccumulatorList> to accumulators : Map<Row,AccumulatorList> in class org.apache.calcite.interpreter.AggregateNode.Grouping
Add Attribute Modifier	final in attribute private accumulators : Map<Row,AccumulatorList> from class org.apache.calcite.interpreter.AggregateNode.Grouping
Change Return Type	Accumulator to AccumulatorFactory in method private getAccumulator(call AggregateCall) : AccumulatorFactory from class org.apache.calcite.interpreter.AggregateNode
Remove Method Modifier	static in method private getAccumulator(call AggregateCall) : Accumulator from class org.apache.calcite.interpreter.AggregateNode
Replace Variable With Attribute	scalar : Scalar to scalar : Scalar in method public run() : void from class org.apache.calcite.interpreter.ProjectNode
Rename Attribute	projects : ImmutableList<Scalar> to projectCount : int in class org.apache.calcite.interpreter.ProjectNode
Change Attribute Type	projects : ImmutableList<Scalar> to projectCount : int in class org.apache.calcite.interpreter.ProjectNode
Rename Attribute	source : Source to scalar : Scalar in class org.apache.calcite.interpreter.ProjectNode
Change Attribute Type	source : Source to scalar : Scalar in class org.apache.calcite.interpreter.ProjectNode
Extract Method	private compare(c1 Comparable, c2 Comparable, nullComparison int) : int extracted from private comparator(fieldCollation RelFieldCollation) : Comparator<Row> in class org.apache.calcite.interpreter.SortNode
Change Variable Type	list : List<RexLiteral> to row : Row in method public run() : void from class org.apache.calcite.interpreter.ValuesNode
Rename Variable	list : List<RexLiteral> to row : Row in method public run() : void from class org.apache.calcite.interpreter.ValuesNode
Rename Attribute	rel : Values to rows : ImmutableList<Row> in class org.apache.calcite.interpreter.ValuesNode
Change Attribute Type	rel : Values to rows : ImmutableList<Row> in class org.apache.calcite.interpreter.ValuesNode
Change Return Type	Bindable to ArrayBindable in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.jdbc.CalcitePrepare.SparkHandler
Change Return Type	Bindable to ArrayBindable in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.jdbc.CalcitePrepare.Dummy.TrivialSparkHandler
Extract Variable	bindable : Bindable<T> in method package prepare2_(context Context, sql String, queryable Queryable<T>, elementType Type, maxRowCount int, catalogReader CalciteCatalogReader, planner RelOptPlanner) : CalciteSignature<T> from class org.apache.calcite.prepare.CalcitePrepareImpl
Change Parameter Type	clazz : Class<? extends RelNode> to clazz : Class<R> in method public ConverterRelOptRuleOperand(clazz Class<R>, in RelTrait, predicate Predicate<? super R>) from class org.apache.calcite.rel.convert.ConverterRule.ConverterRelOptRuleOperand
Add Parameter	predicate : Predicate<? super R> in method public ConverterRelOptRuleOperand(clazz Class<R>, in RelTrait, predicate Predicate<? super R>) from class org.apache.calcite.rel.convert.ConverterRule.ConverterRelOptRuleOperand
Change Return Type	AggregateFunction to AggregateFunctionImpl in method public create(clazz Class<?>) : AggregateFunctionImpl from class org.apache.calcite.schema.impl.AggregateFunctionImpl
Add Method Annotation	@Ignore in method public testFoodmartLattice() : void from class org.apache.calcite.test.JdbcTest
Change Return Type	Bindable to ArrayBindable in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.adapter.spark.SparkHandlerImpl
Change Method Access Modifier	public to package in method package TableScanNode(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) from class org.apache.calcite.interpreter.TableScanNode
Extract Class	org.apache.calcite.interpreter.JoinNode from class org.apache.calcite.interpreter.SortNode
Move Attribute	private sink : Sink from class org.apache.calcite.interpreter.FilterNode to private sink : Sink from class org.apache.calcite.interpreter.JoinNode
Move Attribute	private sink : Sink from class org.apache.calcite.interpreter.FilterNode to private sink : Sink from class org.apache.calcite.interpreter.UnionNode
Move Attribute	private sink : Sink from class org.apache.calcite.interpreter.ProjectNode to private sink : Sink from class org.apache.calcite.interpreter.JoinNode
Move Attribute	private sink : Sink from class org.apache.calcite.interpreter.ProjectNode to private sink : Sink from class org.apache.calcite.interpreter.UnionNode
Move Attribute	private sink : Sink from class org.apache.calcite.interpreter.SortNode to private sink : Sink from class org.apache.calcite.interpreter.JoinNode
Change Method Access Modifier	private to public in method public debugCode(out PrintStream, code String) : void from class org.apache.calcite.util.Util
Add Method Modifier	static in method public debugCode(out PrintStream, code String) : void from class org.apache.calcite.util.Util
Move Method	private debugCode(out PrintStream, code String) : void from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt to public debugCode(out PrintStream, code String) : void from class org.apache.calcite.util.Util
Add Parameter	fieldCount : int in method package getBindable(expr ClassDeclaration, s String, fieldCount int) : Bindable from class org.apache.calcite.adapter.enumerable.EnumerableInterpretable
Change Method Access Modifier	private to package in method package getBindable(expr ClassDeclaration, s String, fieldCount int) : Bindable from class org.apache.calcite.adapter.enumerable.EnumerableInterpretable
Add Method Modifier	static in method package getBindable(expr ClassDeclaration, s String, fieldCount int) : Bindable from class org.apache.calcite.adapter.enumerable.EnumerableInterpretable
Move Method	private getBindable(expr ClassDeclaration, s String) : Bindable from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt to package getBindable(expr ClassDeclaration, s String, fieldCount int) : Bindable from class org.apache.calcite.adapter.enumerable.EnumerableInterpretable
Extract And Move Method	public computeSelfCost(planner RelOptPlanner) : RelOptCost extracted from public computeSelfCost(planner RelOptPlanner) : RelOptCost in class org.apache.calcite.adapter.enumerable.EnumerableWindow & moved to class org.apache.calcite.rel.core.Window
Move And Inline Method	private getNewAccumList() : AccumulatorList moved from class org.apache.calcite.interpreter.AggregateNode to class org.apache.calcite.interpreter.AggregateNode.Grouping & inlined to public send(row Row) : void
Developers have reported that 10708 commits involve refactoring but only 282 involve refactoring operations
There are 3 duplicate commits with refactoring out of the 282 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b330026b42f23be17dd39
Issue Title: : Add ImmutableBitSet and replace uses of BitSet
Refactorings at b9d8de38d2aa4ee6791aec42ffe2adb58942060a
Change Variable Type	keys : List<BitSet> to keys : List<ImmutableBitSet> in method public getStatistic() : Statistic from class org.apache.calcite.adapter.clone.ArrayTable
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public EnumerableAggregate(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) from class org.apache.calcite.adapter.enumerable.EnumerableAggregate
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public copy(traitSet RelTraitSet, input RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) : EnumerableAggregate from class org.apache.calcite.adapter.enumerable.EnumerableAggregate
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public JdbcAggregate(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcAggregate
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public copy(traitSet RelTraitSet, input RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) : JdbcAggregate from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcAggregate
Change Variable Type	bitSet : BitSet to bitSet : ImmutableBitSet.Builder in method public argBitSet() : ImmutableBitSet from class org.apache.calcite.materialize.Lattice.Measure
Change Return Type	BitSet to ImmutableBitSet in method public argBitSet() : ImmutableBitSet from class org.apache.calcite.materialize.Lattice.Measure
Change Attribute Type	bitSet : BitSet to bitSet : ImmutableBitSet in class org.apache.calcite.materialize.Lattice.Tile
Change Return Type	BitSet to ImmutableBitSet in method public bitSet() : ImmutableBitSet from class org.apache.calcite.materialize.Lattice.Tile
Change Variable Type	columnSet : BitSet to columnSetBuilder : ImmutableBitSet.Builder in method public sql(groupSet ImmutableBitSet, aggCallList List<Measure>) : String from class org.apache.calcite.materialize.Lattice
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public sql(groupSet ImmutableBitSet, aggCallList List<Measure>) : String from class org.apache.calcite.materialize.Lattice
Rename Variable	columnSet : BitSet to columnSetBuilder : ImmutableBitSet.Builder in method public sql(groupSet ImmutableBitSet, aggCallList List<Measure>) : String from class org.apache.calcite.materialize.Lattice
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public defineTile(lattice Lattice, groupSet ImmutableBitSet, measureList List<Lattice.Measure>, schema CalciteSchema, create boolean, exact boolean) : Pair<CalciteSchema.TableEntry,TileKey> from class org.apache.calcite.materialize.MaterializationService
Change Attribute Type	dimensions : BitSet to dimensions : ImmutableBitSet in class org.apache.calcite.materialize.TileKey
Change Parameter Type	dimensions : BitSet to dimensions : ImmutableBitSet in method public TileKey(lattice Lattice, dimensions ImmutableBitSet, measures ImmutableList<Lattice.Measure>) from class org.apache.calcite.materialize.TileKey
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.plan.RelOptAbstractTable
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public getAggregate(planner RelOptPlanner, groupSet ImmutableBitSet, measureList List<Lattice.Measure>) : Pair<CalciteSchema.TableEntry,TileKey> from class org.apache.calcite.plan.RelOptLattice
Change Attribute Type	inputBitSet : BitSet to inputBitSet : ImmutableBitSet.Builder in class org.apache.calcite.plan.RelOptUtil.InputFinder
Change Attribute Access Modifier	package to public in attribute public inputBitSet : ImmutableBitSet.Builder from class org.apache.calcite.plan.RelOptUtil.InputFinder
Change Return Type	BitSet to ImmutableBitSet in method public bits(node RexNode) : ImmutableBitSet from class org.apache.calcite.plan.RelOptUtil.InputFinder
Change Return Type	BitSet to ImmutableBitSet in method public bits(exprs List<RexNode>, expr RexNode) : ImmutableBitSet from class org.apache.calcite.plan.RelOptUtil.InputFinder
Remove Parameter	inputBitSet : BitSet in method public InputFinder(inputBitSet BitSet) from class org.apache.calcite.plan.RelOptUtil.InputFinder
Remove Parameter	inputBitSet : BitSet in method public InputFinder(inputBitSet BitSet, extraFields Set<RelDataTypeField>) from class org.apache.calcite.plan.RelOptUtil.InputFinder
Change Variable Type	projRefs0 : BitSet to projRefs0 : ImmutableBitSet in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, leftRel RelNode, rightRel RelNode, condition RexNode, leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Change Variable Type	projRefs1 : BitSet to projRefs1 : ImmutableBitSet in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, leftRel RelNode, rightRel RelNode, condition RexNode, leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Change Variable Type	projRefs : BitSet to projRefs : ImmutableBitSet in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, leftRel RelNode, rightRel RelNode, condition RexNode, leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Change Variable Type	leftBitmap : BitSet to leftBitmap : ImmutableBitSet in method public simplifyJoin(joinRel RelNode, aboveFilters ImmutableList<RexNode>, joinType JoinRelType) : JoinRelType from class org.apache.calcite.plan.RelOptUtil
Change Variable Type	rightBitmap : BitSet to rightBitmap : ImmutableBitSet in method public simplifyJoin(joinRel RelNode, aboveFilters ImmutableList<RexNode>, joinType JoinRelType) : JoinRelType from class org.apache.calcite.plan.RelOptUtil
Change Variable Type	leftBitmap : BitSet to leftBitmap : ImmutableBitSet in method public classifyFilters(joinRel RelNode, filters List<RexNode>, joinType JoinRelType, pushInto boolean, pushLeft boolean, pushRight boolean, joinFilters List<RexNode>, leftFilters List<RexNode>, rightFilters List<RexNode>) : boolean from class org.apache.calcite.plan.RelOptUtil
Change Variable Type	rightBitmap : BitSet to rightBitmap : ImmutableBitSet in method public classifyFilters(joinRel RelNode, filters List<RexNode>, joinType JoinRelType, pushInto boolean, pushLeft boolean, pushRight boolean, joinFilters List<RexNode>, leftFilters List<RexNode>, rightFilters List<RexNode>) : boolean from class org.apache.calcite.plan.RelOptUtil
Change Variable Type	inputRefs : BitSet to inputRefs : ImmutableBitSet in method public projectMultiJoin(multiJoin MultiJoin, project LogicalProject) : MultiJoin from class org.apache.calcite.plan.RelOptUtil
Change Variable Type	filterRefs : BitSet to filterRefs : ImmutableBitSet in method public splitFilters(childBitmap ImmutableBitSet, predicate RexNode, pushable List<RexNode>, notPushable List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Change Parameter Type	childBitmap : BitSet to childBitmap : ImmutableBitSet in method public splitFilters(childBitmap ImmutableBitSet, predicate RexNode, pushable List<RexNode>, notPushable List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Change Attribute Type	nullColumns : BitSet to nullColumns : ImmutableBitSet in class org.apache.calcite.plan.Strong
Change Parameter Type	nullColumns : BitSet to nullColumns : ImmutableBitSet in method private Strong(nullColumns ImmutableBitSet) from class org.apache.calcite.plan.Strong
Change Parameter Type	nullColumns : BitSet to nullColumns : ImmutableBitSet in method public of(nullColumns ImmutableBitSet) : Strong from class org.apache.calcite.plan.Strong
Change Parameter Type	nullColumns : BitSet to nullColumns : ImmutableBitSet in method public is(node RexNode, nullColumns ImmutableBitSet) : boolean from class org.apache.calcite.plan.Strong
Change Attribute Type	groupSet : BitSet to groupSet : ImmutableBitSet in class org.apache.calcite.plan.SubstitutionVisitor.MutableAggregate
Change Return Type	BitSet to ImmutableBitSet in method public getGroupSet() : ImmutableBitSet from class org.apache.calcite.plan.SubstitutionVisitor.MutableAggregate
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method private MutableAggregate(input MutableRel, rowType RelDataType, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) from class org.apache.calcite.plan.SubstitutionVisitor.MutableAggregate
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method package of(input MutableRel, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) : MutableAggregate from class org.apache.calcite.plan.SubstitutionVisitor.MutableAggregate
Change Variable Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public permute(aggregate MutableAggregate, input MutableRel, mapping Mapping) : MutableAggregate from class org.apache.calcite.plan.SubstitutionVisitor
Change Variable Type	groupSet : BitSet to groupSet : ImmutableBitSet.Builder in method public unifyAggregates(query MutableAggregate, target MutableAggregate) : MutableRel from class org.apache.calcite.plan.SubstitutionVisitor
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.plan.hep.HepRelVertex
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.plan.volcano.RelSubset
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.prepare.RelOptTableImpl
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.rel.AbstractRelNode
Change Return Type	BitSet to ImmutableBitSet in method public getBitSet(tag String) : ImmutableBitSet from class org.apache.calcite.rel.RelInput
Change Attribute Type	groupSet : BitSet to groupSet : ImmutableBitSet in class org.apache.calcite.rel.core.Aggregate
Change Return Type	BitSet to ImmutableBitSet in method public getGroupSet() : ImmutableBitSet from class org.apache.calcite.rel.core.Aggregate
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method protected Aggregate(cluster RelOptCluster, traits RelTraitSet, child RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) from class org.apache.calcite.rel.core.Aggregate
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public deriveRowType(typeFactory RelDataTypeFactory, inputRowType RelDataType, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) : RelDataType from class org.apache.calcite.rel.core.Aggregate
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.rel.core.Intersect
Change Return Type	BitSet to ImmutableBitSet in method public leftSet() : ImmutableBitSet from class org.apache.calcite.rel.core.JoinInfo
Change Return Type	BitSet to ImmutableBitSet in method public rightSet() : ImmutableBitSet from class org.apache.calcite.rel.core.JoinInfo
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.rel.core.Minus
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public createAggregate(child RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) : RelNode from class org.apache.calcite.rel.core.RelFactories.AggregateFactoryImpl
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.rel.core.SetOp
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.rel.core.TableScan
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public project(fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>, projectFactory RelFactories.ProjectFactory) : RelNode from class org.apache.calcite.rel.core.TableScan
Change Attribute Type	keys : BitSet to keys : ImmutableBitSet in class org.apache.calcite.rel.core.Window.Group
Change Parameter Type	keys : BitSet to keys : ImmutableBitSet in method public Group(keys ImmutableBitSet, isRows boolean, lowerBound RexWindowBound, upperBound RexWindowBound, orderKeys RelCollation, aggCalls List<RexWinAggCall>) from class org.apache.calcite.rel.core.Window.Group
Change Return Type	BitSet to ImmutableBitSet in method public getBitSet(tag String) : ImmutableBitSet from class org.apache.calcite.rel.externalize.RelJsonReader.readRel.input.new RelInput
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public LogicalAggregate(cluster RelOptCluster, child RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) from class org.apache.calcite.rel.logical.LogicalAggregate
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public copy(traitSet RelTraitSet, input RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) : LogicalAggregate from class org.apache.calcite.rel.logical.LogicalAggregate
Change Attribute Type	groupSet : BitSet to groupSet : ImmutableBitSet in class org.apache.calcite.rel.logical.LogicalWindow.WindowKey
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public WindowKey(groupSet ImmutableBitSet, orderKeys RelCollation, isRows boolean, lowerBound RexWindowBound, upperBound RexWindowBound) from class org.apache.calcite.rel.logical.LogicalWindow.WindowKey
Change Variable Type	groupSet : BitSet to groupSet : ImmutableBitSet in method private addWindows(windowMap Multimap<WindowKey,RexOver>, over RexOver, inputFieldCount int) : void from class org.apache.calcite.rel.logical.LogicalWindow
Change Return Type	Set<BitSet> to Set<ImmutableBitSet> in method public getUniqueKeys(ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.BuiltInMetadata.UniqueKeys
Extract Method	public areColumnsUnique(rel Filter, columns ImmutableBitSet, ignoreNulls boolean) : Boolean extracted from public areColumnsUnique(rel Project, columns BitSet, ignoreNulls boolean) : Boolean in class org.apache.calcite.rel.metadata.RelMdColumnUniqueness
Extract Method	public areColumnsUnique(rel Sort, columns ImmutableBitSet, ignoreNulls boolean) : Boolean extracted from public areColumnsUnique(rel Project, columns BitSet, ignoreNulls boolean) : Boolean in class org.apache.calcite.rel.metadata.RelMdColumnUniqueness
Extract Method	public areColumnsUnique(rel Correlator, columns ImmutableBitSet, ignoreNulls boolean) : Boolean extracted from public areColumnsUnique(rel Project, columns BitSet, ignoreNulls boolean) : Boolean in class org.apache.calcite.rel.metadata.RelMdColumnUniqueness
Extract Method	public areColumnsUnique(rel SemiJoin, columns ImmutableBitSet, ignoreNulls boolean) : Boolean extracted from public areColumnsUnique(rel Project, columns BitSet, ignoreNulls boolean) : Boolean in class org.apache.calcite.rel.metadata.RelMdColumnUniqueness
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public areColumnsUnique(rel Project, columns ImmutableBitSet, ignoreNulls boolean) : Boolean from class org.apache.calcite.rel.metadata.RelMdColumnUniqueness
Change Variable Type	childColumns : BitSet to childColumns : ImmutableBitSet.Builder in method public areColumnsUnique(rel Project, columns ImmutableBitSet, ignoreNulls boolean) : Boolean from class org.apache.calcite.rel.metadata.RelMdColumnUniqueness
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public areColumnsUnique(rel Join, columns ImmutableBitSet, ignoreNulls boolean) : Boolean from class org.apache.calcite.rel.metadata.RelMdColumnUniqueness
Change Variable Type	leftColumns : BitSet to leftColumns : ImmutableBitSet.Builder in method public areColumnsUnique(rel Join, columns ImmutableBitSet, ignoreNulls boolean) : Boolean from class org.apache.calcite.rel.metadata.RelMdColumnUniqueness
Change Variable Type	rightColumns : BitSet to rightColumns : ImmutableBitSet.Builder in method public areColumnsUnique(rel Join, columns ImmutableBitSet, ignoreNulls boolean) : Boolean from class org.apache.calcite.rel.metadata.RelMdColumnUniqueness
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public areColumnsUnique(rel RelNode, columns ImmutableBitSet, ignoreNulls boolean) : Boolean from class org.apache.calcite.rel.metadata.RelMdColumnUniqueness
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getDistinctRowCount(rel Union, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getDistinctRowCount(rel Sort, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getDistinctRowCount(rel Filter, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getDistinctRowCount(rel Join, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getDistinctRowCount(rel SemiJoin, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getDistinctRowCount(rel Aggregate, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Variable Type	childKey : BitSet to childKey : ImmutableBitSet.Builder in method public getDistinctRowCount(rel Aggregate, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getDistinctRowCount(rel Values, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getDistinctRowCount(rel Project, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Variable Type	baseCols : BitSet to baseCols : ImmutableBitSet.Builder in method public getDistinctRowCount(rel Project, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Variable Type	projCols : BitSet to projCols : ImmutableBitSet.Builder in method public getDistinctRowCount(rel Project, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getDistinctRowCount(rel RelNode, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Extract Method	public getPopulationSize(rel Filter, groupKey ImmutableBitSet) : Double extracted from public getPopulationSize(rel Aggregate, groupKey BitSet) : Double in class org.apache.calcite.rel.metadata.RelMdPopulationSize
Extract Method	public getPopulationSize(rel Sort, groupKey ImmutableBitSet) : Double extracted from public getPopulationSize(rel Aggregate, groupKey BitSet) : Double in class org.apache.calcite.rel.metadata.RelMdPopulationSize
Extract Method	public getPopulationSize(rel Filter, groupKey ImmutableBitSet) : Double extracted from public getPopulationSize(rel Project, groupKey BitSet) : Double in class org.apache.calcite.rel.metadata.RelMdPopulationSize
Extract Method	public getPopulationSize(rel Sort, groupKey ImmutableBitSet) : Double extracted from public getPopulationSize(rel Project, groupKey BitSet) : Double in class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getPopulationSize(rel Union, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getPopulationSize(rel Join, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getPopulationSize(rel SemiJoin, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getPopulationSize(rel Aggregate, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Variable Type	childKey : BitSet to childKey : ImmutableBitSet.Builder in method public getPopulationSize(rel Aggregate, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getPopulationSize(rel Values, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getPopulationSize(rel Project, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Variable Type	baseCols : BitSet to baseCols : ImmutableBitSet.Builder in method public getPopulationSize(rel Project, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Variable Type	projCols : BitSet to projCols : ImmutableBitSet.Builder in method public getPopulationSize(rel Project, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getPopulationSize(rel RelNode, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Parameter Type	fields : BitSet to fields : ImmutableBitSet in method package ExprsItr(fields ImmutableBitSet) from class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference.ExprsItr
Change Attribute Type	leftFieldsBitSet : BitSet to leftFieldsBitSet : ImmutableBitSet in class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Change Attribute Type	rightFieldsBitSet : BitSet to rightFieldsBitSet : ImmutableBitSet in class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Change Attribute Type	allFieldsBitSet : BitSet to allFieldsBitSet : ImmutableBitSet in class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Change Attribute Type	exprFields : Map<String,BitSet> to exprFields : Map<String,ImmutableBitSet> in class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Change Variable Type	iPBitSet : BitSet to iPBitSet : ImmutableBitSet in method public inferPredicates(includeEqualityInference boolean) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Change Variable Type	fields : BitSet to fields : ImmutableBitSet in method public iterator() : Iterator<Mapping> from class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference.mappings.new Iterable<Mapping>
Change Parameter Type	inferringFields : BitSet to inferringFields : ImmutableBitSet in method private infer(predicates RexNode, allExprsDigests Set<String>, inferedPredicates List<RexNode>, includeEqualityInference boolean, inferringFields ImmutableBitSet) : void from class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Change Variable Type	columnsMapped : BitSet to columnsMappedBuilder : ImmutableBitSet.Builder in method public getPredicates(project Project) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates
Change Variable Type	rCols : BitSet to rCols : ImmutableBitSet in method public getPredicates(project Project) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates
Rename Variable	columnsMapped : BitSet to columnsMappedBuilder : ImmutableBitSet.Builder in method public getPredicates(project Project) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates
Change Variable Type	groupKeys : BitSet to groupKeys : ImmutableBitSet in method public getPredicates(agg Aggregate) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates
Change Variable Type	rCols : BitSet to rCols : ImmutableBitSet in method public getPredicates(agg Aggregate) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates
Change Variable Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getRowCount(rel Aggregate) : Double from class org.apache.calcite.rel.metadata.RelMdRowCount
Change Return Type	Set<BitSet> to Set<ImmutableBitSet> in method public getUniqueKeys(rel Filter, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Return Type	Set<BitSet> to Set<ImmutableBitSet> in method public getUniqueKeys(rel Sort, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Return Type	Set<BitSet> to Set<ImmutableBitSet> in method public getUniqueKeys(rel Correlator, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	projUniqueKeySet : Set<BitSet> to projUniqueKeySet : Set<ImmutableBitSet> in method public getUniqueKeys(rel Project, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	childUniqueKeySet : Set<BitSet> to childUniqueKeySet : Set<ImmutableBitSet> in method public getUniqueKeys(rel Project, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	colMask : BitSet to colMask : ImmutableBitSet in method public getUniqueKeys(rel Project, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	tmpMask : BitSet to tmpMask : ImmutableBitSet.Builder in method public getUniqueKeys(rel Project, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Return Type	Set<BitSet> to Set<ImmutableBitSet> in method public getUniqueKeys(rel Project, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	retSet : Set<BitSet> to retSet : Set<ImmutableBitSet> in method public getUniqueKeys(rel Join, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	leftSet : Set<BitSet> to leftSet : Set<ImmutableBitSet> in method public getUniqueKeys(rel Join, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	rightSet : Set<BitSet> to rightSet : Set<ImmutableBitSet> in method public getUniqueKeys(rel Join, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	tmpRightSet : Set<BitSet> to tmpRightSet : Set<ImmutableBitSet> in method public getUniqueKeys(rel Join, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	colMask : BitSet to colMask : ImmutableBitSet in method public getUniqueKeys(rel Join, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	colMaskLeft : BitSet to colMaskLeft : ImmutableBitSet in method public getUniqueKeys(rel Join, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	colMaskRight : BitSet to colMaskRight : ImmutableBitSet in method public getUniqueKeys(rel Join, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	tmpMask : BitSet to tmpMask : ImmutableBitSet.Builder in method public getUniqueKeys(rel Join, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Return Type	Set<BitSet> to Set<ImmutableBitSet> in method public getUniqueKeys(rel Join, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Return Type	Set<BitSet> to Set<ImmutableBitSet> in method public getUniqueKeys(rel SemiJoin, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Return Type	Set<BitSet> to Set<ImmutableBitSet> in method public getUniqueKeys(rel Aggregate, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Return Type	Set<BitSet> to Set<ImmutableBitSet> in method public getUniqueKeys(rel RelNode, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMdUniqueKeys
Change Variable Type	col : BitSet to col : ImmutableBitSet in method public visitInputRef(var RexInputRef) : Double from class org.apache.calcite.rel.metadata.RelMdUtil.CardOfProjExpr
Change Variable Type	dimKeys : BitSet to dimKeyBuilder : ImmutableBitSet.Builder in method public computeSemiJoinSelectivity(factRel RelNode, dimRel RelNode, factKeyList List<Integer>, dimKeyList List<Integer>) : double from class org.apache.calcite.rel.metadata.RelMdUtil
Change Variable Type	factKeys : BitSet to factKeys : ImmutableBitSet.Builder in method public computeSemiJoinSelectivity(factRel RelNode, dimRel RelNode, factKeyList List<Integer>, dimKeyList List<Integer>) : double from class org.apache.calcite.rel.metadata.RelMdUtil
Rename Variable	dimKeys : BitSet to dimKeyBuilder : ImmutableBitSet.Builder in method public computeSemiJoinSelectivity(factRel RelNode, dimRel RelNode, factKeyList List<Integer>, dimKeyList List<Integer>) : double from class org.apache.calcite.rel.metadata.RelMdUtil
Change Variable Type	colMask : BitSet to colMask : ImmutableBitSet.Builder in method public areColumnsUnique(rel RelNode, columnRefs List<RexInputRef>) : Boolean from class org.apache.calcite.rel.metadata.RelMdUtil
Change Variable Type	colMask : BitSet to colMask : ImmutableBitSet.Builder in method public areColumnsUniqueWhenNullsFiltered(rel RelNode, columnRefs List<RexInputRef>) : Boolean from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	colMask : BitSet to colMask : ImmutableBitSet in method public areColumnsDefinitelyUnique(rel RelNode, colMask ImmutableBitSet) : boolean from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	colMask : BitSet to colMask : ImmutableBitSet in method public areColumnsDefinitelyUniqueWhenNullsFiltered(rel RelNode, colMask ImmutableBitSet) : boolean from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public setLeftRightBitmaps(groupKey ImmutableBitSet, leftMask ImmutableBitSet.Builder, rightMask ImmutableBitSet.Builder, nFieldsOnLeft int) : void from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	leftMask : BitSet to leftMask : ImmutableBitSet.Builder in method public setLeftRightBitmaps(groupKey ImmutableBitSet, leftMask ImmutableBitSet.Builder, rightMask ImmutableBitSet.Builder, nFieldsOnLeft int) : void from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	rightMask : BitSet to rightMask : ImmutableBitSet.Builder in method public setLeftRightBitmaps(groupKey ImmutableBitSet, leftMask ImmutableBitSet.Builder, rightMask ImmutableBitSet.Builder, nFieldsOnLeft int) : void from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public setAggChildKeys(groupKey ImmutableBitSet, aggRel Aggregate, childKey ImmutableBitSet.Builder) : void from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	childKey : BitSet to childKey : ImmutableBitSet.Builder in method public setAggChildKeys(groupKey ImmutableBitSet, aggRel Aggregate, childKey ImmutableBitSet.Builder) : void from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public splitCols(projExprs List<RexNode>, groupKey ImmutableBitSet, baseCols ImmutableBitSet.Builder, projCols ImmutableBitSet.Builder) : void from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	baseCols : BitSet to baseCols : ImmutableBitSet.Builder in method public splitCols(projExprs List<RexNode>, groupKey ImmutableBitSet, baseCols ImmutableBitSet.Builder, projCols ImmutableBitSet.Builder) : void from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	projCols : BitSet to projCols : ImmutableBitSet.Builder in method public splitCols(projExprs List<RexNode>, groupKey ImmutableBitSet, baseCols ImmutableBitSet.Builder, projCols ImmutableBitSet.Builder) : void from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getJoinPopulationSize(joinRel RelNode, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdUtil
Change Variable Type	leftMask : BitSet to leftMask : ImmutableBitSet.Builder in method public getJoinPopulationSize(joinRel RelNode, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdUtil
Change Variable Type	rightMask : BitSet to rightMask : ImmutableBitSet.Builder in method public getJoinPopulationSize(joinRel RelNode, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdUtil
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getJoinDistinctRowCount(joinRel RelNode, joinType JoinRelType, groupKey ImmutableBitSet, predicate RexNode, useMaxNdv boolean) : Double from class org.apache.calcite.rel.metadata.RelMdUtil
Change Variable Type	leftMask : BitSet to leftMask : ImmutableBitSet.Builder in method public getJoinDistinctRowCount(joinRel RelNode, joinType JoinRelType, groupKey ImmutableBitSet, predicate RexNode, useMaxNdv boolean) : Double from class org.apache.calcite.rel.metadata.RelMdUtil
Change Variable Type	rightMask : BitSet to rightMask : ImmutableBitSet.Builder in method public getJoinDistinctRowCount(joinRel RelNode, joinType JoinRelType, groupKey ImmutableBitSet, predicate RexNode, useMaxNdv boolean) : Double from class org.apache.calcite.rel.metadata.RelMdUtil
Change Return Type	Set<BitSet> to Set<ImmutableBitSet> in method public getUniqueKeys(rel RelNode) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMetadataQuery
Change Return Type	Set<BitSet> to Set<ImmutableBitSet> in method public getUniqueKeys(rel RelNode, ignoreNulls boolean) : Set<ImmutableBitSet> from class org.apache.calcite.rel.metadata.RelMetadataQuery
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public areColumnsUnique(rel RelNode, columns ImmutableBitSet) : Boolean from class org.apache.calcite.rel.metadata.RelMetadataQuery
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public areColumnsUnique(rel RelNode, columns ImmutableBitSet, ignoreNulls boolean) : Boolean from class org.apache.calcite.rel.metadata.RelMetadataQuery
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getPopulationSize(rel RelNode, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMetadataQuery
Change Parameter Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public getDistinctRowCount(rel RelNode, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMetadataQuery
Change Variable Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.AggregateExpandDistinctAggregatesRule
Change Variable Type	filterColumns : BitSet to filterColumns : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.AggregateFilterTransposeRule
Change Variable Type	newGroupSet : BitSet to newGroupSet : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.AggregateFilterTransposeRule
Change Variable Type	topGroupSet : BitSet to topGroupSet : ImmutableBitSet.Builder in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.AggregateFilterTransposeRule
Change Variable Type	newGroupSet : BitSet to newGroupSet : ImmutableBitSet in method public apply(aggregate Aggregate, project Project) : RelNode from class org.apache.calcite.rel.rules.AggregateProjectMergeRule
Change Variable Type	groupSet : BitSet to groupSet : ImmutableBitSet.Builder in method protected apply(call RelOptRuleCall, postProject Project, aggregate Aggregate, scan StarTable.StarTableScan) : void from class org.apache.calcite.rel.rules.AggregateStarTableRule
Change Variable Type	groupKeys : BitSet to groupKeys : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.FilterAggregateTransposeRule
Change Variable Type	rCols : BitSet to rCols : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.FilterAggregateTransposeRule
Change Variable Type	aBitSet : BitSet to aBitSet : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.JoinAssociateRule
Change Variable Type	bBitSet : BitSet to bBitSet : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.JoinAssociateRule
Change Variable Type	bBitSet : BitSet to bBitSet : ImmutableBitSet in method private onMatchRight(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.JoinPushThroughJoinRule
Change Variable Type	aBitSet : BitSet to aBitSet : ImmutableBitSet in method private onMatchLeft(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.JoinPushThroughJoinRule
Change Variable Type	inputBitSet : BitSet to inputBitSet : ImmutableBitSet in method package split(condition RexNode, bitSet ImmutableBitSet, intersecting List<RexNode>, nonIntersecting List<RexNode>) : void from class org.apache.calcite.rel.rules.JoinPushThroughJoinRule
Change Parameter Type	bitSet : BitSet to bitSet : ImmutableBitSet in method package split(condition RexNode, bitSet ImmutableBitSet, intersecting List<RexNode>, nonIntersecting List<RexNode>) : void from class org.apache.calcite.rel.rules.JoinPushThroughJoinRule
Change Variable Type	projFieldsList : List<BitSet> to projFieldsList : List<ImmutableBitSet> in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.JoinToMultiJoinRule
Change Parameter Type	projFieldsList : List<BitSet> to projFieldsList : List<ImmutableBitSet> in method private combineInputs(join Join, left RelNode, right RelNode, projFieldsList List<ImmutableBitSet>, joinFieldRefCountsList List<int[]>) : List<RelNode> from class org.apache.calcite.rel.rules.JoinToMultiJoinRule
Change Attribute Type	factors : BitSet to factors : ImmutableBitSet in class org.apache.calcite.rel.rules.LoptMultiJoin.Edge
Change Attribute Type	columns : BitSet to columns : ImmutableBitSet in class org.apache.calcite.rel.rules.LoptMultiJoin.Edge
Change Parameter Type	factors : BitSet to factors : ImmutableBitSet in method package Edge(condition RexNode, factors ImmutableBitSet, columns ImmutableBitSet) from class org.apache.calcite.rel.rules.LoptMultiJoin.Edge
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method package Edge(condition RexNode, factors ImmutableBitSet, columns ImmutableBitSet) from class org.apache.calcite.rel.rules.LoptMultiJoin.Edge
Change Attribute Type	outerJoinFactors : BitSet[] to outerJoinFactors : ImmutableBitSet[] in class org.apache.calcite.rel.rules.LoptMultiJoin
Change Attribute Type	projFields : List<BitSet> to projFields : List<ImmutableBitSet> in class org.apache.calcite.rel.rules.LoptMultiJoin
Change Attribute Type	factorsRefByJoinFilter : Map<RexNode,BitSet> to factorsRefByJoinFilter : Map<RexNode,ImmutableBitSet> in class org.apache.calcite.rel.rules.LoptMultiJoin
Change Attribute Type	fieldsRefByJoinFilter : Map<RexNode,BitSet> to fieldsRefByJoinFilter : Map<RexNode,ImmutableBitSet> in class org.apache.calcite.rel.rules.LoptMultiJoin
Change Attribute Type	factorsRefByFactor : BitSet[] to factorsRefByFactor : ImmutableBitSet[] in class org.apache.calcite.rel.rules.LoptMultiJoin
Change Variable Type	dependentFactors : BitSet to dependentFactors : ImmutableBitSet in method public LoptMultiJoin(multiJoin MultiJoin) from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Variable Type	factorRefBitmap : BitSet to factorRefBitmap : ImmutableBitSet in method private setJoinFilterRefs() : void from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Variable Type	factorRefs : BitSet to factorRefs : ImmutableBitSet in method public setFactorWeights() : void from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Variable Type	leftFields : BitSet to leftFields : ImmutableBitSet in method public setFactorWeights() : void from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Variable Type	leftBitmap : BitSet to leftBitmap : ImmutableBitSet in method public setFactorWeights() : void from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Variable Type	fieldRefBitmap : BitSet to fieldRefBitmap : ImmutableBitSet in method public createEdge(condition RexNode) : Edge from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Variable Type	factorRefBitmap : BitSet to factorRefBitmap : ImmutableBitSet in method public createEdge(condition RexNode) : Edge from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Return Type	BitSet to ImmutableBitSet in method public getFactorsRefByJoinFilter(joinFilter RexNode) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Return Type	BitSet to ImmutableBitSet in method public getFieldsRefByJoinFilter(joinFilter RexNode) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Return Type	BitSet to ImmutableBitSet in method public getFactorsRefByFactor(factIdx int) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Return Type	BitSet to ImmutableBitSet in method public getOuterJoinFactors(factIdx int) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Return Type	BitSet to ImmutableBitSet in method public getProjFields(factIdx int) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Variable Type	fieldRefBitmap : BitSet to fieldRefBitmap : ImmutableBitSet in method package getJoinFilterFactorBitmap(joinFilter RexNode, setFields boolean) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Return Type	BitSet to ImmutableBitSet in method package getJoinFilterFactorBitmap(joinFilter RexNode, setFields boolean) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Extract Variable	inputFinder : RelOptUtil.InputFinder in method private fieldBitmap(joinFilter RexNode) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Return Type	BitSet to ImmutableBitSet in method private fieldBitmap(joinFilter RexNode) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Parameter Type	fieldRefBitmap : BitSet to fieldRefBitmap : ImmutableBitSet in method private factorBitmap(fieldRefBitmap ImmutableBitSet) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Variable Type	factorRefBitmap : BitSet to factorRefBitmap : ImmutableBitSet.Builder in method private factorBitmap(fieldRefBitmap ImmutableBitSet) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Return Type	BitSet to ImmutableBitSet in method private factorBitmap(fieldRefBitmap ImmutableBitSet) : ImmutableBitSet from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Parameter Type	childFactors : BitSet to childFactors : ImmutableBitSet.Builder in method public getChildFactors(joinTree LoptJoinTree, childFactors ImmutableBitSet.Builder) : void from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Variable Type	joinKeys : BitSet to joinKeyBuilder : ImmutableBitSet.Builder in method private findRemovableOuterJoins(multiJoin LoptMultiJoin) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Add Variable Modifier	final in variable joinKeyBuilder : ImmutableBitSet.Builder in method private findRemovableOuterJoins(multiJoin LoptMultiJoin) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Variable Type	otherJoinKeys : BitSet to otherJoinKeyBuilder : ImmutableBitSet.Builder in method private findRemovableOuterJoins(multiJoin LoptMultiJoin) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Add Variable Modifier	final in variable otherJoinKeyBuilder : ImmutableBitSet.Builder in method private findRemovableOuterJoins(multiJoin LoptMultiJoin) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Variable Type	projFields : BitSet to projFields : ImmutableBitSet in method private findRemovableOuterJoins(multiJoin LoptMultiJoin) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Rename Variable	joinKeys : BitSet to joinKeyBuilder : ImmutableBitSet.Builder in method private findRemovableOuterJoins(multiJoin LoptMultiJoin) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Rename Variable	otherJoinKeys : BitSet to otherJoinKeyBuilder : ImmutableBitSet.Builder in method private findRemovableOuterJoins(multiJoin LoptMultiJoin) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Variable Type	joinFactors : BitSet to joinFactors : ImmutableBitSet in method private findRemovableSelfJoins(multiJoin LoptMultiJoin) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Variable Type	childFactors : BitSet to childFactors : ImmutableBitSet in method private computeJoinCardinality(multiJoin LoptMultiJoin, semiJoinOpt LoptSemiJoinOptimizer, joinTree LoptJoinTree, filters List<RexNode>, factor int) : Double from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Add Variable Modifier	final in variable childFactors : ImmutableBitSet in method private computeJoinCardinality(multiJoin LoptMultiJoin, semiJoinOpt LoptSemiJoinOptimizer, joinTree LoptJoinTree, filters List<RexNode>, factor int) : Double from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Variable Type	joinKeys : BitSet to joinKeys : ImmutableBitSet.Builder in method private computeJoinCardinality(multiJoin LoptMultiJoin, semiJoinOpt LoptSemiJoinOptimizer, joinTree LoptJoinTree, filters List<RexNode>, factor int) : Double from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Add Variable Modifier	final in variable joinKeys : ImmutableBitSet.Builder in method private computeJoinCardinality(multiJoin LoptMultiJoin, semiJoinOpt LoptSemiJoinOptimizer, joinTree LoptJoinTree, filters List<RexNode>, factor int) : Double from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Variable Type	childFactors : BitSet to childFactorBuilder : ImmutableBitSet.Builder in method private addFilters(multiJoin LoptMultiJoin, leftTree LoptJoinTree, leftIdx int, rightTree LoptJoinTree, filtersToAdd List<RexNode>, adjust boolean) : RexNode from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Variable Type	filterBitmap : BitSet to filterBitmap : ImmutableBitSet in method private addFilters(multiJoin LoptMultiJoin, leftTree LoptJoinTree, leftIdx int, rightTree LoptJoinTree, filtersToAdd List<RexNode>, adjust boolean) : RexNode from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Rename Variable	childFactors : BitSet to childFactorBuilder : ImmutableBitSet.Builder in method private addFilters(multiJoin LoptMultiJoin, leftTree LoptJoinTree, leftIdx int, rightTree LoptJoinTree, filtersToAdd List<RexNode>, adjust boolean) : RexNode from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Parameter Type	joinKeys : BitSet to joinKeys : ImmutableBitSet.Builder in method private setJoinKey(joinKeys ImmutableBitSet.Builder, otherJoinKeys ImmutableBitSet.Builder, ref1 int, ref2 int, firstFieldNum int, lastFieldNum int, swap boolean) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Parameter Type	otherJoinKeys : BitSet to otherJoinKeys : ImmutableBitSet.Builder in method private setJoinKey(joinKeys ImmutableBitSet.Builder, otherJoinKeys ImmutableBitSet.Builder, ref1 int, ref2 int, firstFieldNum int, lastFieldNum int, swap boolean) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Variable Type	filterFactors : BitSet to filterFactors : ImmutableBitSet in method private setFactorJoinKeys(multiJoin LoptMultiJoin, filters List<RexNode>, joinFactors ImmutableBitSet, factorStart int, nFields int, joinKeys ImmutableBitSet.Builder) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Variable Type	joinFields : BitSet to joinFields : ImmutableBitSet in method private setFactorJoinKeys(multiJoin LoptMultiJoin, filters List<RexNode>, joinFactors ImmutableBitSet, factorStart int, nFields int, joinKeys ImmutableBitSet.Builder) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Parameter Type	joinFactors : BitSet to joinFactors : ImmutableBitSet in method private setFactorJoinKeys(multiJoin LoptMultiJoin, filters List<RexNode>, joinFactors ImmutableBitSet, factorStart int, nFields int, joinKeys ImmutableBitSet.Builder) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Parameter Type	joinKeys : BitSet to joinKeys : ImmutableBitSet.Builder in method private setFactorJoinKeys(multiJoin LoptMultiJoin, filters List<RexNode>, joinFactors ImmutableBitSet, factorStart int, nFields int, joinKeys ImmutableBitSet.Builder) : void from class org.apache.calcite.rel.rules.LoptOptimizeJoinRule
Change Variable Type	joinRefs : BitSet to joinRefs : ImmutableBitSet in method private isSuitableFilter(multiJoin LoptMultiJoin, joinFilter RexNode, factIdx int) : int from class org.apache.calcite.rel.rules.LoptSemiJoinOptimizer
Extract Variable	dimCols : ImmutableBitSet in method private computeScore(factRel RelNode, dimRel RelNode, semiJoin SemiJoin) : double from class org.apache.calcite.rel.rules.LoptSemiJoinOptimizer
Change Variable Type	dimCols : BitSet to dimCols : ImmutableBitSet in method private computeScore(factRel RelNode, dimRel RelNode, semiJoin SemiJoin) : double from class org.apache.calcite.rel.rules.LoptSemiJoinOptimizer
Add Variable Modifier	final in variable dimCols : ImmutableBitSet in method private computeScore(factRel RelNode, dimRel RelNode, semiJoin SemiJoin) : double from class org.apache.calcite.rel.rules.LoptSemiJoinOptimizer
Extract Variable	dimKeys : ImmutableBitSet in method private removeJoin(multiJoin LoptMultiJoin, semiJoin SemiJoin, factIdx int, dimIdx int) : void from class org.apache.calcite.rel.rules.LoptSemiJoinOptimizer
Change Variable Type	dimProjRefs : BitSet to dimProjRefs : ImmutableBitSet in method private removeJoin(multiJoin LoptMultiJoin, semiJoin SemiJoin, factIdx int, dimIdx int) : void from class org.apache.calcite.rel.rules.LoptSemiJoinOptimizer
Change Variable Type	dimKeys : BitSet to dimKeys : ImmutableBitSet in method private removeJoin(multiJoin LoptMultiJoin, semiJoin SemiJoin, factIdx int, dimIdx int) : void from class org.apache.calcite.rel.rules.LoptSemiJoinOptimizer
Add Variable Modifier	final in variable dimKeys : ImmutableBitSet in method private removeJoin(multiJoin LoptMultiJoin, semiJoin SemiJoin, factIdx int, dimIdx int) : void from class org.apache.calcite.rel.rules.LoptSemiJoinOptimizer
Change Attribute Type	projFields : List<BitSet> to projFields : List<ImmutableBitSet> in class org.apache.calcite.rel.rules.MultiJoin
Change Return Type	List<BitSet> to List<ImmutableBitSet> in method public getProjFields() : List<ImmutableBitSet> from class org.apache.calcite.rel.rules.MultiJoin
Change Parameter Type	projFields : List<BitSet> to projFields : List<ImmutableBitSet> in method public MultiJoin(cluster RelOptCluster, inputs List<RelNode>, joinFilter RexNode, rowType RelDataType, isFullOuterJoin boolean, outerJoinConditions List<RexNode>, joinTypes List<JoinRelType>, projFields List<ImmutableBitSet>, joinFieldRefCountsMap ImmutableMap<Integer,ImmutableIntList>, postJoinFilter RexNode) from class org.apache.calcite.rel.rules.MultiJoin
Change Attribute Type	factors : BitSet to factors : ImmutableBitSet in class org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule.Vertex
Change Parameter Type	factors : BitSet to factors : ImmutableBitSet in method package Vertex(id int, factors ImmutableBitSet, cost double) from class org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule.Vertex
Change Parameter Type	factors : BitSet to factors : ImmutableBitSet in method package JoinVertex(id int, leftFactor int, rightFactor int, factors ImmutableBitSet, cost double, conditions ImmutableList<RexNode>) from class org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule.JoinVertex
Change Variable Type	merged : BitSet to merged : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule
Change Variable Type	newFactors : BitSet to newFactors : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule
Change Variable Type	newEdgeFactors : BitSet to newEdgeFactors : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule
Change Attribute Type	leftFields : BitSet to leftFields : ImmutableBitSet in class org.apache.calcite.rel.rules.PushProjector.InputSpecialOpFinder
Change Attribute Type	rightFields : BitSet to rightFields : ImmutableBitSet in class org.apache.calcite.rel.rules.PushProjector.InputSpecialOpFinder
Change Variable Type	exprArgs : BitSet to exprArgs : ImmutableBitSet in method private preserve(call RexNode) : boolean from class org.apache.calcite.rel.rules.PushProjector.InputSpecialOpFinder
Change Parameter Type	leftFields : BitSet to leftFields : ImmutableBitSet in method public InputSpecialOpFinder(rexRefs BitSet, leftFields ImmutableBitSet, rightFields ImmutableBitSet, preserveExprCondition ExprCondition, preserveLeft List<RexNode>, preserveRight List<RexNode>) from class org.apache.calcite.rel.rules.PushProjector.InputSpecialOpFinder
Change Parameter Type	rightFields : BitSet to rightFields : ImmutableBitSet in method public InputSpecialOpFinder(rexRefs BitSet, leftFields ImmutableBitSet, rightFields ImmutableBitSet, preserveExprCondition ExprCondition, preserveLeft List<RexNode>, preserveRight List<RexNode>) from class org.apache.calcite.rel.rules.PushProjector.InputSpecialOpFinder
Change Attribute Type	childBitmap : BitSet to childBitmap : ImmutableBitSet in class org.apache.calcite.rel.rules.PushProjector
Change Attribute Type	rightBitmap : BitSet to rightBitmap : ImmutableBitSet in class org.apache.calcite.rel.rules.PushProjector
Change Variable Type	bits : BitSet to bits : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.SemiJoinRule
Change Variable Type	rightBits : BitSet to rightBits : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.SemiJoinRule
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.schema.Statistics.UNKNOWN.new Statistic
Change Variable Type	key : BitSet to key : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.schema.Statistics.of.new Statistic
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.schema.Statistics.of.new Statistic
Change Parameter Type	keys : List<BitSet> to keys : List<ImmutableBitSet> in method public of(rowCount double, keys List<ImmutableBitSet>) : Statistic from class org.apache.calcite.schema.Statistics
Change Variable Type	allCols : BitSet to allCols : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.sql2rel.RelDecorrelator.RemoveCorrelationForScalarAggregateRule
Change Variable Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.sql2rel.RelDecorrelator.RemoveCorrelationForScalarAggregateRule
Change Variable Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trim(root RelNode) : RelNode from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method protected trimChild(rel RelNode, input RelNode, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method protected trimChildRestore(rel RelNode, input RelNode, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method protected dispatchTrimFields(rel RelNode, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trimFields(rel RelNode, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trimFields(project Project, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	inputFieldsUsed : BitSet to inputFieldsUsed : ImmutableBitSet in method public trimFields(project Project, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trimFields(filter Filter, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	inputFieldsUsed : BitSet to inputFieldsUsed : ImmutableBitSet in method public trimFields(filter Filter, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Add Variable Modifier	final in variable inputFieldsUsed : ImmutableBitSet in method public trimFields(filter Filter, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trimFields(sort Sort, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	inputFieldsUsed : BitSet to inputFieldsUsed : ImmutableBitSet.Builder in method public trimFields(sort Sort, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Add Variable Modifier	final in variable inputFieldsUsed : ImmutableBitSet.Builder in method public trimFields(sort Sort, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trimFields(join Join, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	fieldsUsedPlus : BitSet to fieldsUsedPlus : ImmutableBitSet in method public trimFields(join Join, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Add Variable Modifier	final in variable fieldsUsedPlus : ImmutableBitSet in method public trimFields(join Join, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	inputFieldsUsed : BitSet to inputFieldsUsed : ImmutableBitSet.Builder in method public trimFields(join Join, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trimFields(setOp SetOp, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	newGroupSet : BitSet to newGroupSet : ImmutableBitSet in method public trimFields(aggregate Aggregate, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trimFields(aggregate Aggregate, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	inputFieldsUsed : BitSet to inputFieldsUsed : ImmutableBitSet.Builder in method public trimFields(aggregate Aggregate, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Add Variable Modifier	final in variable inputFieldsUsed : ImmutableBitSet.Builder in method public trimFields(aggregate Aggregate, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	inputFieldsUsed : BitSet to inputFieldsUsed : ImmutableBitSet in method public trimFields(modifier LogicalTableModify, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Add Variable Modifier	final in variable inputFieldsUsed : ImmutableBitSet in method public trimFields(modifier LogicalTableModify, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trimFields(modifier LogicalTableModify, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	inputFieldsUsed : BitSet to inputFieldsUsed : ImmutableBitSet in method public trimFields(tabFun LogicalTableFunctionScan, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trimFields(tabFun LogicalTableFunctionScan, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trimFields(values LogicalValues, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method private createMapping(fieldsUsed ImmutableBitSet, fieldCount int) : Mapping from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	fieldsUsed : BitSet to fieldsUsed : ImmutableBitSet in method public trimFields(tableAccessRel TableScan, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Parameter Type	bitSet : BitSet to bitSet : ImmutableBitSet in method package of(bitSet ImmutableBitSet, middle int) : Side from class org.apache.calcite.sql2rel.SqlToRelConverter.Side
Change Variable Type	bits : BitSet to bits : ImmutableBitSet in method private pushDownJoinConditions(node RexNode, leftCount int, rightCount int, extraLeftExprs List<RexNode>, extraRightExprs List<RexNode>) : RexNode from class org.apache.calcite.sql2rel.SqlToRelConverter
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method protected createAggregate(bb Blackboard, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) : RelNode from class org.apache.calcite.sql2rel.SqlToRelConverter
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,SqlParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,TableInRootSchemaTest.class,MultiJdbcSchemaJoinTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,SqlParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,TableInRootSchemaTest.class,MultiJdbcSchemaJoinTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Variable Type	groupKey : BitSet to groupKey : ImmutableBitSet in method public testDistinctRowCountTable() : void from class org.apache.calcite.test.RelMetadataTest
Change Variable Type	c : BitSet to c : ImmutableBitSet in method public testStrong() : void from class org.apache.calcite.test.RexProgramTest
Change Variable Type	c0 : BitSet to c0 : ImmutableBitSet in method public testStrong() : void from class org.apache.calcite.test.RexProgramTest
Change Variable Type	c1 : BitSet to c1 : ImmutableBitSet in method public testStrong() : void from class org.apache.calcite.test.RexProgramTest
Change Variable Type	c01 : BitSet to c01 : ImmutableBitSet in method public testStrong() : void from class org.apache.calcite.test.RexProgramTest
Change Variable Type	c13 : BitSet to c13 : ImmutableBitSet in method public testStrong() : void from class org.apache.calcite.test.RexProgramTest
Change Parameter Type	b : BitSet to b : ImmutableBitSet in method package strongIf(e RexNode, b ImmutableBitSet) : boolean from class org.apache.calcite.test.RexProgramTest
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.test.SqlToRelTestBase.MockRelOptSchema.MockColumnSet
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.test.SqlToRelTestBase.DelegatingRelOptTable
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public MongoAggregate(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) from class org.apache.calcite.adapter.mongodb.MongoAggregate
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public copy(traitSet RelTraitSet, input RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) : Aggregate from class org.apache.calcite.adapter.mongodb.MongoAggregate
Inline Method	public getPopulationSize(rel Filter, groupKey BitSet) : Double inlined to public getPopulationSize(rel Aggregate, groupKey ImmutableBitSet) : Double in class org.apache.calcite.rel.metadata.RelMdPopulationSize
Inline Method	public getPopulationSize(rel Filter, groupKey BitSet) : Double inlined to public getPopulationSize(rel Project, groupKey ImmutableBitSet) : Double in class org.apache.calcite.rel.metadata.RelMdPopulationSize
Inline Method	public getPopulationSize(rel Sort, groupKey BitSet) : Double inlined to public getPopulationSize(rel Aggregate, groupKey ImmutableBitSet) : Double in class org.apache.calcite.rel.metadata.RelMdPopulationSize
Inline Method	public getPopulationSize(rel Sort, groupKey BitSet) : Double inlined to public getPopulationSize(rel Project, groupKey ImmutableBitSet) : Double in class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.plan.RelOptTable
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.rel.RelNode
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public abstract copy(traitSet RelTraitSet, input RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) : Aggregate from class org.apache.calcite.rel.core.Aggregate
Change Parameter Type	groupSet : BitSet to groupSet : ImmutableBitSet in method public createAggregate(child RelNode, groupSet ImmutableBitSet, aggCalls List<AggregateCall>) : RelNode from class org.apache.calcite.rel.core.RelFactories.AggregateFactory
Change Parameter Type	columns : BitSet to columns : ImmutableBitSet in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.schema.Statistic
Developers have reported that 10708 commits involve refactoring but only 283 involve refactoring operations
There are 3 duplicate commits with refactoring out of the 283 commits.

No refactorings detected at f036de876064f51e5271cd1d5de342b431299e91

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b330f26b42f23be17dd91
Issue Title: : When a projected expression can only have one value, replace with that constant
Refactorings at c9e58edf0001af203ecd374d92fb82ed3d152e1d
Extract Method	private visit(call RexNode) : RexNode extracted from public visitCall(call RexCall) : RexNode in class org.apache.calcite.rel.rules.ReduceExpressionsRule.RexReplacer
Remove Parameter Modifier	final in parameter call : RexCall in method public visitCall(call RexCall) : RexNode from class org.apache.calcite.rel.rules.ReduceExpressionsRule.RexReplacer
Add Parameter	constants : ImmutableMap<RexNode,RexLiteral> in method package ReducibleExprLocator(typeFactory RelDataTypeFactory, constants ImmutableMap<RexNode,RexLiteral>, constExprs List<RexNode>, addCasts List<Boolean>, removableCasts List<RexNode>) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Add Variable Modifier	final in variable filter : LogicalFilter in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.FILTER_INSTANCE.new ReduceExpressionsRule
Add Variable Modifier	final in variable expList : List<RexNode> in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.FILTER_INSTANCE.new ReduceExpressionsRule
Add Variable Modifier	final in variable expList : List<RexNode> in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.PROJECT_INSTANCE.new ReduceExpressionsRule
Add Variable Modifier	final in variable expList : List<RexNode> in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.JOIN_INSTANCE.new ReduceExpressionsRule
Add Variable Modifier	final in variable list : List<RexLocalRef> in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.CALC_INSTANCE.new ReduceExpressionsRule
Extract Variable	constExps2 : List<RexNode> in method package reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Variable Modifier	final in variable constExps : List<RexNode> in method package reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Variable Modifier	final in variable removableCasts : List<RexNode> in method package reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Variable Modifier	final in variable reducedExprs : List<RexNode> in method package reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Variable Modifier	final in variable reducedValues : List<RexNode> in method package reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Parameter	predicates : RelOptPredicateList in method package reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Parameter	constants : ImmutableMap<RexNode,RexLiteral> in method private findReducibleExps(typeFactory RelDataTypeFactory, exps List<RexNode>, constants ImmutableMap<RexNode,RexLiteral>, constExps List<RexNode>, addCasts List<Boolean>, removableCasts List<RexNode>) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Rename Method	public testTransitiveInferencePreventProjectPullup() : void renamed to public testTransitiveInferencePreventProjectPullUp() : void in class org.apache.calcite.test.RelOptRulesTest
Rename Method	public testTransitiveInferencePullupThruAlias() : void renamed to public testTransitiveInferencePullUpThruAlias() : void in class org.apache.calcite.test.RelOptRulesTest
Add Parameter	extraRules : RelOptRule... in method public transitiveInference(extraRules RelOptRule...) : void from class org.apache.calcite.test.RelOptRulesTest
Developers have reported that 10708 commits involve refactoring but only 284 involve refactoring operations
There are 3 duplicate commits with refactoring out of the 284 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b332226b42f23be17de02
Issue Title: : Extend induce method to return CUBE and ROLLUP
Refactorings at 3b34d300d516f5455a1c29f154c66e70e9d29455
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,SqlParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,SqlParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Developers have reported that 10708 commits involve refactoring but only 285 involve refactoring operations
There are 3 duplicate commits with refactoring out of the 285 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b332326b42f23be17de0e
Issue Title: : Implement inner JOIN in interpreter and improve handling of scalar expressions
Refactorings at 66cfb120fca58e4c809748e2bcef4d3d5a7c6b82
Rename Class	org.apache.calcite.interpreter.ScanNode renamed to org.apache.calcite.interpreter.TableScanNode
Change Class Access Modifier	package to public in class org.apache.calcite.adapter.enumerable.AggImpState
Change Return Type	org.apache.calcite.sql.SqlAggFunction to SqlAggFunction in method public aggregation() : SqlAggFunction from class org.apache.calcite.adapter.enumerable.EnumerableAggregate.implement.new AggContext
Inline Variable	program : RexProgram in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.enumerable.EnumerableCalcRule
Change Return Type	org.apache.calcite.sql.SqlAggFunction to SqlAggFunction in method public aggregation() : SqlAggFunction from class org.apache.calcite.adapter.enumerable.EnumerableWindow.declareAndResetState.new WinAggContext
Extract Method	public of(typeFactory JavaTypeFactory, rowType RelDataType, format JavaRowFormat, optimize boolean) : PhysType extracted from public of(typeFactory JavaTypeFactory, rowType RelDataType, format JavaRowFormat) : PhysType in class org.apache.calcite.adapter.enumerable.PhysTypeImpl
Add Parameter	root : Expression in method private RexToLixTranslator(program RexProgram, typeFactory JavaTypeFactory, root Expression, inputGetter InputGetter, list BlockBuilder) from class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Add Parameter	root : Expression in method private RexToLixTranslator(program RexProgram, typeFactory JavaTypeFactory, root Expression, inputGetter InputGetter, list BlockBuilder, exprNullableMap Map<RexNode,Boolean>, builder RexBuilder) from class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Add Parameter	root : Expression in method private RexToLixTranslator(program RexProgram, typeFactory JavaTypeFactory, root Expression, inputGetter InputGetter, list BlockBuilder, exprNullableMap Map<? extends RexNode,Boolean>, builder RexBuilder, parent RexToLixTranslator) from class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Add Parameter	root : Expression in method private RexToLixTranslator(program RexProgram, typeFactory JavaTypeFactory, root Expression, inputGetter InputGetter, list BlockBuilder, exprNullableMap Map<? extends RexNode,Boolean>, builder RexBuilder, parent RexToLixTranslator, correlates Function1<String,InputGetter>) from class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Add Parameter	root : Expression in method public translateProjects(program RexProgram, typeFactory JavaTypeFactory, list BlockBuilder, outputPhysType PhysType, root Expression, inputGetter InputGetter, correlates Function1<String,InputGetter>) : List<Expression> from class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Add Attribute Modifier	final in attribute private grouping : ImmutableBitSet from class org.apache.calcite.interpreter.AggregateNode.Grouping
Rename Attribute	accum : Map<Row,AccumulatorList> to accumulators : Map<Row,AccumulatorList> in class org.apache.calcite.interpreter.AggregateNode.Grouping
Add Attribute Modifier	final in attribute private accumulators : Map<Row,AccumulatorList> from class org.apache.calcite.interpreter.AggregateNode.Grouping
Change Return Type	Accumulator to AccumulatorFactory in method private getAccumulator(call AggregateCall) : AccumulatorFactory from class org.apache.calcite.interpreter.AggregateNode
Remove Method Modifier	static in method private getAccumulator(call AggregateCall) : Accumulator from class org.apache.calcite.interpreter.AggregateNode
Replace Variable With Attribute	scalar : Scalar to scalar : Scalar in method public run() : void from class org.apache.calcite.interpreter.ProjectNode
Rename Attribute	projects : ImmutableList<Scalar> to projectCount : int in class org.apache.calcite.interpreter.ProjectNode
Change Attribute Type	projects : ImmutableList<Scalar> to projectCount : int in class org.apache.calcite.interpreter.ProjectNode
Rename Attribute	source : Source to scalar : Scalar in class org.apache.calcite.interpreter.ProjectNode
Change Attribute Type	source : Source to scalar : Scalar in class org.apache.calcite.interpreter.ProjectNode
Extract Method	private compare(c1 Comparable, c2 Comparable, nullComparison int) : int extracted from private comparator(fieldCollation RelFieldCollation) : Comparator<Row> in class org.apache.calcite.interpreter.SortNode
Change Variable Type	list : List<RexLiteral> to row : Row in method public run() : void from class org.apache.calcite.interpreter.ValuesNode
Rename Variable	list : List<RexLiteral> to row : Row in method public run() : void from class org.apache.calcite.interpreter.ValuesNode
Rename Attribute	rel : Values to rows : ImmutableList<Row> in class org.apache.calcite.interpreter.ValuesNode
Change Attribute Type	rel : Values to rows : ImmutableList<Row> in class org.apache.calcite.interpreter.ValuesNode
Change Return Type	Bindable to ArrayBindable in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.jdbc.CalcitePrepare.SparkHandler
Change Return Type	Bindable to ArrayBindable in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.jdbc.CalcitePrepare.Dummy.TrivialSparkHandler
Extract Variable	bindable : Bindable<T> in method package prepare2_(context Context, sql String, queryable Queryable<T>, elementType Type, maxRowCount int, catalogReader CalciteCatalogReader, planner RelOptPlanner) : CalciteSignature<T> from class org.apache.calcite.prepare.CalcitePrepareImpl
Change Parameter Type	clazz : Class<? extends RelNode> to clazz : Class<R> in method public ConverterRelOptRuleOperand(clazz Class<R>, in RelTrait, predicate Predicate<? super R>) from class org.apache.calcite.rel.convert.ConverterRule.ConverterRelOptRuleOperand
Add Parameter	predicate : Predicate<? super R> in method public ConverterRelOptRuleOperand(clazz Class<R>, in RelTrait, predicate Predicate<? super R>) from class org.apache.calcite.rel.convert.ConverterRule.ConverterRelOptRuleOperand
Change Return Type	AggregateFunction to AggregateFunctionImpl in method public create(clazz Class<?>) : AggregateFunctionImpl from class org.apache.calcite.schema.impl.AggregateFunctionImpl
Add Method Annotation	@Ignore in method public testFoodmartLattice() : void from class org.apache.calcite.test.JdbcTest
Change Return Type	Bindable to ArrayBindable in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.adapter.spark.SparkHandlerImpl
Change Method Access Modifier	public to package in method package TableScanNode(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) from class org.apache.calcite.interpreter.TableScanNode
Extract Class	org.apache.calcite.interpreter.JoinNode from class org.apache.calcite.interpreter.SortNode
Move Attribute	private sink : Sink from class org.apache.calcite.interpreter.FilterNode to private sink : Sink from class org.apache.calcite.interpreter.JoinNode
Move Attribute	private sink : Sink from class org.apache.calcite.interpreter.FilterNode to private sink : Sink from class org.apache.calcite.interpreter.UnionNode
Move Attribute	private sink : Sink from class org.apache.calcite.interpreter.ProjectNode to private sink : Sink from class org.apache.calcite.interpreter.JoinNode
Move Attribute	private sink : Sink from class org.apache.calcite.interpreter.ProjectNode to private sink : Sink from class org.apache.calcite.interpreter.UnionNode
Move Attribute	private sink : Sink from class org.apache.calcite.interpreter.SortNode to private sink : Sink from class org.apache.calcite.interpreter.JoinNode
Change Method Access Modifier	private to public in method public debugCode(out PrintStream, code String) : void from class org.apache.calcite.util.Util
Add Method Modifier	static in method public debugCode(out PrintStream, code String) : void from class org.apache.calcite.util.Util
Move Method	private debugCode(out PrintStream, code String) : void from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt to public debugCode(out PrintStream, code String) : void from class org.apache.calcite.util.Util
Add Parameter	fieldCount : int in method package getBindable(expr ClassDeclaration, s String, fieldCount int) : Bindable from class org.apache.calcite.adapter.enumerable.EnumerableInterpretable
Change Method Access Modifier	private to package in method package getBindable(expr ClassDeclaration, s String, fieldCount int) : Bindable from class org.apache.calcite.adapter.enumerable.EnumerableInterpretable
Add Method Modifier	static in method package getBindable(expr ClassDeclaration, s String, fieldCount int) : Bindable from class org.apache.calcite.adapter.enumerable.EnumerableInterpretable
Move Method	private getBindable(expr ClassDeclaration, s String) : Bindable from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt to package getBindable(expr ClassDeclaration, s String, fieldCount int) : Bindable from class org.apache.calcite.adapter.enumerable.EnumerableInterpretable
Extract And Move Method	public computeSelfCost(planner RelOptPlanner) : RelOptCost extracted from public computeSelfCost(planner RelOptPlanner) : RelOptCost in class org.apache.calcite.adapter.enumerable.EnumerableWindow & moved to class org.apache.calcite.rel.core.Window
Move And Inline Method	private getNewAccumList() : AccumulatorList moved from class org.apache.calcite.interpreter.AggregateNode to class org.apache.calcite.interpreter.AggregateNode.Grouping & inlined to public send(row Row) : void
Developers have reported that 10708 commits involve refactoring but only 286 involve refactoring operations
There are 4 duplicate commits with refactoring out of the 286 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b332a26b42f23be17de3c
Issue Title: : Remove OneRow and Empty relational expressions; Values will suffice
Refactorings at 71dd68de18644754543442d264b698ea4f164fbc
Rename Class	org.apache.calcite.rel.rules.EmptyPruneRules renamed to org.apache.calcite.rel.rules.PruneEmptyRules
Change Parameter Type	tuples : List<List<RexLiteral>> to tuples : ImmutableList<ImmutableList<RexLiteral>> in method package EnumerableValues(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>, traitSet RelTraitSet) from class org.apache.calcite.adapter.enumerable.EnumerableValues
Change Parameter Type	tuples : List<List<RexLiteral>> to tuples : ImmutableList<ImmutableList<RexLiteral>> in method package JdbcValues(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>, traitSet RelTraitSet) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcValues
Change Return Type	List<List<RexLiteral>> to ImmutableList<ImmutableList<RexLiteral>> in method public getTuples(tag String) : ImmutableList<ImmutableList<RexLiteral>> from class org.apache.calcite.rel.RelInput
Change Attribute Type	F : Function1<List<RexLiteral>,Object> to F : Function1<ImmutableList<RexLiteral>,Object> in class org.apache.calcite.rel.core.Values
Change Parameter Type	tuple : List<RexLiteral> to tuple : ImmutableList<RexLiteral> in method public apply(tuple ImmutableList<RexLiteral>) : Object from class org.apache.calcite.rel.core.Values.F.new Function1<ImmutableList<RexLiteral>,Object>
Change Attribute Type	tuples : List<List<RexLiteral>> to tuples : ImmutableList<ImmutableList<RexLiteral>> in class org.apache.calcite.rel.core.Values
Change Return Type	List<List<RexLiteral>> to ImmutableList<ImmutableList<RexLiteral>> in method public getTuples(input RelInput) : ImmutableList<ImmutableList<RexLiteral>> from class org.apache.calcite.rel.core.Values
Change Return Type	List<List<RexLiteral>> to ImmutableList<ImmutableList<RexLiteral>> in method public getTuples() : ImmutableList<ImmutableList<RexLiteral>> from class org.apache.calcite.rel.core.Values
Change Parameter Type	tuples : List<List<RexLiteral>> to tuples : ImmutableList<ImmutableList<RexLiteral>> in method protected Values(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>, traits RelTraitSet) from class org.apache.calcite.rel.core.Values
Change Variable Type	list : List<List<RexLiteral>> to builder : ImmutableList.Builder<ImmutableList<RexLiteral>> in method public getTuples(tag String) : ImmutableList<ImmutableList<RexLiteral>> from class org.apache.calcite.rel.externalize.RelJsonReader.readRel.input.new RelInput
Rename Variable	list : List<List<RexLiteral>> to builder : ImmutableList.Builder<ImmutableList<RexLiteral>> in method public getTuples(tag String) : ImmutableList<ImmutableList<RexLiteral>> from class org.apache.calcite.rel.externalize.RelJsonReader.readRel.input.new RelInput
Change Return Type	List<List<RexLiteral>> to ImmutableList<ImmutableList<RexLiteral>> in method public getTuples(tag String) : ImmutableList<ImmutableList<RexLiteral>> from class org.apache.calcite.rel.externalize.RelJsonReader.readRel.input.new RelInput
Change Parameter Type	tuples : List<List<RexLiteral>> to tuples : ImmutableList<ImmutableList<RexLiteral>> in method public LogicalValues(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>) from class org.apache.calcite.rel.logical.LogicalValues
Change Variable Type	valuesList : List<RexLiteral> to tupleBuilder : ImmutableList.Builder<RexLiteral> in method protected apply(call RelOptRuleCall, project LogicalProject, filter LogicalFilter, values LogicalValues) : void from class org.apache.calcite.rel.rules.ValuesReduceRule
Add Variable Modifier	final in variable tupleBuilder : ImmutableList.Builder<RexLiteral> in method protected apply(call RelOptRuleCall, project LogicalProject, filter LogicalFilter, values LogicalValues) : void from class org.apache.calcite.rel.rules.ValuesReduceRule
Change Variable Type	tupleList : List<List<RexLiteral>> to tuplesBuilder : ImmutableList.Builder<ImmutableList<RexLiteral>> in method protected apply(call RelOptRuleCall, project LogicalProject, filter LogicalFilter, values LogicalValues) : void from class org.apache.calcite.rel.rules.ValuesReduceRule
Rename Variable	valuesList : List<RexLiteral> to tupleBuilder : ImmutableList.Builder<RexLiteral> in method protected apply(call RelOptRuleCall, project LogicalProject, filter LogicalFilter, values LogicalValues) : void from class org.apache.calcite.rel.rules.ValuesReduceRule
Rename Variable	tupleList : List<List<RexLiteral>> to tuplesBuilder : ImmutableList.Builder<ImmutableList<RexLiteral>> in method protected apply(call RelOptRuleCall, project LogicalProject, filter LogicalFilter, values LogicalValues) : void from class org.apache.calcite.rel.rules.ValuesReduceRule
Change Variable Type	tuple : List<RexLiteral> to tuple : ImmutableList<RexLiteral> in method public trimFields(values LogicalValues, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	newTuples : List<List<RexLiteral>> to newTuples : ImmutableList.Builder<ImmutableList<RexLiteral>> in method public trimFields(values LogicalValues, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Add Variable Modifier	final in variable newTuples : ImmutableList.Builder<ImmutableList<RexLiteral>> in method public trimFields(values LogicalValues, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	newTuple : List<RexLiteral> to newTuple : ImmutableList.Builder<RexLiteral> in method public trimFields(values LogicalValues, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Variable Type	operand : SqlNode to operand : Ord<SqlNode> in method private convertRowValues(bb Blackboard, rowList SqlNode, rows Collection<SqlNode>, allowLiteralsOnly boolean, targetRowType RelDataType) : RelNode from class org.apache.calcite.sql2rel.SqlToRelConverter
Change Variable Type	tupleList : List<List<RexLiteral>> to tupleList : ImmutableList.Builder<ImmutableList<RexLiteral>> in method private convertRowValues(bb Blackboard, rowList SqlNode, rows Collection<SqlNode>, allowLiteralsOnly boolean, targetRowType RelDataType) : RelNode from class org.apache.calcite.sql2rel.SqlToRelConverter
Change Variable Type	tuple : List<RexLiteral> to tuple : ImmutableList.Builder<RexLiteral> in method private convertRowValues(bb Blackboard, rowList SqlNode, rows Collection<SqlNode>, allowLiteralsOnly boolean, targetRowType RelDataType) : RelNode from class org.apache.calcite.sql2rel.SqlToRelConverter
Change Parameter Type	tuples : List<List<RexLiteral>> to tuples : ImmutableList<ImmutableList<RexLiteral>> in method package SparkValues(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>, traitSet RelTraitSet) from class org.apache.calcite.adapter.spark.SparkRules.SparkValues
Change Return Type	Empty to Values in method private empty(node RelNode) : Values from class org.apache.calcite.rel.rules.PruneEmptyRules
Developers have reported that 10708 commits involve refactoring but only 287 involve refactoring operations
There are 4 duplicate commits with refactoring out of the 287 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b332e26b42f23be17de62
Issue Title: : ReduceExpressionsRule throws "duplicate key" exception
Refactorings at 7f815c99c701f6869bcc958ea0e0b04ea731ffe6
Change Variable Type	builder : ImmutableMap.Builder<RexNode,RexLiteral> to builder : Map<RexNode,RexLiteral> in method private predicateConstants(predicates RelOptPredicateList) : ImmutableMap<RexNode,RexLiteral> from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Developers have reported that 10708 commits involve refactoring but only 288 involve refactoring operations
There are 4 duplicate commits with refactoring out of the 288 commits.

No refactorings detected at 957dea1042fcc7a4a26a93f845c5d17cadd5ba1f

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b333f26b42f23be17ded5
Issue Title: : Add GROUP_ID and GROUPING_ID functions
Refactorings at f2a67050b30f727932fd94947c926ae0d7287ded
Extract Superclass	org.apache.calcite.sql.fun.SqlAbstractGroupFunction from classes [org.apache.calcite.sql.fun.SqlGroupingFunction]
Pull Up Method	public validateCall(call SqlCall, validator SqlValidator, scope SqlValidatorScope, operandScope SqlValidatorScope) : void from class org.apache.calcite.sql.fun.SqlGroupingFunction to public validateCall(call SqlCall, validator SqlValidator, scope SqlValidatorScope, operandScope SqlValidatorScope) : void from class org.apache.calcite.sql.fun.SqlAbstractGroupFunction
Developers have reported that 10708 commits involve refactoring but only 289 involve refactoring operations
There are 4 duplicate commits with refactoring out of the 289 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b334826b42f23be17df0c
Issue Title: : FilterIntoJoinRule creates filters containing invalid RexInputRef
Refactorings at 011a6b4ce6cc999bab126dfc2fee58c23aaab074
Add Parameter	predicate : Predicate in method public JoinConditionPushRule(filterFactory RelFactories.FilterFactory, projectFactory RelFactories.ProjectFactory, predicate Predicate) from class org.apache.calcite.rel.rules.FilterJoinRule.JoinConditionPushRule
Add Parameter	predicate : Predicate in method public FilterIntoJoinRule(smart boolean, filterFactory RelFactories.FilterFactory, projectFactory RelFactories.ProjectFactory, predicate Predicate) from class org.apache.calcite.rel.rules.FilterJoinRule.FilterIntoJoinRule
Rename Variable	filterRel : Filter to filter : Filter in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.FilterProjectTransposeRule
Rename Variable	projRel : Project to project : Project in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.FilterProjectTransposeRule
Developers have reported that 10708 commits involve refactoring but only 290 involve refactoring operations
There are 4 duplicate commits with refactoring out of the 290 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b335d26b42f23be17df87
Issue Title: : Remove AbstractConverter
Refactorings at 506c1ab46b6b3e0279c799acc4e4412d542e8b6d
Extract Variable	projects1 : int[] in method private iterable() : Enumerable<Row> from class org.apache.calcite.interpreter.ScanNode
Add Class Modifier	static in class org.apache.calcite.plan.volcano.RuleQueue.RuleMatchImportanceComparator
Rename Attribute	ruleMatchImportanceComparator : Comparator<VolcanoRuleMatch> to MATCH_COMPARATOR : Comparator<VolcanoRuleMatch> in class org.apache.calcite.plan.volcano.RuleQueue
Add Attribute Modifier	static in attribute private MATCH_COMPARATOR : Comparator<VolcanoRuleMatch> from class org.apache.calcite.plan.volcano.RuleQueue
Change Method Access Modifier	package to public in method public compareRels(rels0 RelNode[], rels1 RelNode[]) : int from class org.apache.calcite.rel.RelNodes
Move Method	package compareRels(rels0 RelNode[], rels1 RelNode[]) : int from class org.apache.calcite.plan.volcano.RuleQueue to public compareRels(rels0 RelNode[], rels1 RelNode[]) : int from class org.apache.calcite.rel.RelNodes
Developers have reported that 10708 commits involve refactoring but only 291 involve refactoring operations
There are 4 duplicate commits with refactoring out of the 291 commits.

No refactorings detected at 0c052cc68ac0e215ac53ae3fd5dae59c18eb145d

No refactorings detected at a059f76c79080b0e283cb54e273f1ef89a444282

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b336d26b42f23be17dfee
Issue Title: : Pull up filters rejected by a ProjectableFilterableTable 
Refactorings at bd0b606178252c90805aff49851f4c9d5eea1a0a
Rename Class	org.apache.calcite.rel.rules.FilterTableRule renamed to org.apache.calcite.rel.rules.CalcSplitRule
Rename Parameter	exprs : List<? extends RexNode> to projects : List<? extends RexNode> in method public createProject(child RelNode, projects List<? extends RexNode>, fieldNames List<String>) : RelNode from class org.apache.calcite.adapter.enumerable.EnumerableRel.PROJECT_FACTORY.new RelFactories.ProjectFactory
Extract Variable	table : RelOptTable in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.interpreter.Bindables.BindableTableScanRule
Change Variable Type	scan : TableScan to scan : LogicalTableScan in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.interpreter.Bindables.BindableTableScanRule
Change Method Access Modifier	public to private in method private BindableTableScanRule() from class org.apache.calcite.interpreter.Bindables.BindableTableScanRule
Change Class Access Modifier	private to public in class org.apache.calcite.interpreter.Bindables.BindableTableScan
Add Parameter	filters : ImmutableList<RexNode> in method package BindableTableScan(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable, filters ImmutableList<RexNode>, projects ImmutableIntList) from class org.apache.calcite.interpreter.Bindables.BindableTableScan
Add Parameter	projects : ImmutableIntList in method package BindableTableScan(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable, filters ImmutableList<RexNode>, projects ImmutableIntList) from class org.apache.calcite.interpreter.Bindables.BindableTableScan
Change Method Access Modifier	package to private in method private BindableProjectRule() from class org.apache.calcite.interpreter.Bindables.BindableProjectRule
Change Method Access Modifier	package to private in method private BindableSortRule() from class org.apache.calcite.interpreter.Bindables.BindableSortRule
Change Method Access Modifier	package to private in method private BindableJoinRule() from class org.apache.calcite.interpreter.Bindables.BindableJoinRule
Change Method Access Modifier	package to private in method private BindableUnionRule() from class org.apache.calcite.interpreter.Bindables.BindableUnionRule
Change Method Access Modifier	package to private in method private BindableValuesRule() from class org.apache.calcite.interpreter.Bindables.BindableValuesRule
Change Method Access Modifier	package to private in method private BindableAggregateRule() from class org.apache.calcite.interpreter.Bindables.BindableAggregateRule
Change Method Access Modifier	package to private in method private BindableWindowRule() from class org.apache.calcite.interpreter.Bindables.BindableWindowRule
Add Parameter	inputRowType : RelDataType in method public compile(nodes List<RexNode>, inputRowType RelDataType) : Scalar from class org.apache.calcite.interpreter.Interpreter.FooCompiler
Remove Parameter	inputs : List<RelNode> in method public compile(inputs List<RelNode>, nodes List<RexNode>) : Scalar from class org.apache.calcite.interpreter.Interpreter.FooCompiler
Extract Variable	rel : RelNode in method public Interpreter(dataContext DataContext, rootRel RelNode) from class org.apache.calcite.interpreter.Interpreter
Add Variable Modifier	final in variable compiler : Compiler in method public Interpreter(dataContext DataContext, rootRel RelNode) from class org.apache.calcite.interpreter.Interpreter
Parameterize Variable	inputRowType : RelDataType to inputRowType : RelDataType in method public compile(nodes List<RexNode>, inputRowType RelDataType) : Scalar from class org.apache.calcite.interpreter.JaninoRexCompiler
Remove Variable Modifier	final in variable inputRowType : RelDataType in method public compile(inputs List<RelNode>, nodes List<RexNode>) : Scalar from class org.apache.calcite.interpreter.JaninoRexCompiler
Remove Parameter	inputs : List<RelNode> in method public compile(inputs List<RelNode>, nodes List<RexNode>) : Scalar from class org.apache.calcite.interpreter.JaninoRexCompiler
Change Parameter Type	scan : FilterScan to scan : Bindables.BindableTableScan in method public visit(scan Bindables.BindableTableScan) : void from class org.apache.calcite.interpreter.Nodes.CoreCompiler
Rename Method	private iterable() : Enumerable<Row> renamed to package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode in class org.apache.calcite.interpreter.TableScanNode
Add Variable Modifier	final in variable enumerable : Enumerable<Row> in method package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode from class org.apache.calcite.interpreter.TableScanNode
Replace Attribute With Variable	root : DataContext to root : DataContext in method package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode from class org.apache.calcite.interpreter.TableScanNode
Rename Variable	table : RelOptTable to relOptTable : RelOptTable in method package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode from class org.apache.calcite.interpreter.TableScanNode
Rename Variable	iterable : Enumerable<Row> to enumerable : Enumerable<Row> in method package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode from class org.apache.calcite.interpreter.TableScanNode
Change Return Type	Enumerable<Row> to TableScanNode in method package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode from class org.apache.calcite.interpreter.TableScanNode
Add Parameter	interpreter : Interpreter in method package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode from class org.apache.calcite.interpreter.TableScanNode
Add Parameter	rel : TableScan in method package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode from class org.apache.calcite.interpreter.TableScanNode
Add Parameter	filters : ImmutableList<RexNode> in method package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode from class org.apache.calcite.interpreter.TableScanNode
Add Parameter	projects : ImmutableIntList in method package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode from class org.apache.calcite.interpreter.TableScanNode
Change Method Access Modifier	private to package in method package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode from class org.apache.calcite.interpreter.TableScanNode
Add Method Modifier	static in method package create(interpreter Interpreter, rel TableScan, filters ImmutableList<RexNode>, projects ImmutableIntList) : TableScanNode from class org.apache.calcite.interpreter.TableScanNode
Replace Variable With Attribute	iterable : Enumerable<Row> to enumerable : Enumerable<Row> in method public run() : void from class org.apache.calcite.interpreter.TableScanNode
Inline Method	private deduceElementType() : Class inlined to public toRel(context ToRelContext) : RelNode in class org.apache.calcite.prepare.RelOptTableImpl
Extract Method	private getClassExpressionFunction(tableEntry CalciteSchema.TableEntry, table Table) : Function<Class,Expression> extracted from public create(schema RelOptSchema, rowType RelDataType, tableEntry CalciteSchema.TableEntry, rowCount Double) : RelOptTableImpl in class org.apache.calcite.prepare.RelOptTableImpl
Add Variable Modifier	final in variable cluster : RelOptCluster in method public toRel(context ToRelContext) : RelNode from class org.apache.calcite.prepare.RelOptTableImpl
Rename Parameter	traits : RelTraitSet to traitSet : RelTraitSet in method protected TableScan(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable) from class org.apache.calcite.rel.core.TableScan
Add Parameter Modifier	final in parameter relOptTable : RelOptTable in method public create(cluster RelOptCluster, relOptTable RelOptTable) : LogicalTableScan from class org.apache.calcite.rel.logical.LogicalTableScan
Rename Parameter	table : RelOptTable to relOptTable : RelOptTable in method public create(cluster RelOptCluster, relOptTable RelOptTable) : LogicalTableScan from class org.apache.calcite.rel.logical.LogicalTableScan
Extract Method	package rowToString(resultSet ResultSet, buf StringBuilder, metaData ResultSetMetaData) : StringBuilder extracted from package toString(resultSet ResultSet) : String in class org.apache.calcite.test.CalciteAssert
Extract Method	package rowToString(resultSet ResultSet, buf StringBuilder, metaData ResultSetMetaData) : StringBuilder extracted from package toStringList(resultSet ResultSet, list Collection<String>) : Collection<String> in class org.apache.calcite.test.CalciteAssert
Add Variable Modifier	final in variable list : ImmutableIntList in method public testImmutableIntList() : void from class org.apache.calcite.util.UtilTest
Change Attribute Type	INSTANCE : FilterTableRule to INSTANCE : CalcSplitRule in class org.apache.calcite.rel.rules.CalcSplitRule
Change Variable Type	filter : Filter to calc : Calc in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.CalcSplitRule
Rename Variable	filter : Filter to calc : Calc in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.CalcSplitRule
Rename Variable	newInterpreter : RelNode to rel : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.CalcSplitRule
Add Method Annotation	@Override in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.CalcSplitRule
Change Attribute Access Modifier	private to public in attribute public filters : ImmutableList<RexNode> from class org.apache.calcite.interpreter.Bindables.BindableTableScan
Move Attribute	private filters : ImmutableList<RexNode> from class org.apache.calcite.interpreter.TableScanNode to public filters : ImmutableList<RexNode> from class org.apache.calcite.interpreter.Bindables.BindableTableScan
Extract And Move Method	public create(cluster RelOptCluster, relOptTable RelOptTable) : EnumerableTableScan extracted from public toRel(context ToRelContext) : RelNode in class org.apache.calcite.prepare.RelOptTableImpl & moved to class org.apache.calcite.adapter.enumerable.EnumerableTableScan
Remove Parameter	inputs : List<RelNode> in method public compile(inputs List<RelNode>, nodes List<RexNode>) : Scalar from class org.apache.calcite.interpreter.Interpreter.ScalarCompiler
Add Parameter	inputRowType : RelDataType in method public compile(nodes List<RexNode>, inputRowType RelDataType) : Scalar from class org.apache.calcite.interpreter.Interpreter.ScalarCompiler
Developers have reported that 10708 commits involve refactoring but only 292 involve refactoring operations
There are 4 duplicate commits with refactoring out of the 292 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b339026b42f23be17e081
Issue Title: : Add RelDistribution trait and Exchange relational expression
Refactorings at 18d4f70a7ebd5f5b3b0d8b83820f8d770be1d19e
Rename Method	public replaceIf(def RelTraitDef<T>, traitSupplier Supplier<List<T>>) : RelTraitSet renamed to public replaceIfs(def RelTraitDef<T>, traitSupplier Supplier<List<T>>) : RelTraitSet in class org.apache.calcite.plan.RelTraitSet
Change Parameter Type	sort : Sort to sort : LogicalSort in method public visit(sort LogicalSort) : RelNode from class org.apache.calcite.prepare.CalciteMaterializer.RelNullShuttle
Change Parameter Type	sort : Sort to sort : LogicalSort in method public visit(sort LogicalSort) : RelNode from class org.apache.calcite.rel.RelHomogeneousShuttle
Add Method Annotation	@Deprecated in method public getCollationList() : List<RelCollation> from class org.apache.calcite.rel.RelNode
Change Parameter Type	sort : Sort to sort : LogicalSort in method public visit(sort LogicalSort) : RelNode from class org.apache.calcite.rel.RelShuttleImpl
Change Parameter Type	projects : List<RexNode> to projects : List<? extends RexNode> in method public getMapping(inputFieldCount int, projects List<? extends RexNode>) : Mappings.TargetMapping from class org.apache.calcite.rel.core.Project
Rename Variable	child : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.CalcRemoveRule
Extract Method	private copyFromCollection(list Collection<? extends Number>) : ImmutableIntList extracted from public copyOf(list Collection<? extends Number>) : ImmutableIntList in class org.apache.calcite.util.ImmutableIntList
Extract Variable	collection : Collection<? extends Number> in method public copyOf(list Iterable<? extends Number>) : ImmutableIntList from class org.apache.calcite.util.ImmutableIntList
Change Parameter Type	list : Collection<? extends Number> to list : Iterable<? extends Number> in method public copyOf(list Iterable<? extends Number>) : ImmutableIntList from class org.apache.calcite.util.ImmutableIntList
Move Method	public accept(shuttle RelShuttle) : RelNode from class org.apache.calcite.rel.core.Sort to public accept(shuttle RelShuttle) : RelNode from class org.apache.calcite.rel.logical.LogicalExchange
Change Parameter Type	sort : Sort to sort : LogicalSort in method public visit(sort LogicalSort) : RelNode from class org.apache.calcite.rel.RelShuttle
Developers have reported that 10708 commits involve refactoring but only 293 involve refactoring operations
There are 4 duplicate commits with refactoring out of the 293 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b339626b42f23be17e096
Issue Title: : Add EnumerableMergeJoin, which exploits sorted inputs
Refactorings at 2709896eb176c14605b1ddc4be57d916ebeb0fe8
Rename Parameter	child : RelNode to input : RelNode in method public EnumerableCalc(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.adapter.enumerable.EnumerableCalc
Add Method Annotation	@Deprecated in method public EnumerableCalc(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.adapter.enumerable.EnumerableCalc
Remove Parameter	collationList : List<RelCollation> in method public copy(traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) : EnumerableCalc from class org.apache.calcite.adapter.enumerable.EnumerableCalc
Extract Variable	input : RelNode in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.enumerable.EnumerableCalcRule
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.adapter.enumerable.EnumerableConvention
Rename Variable	rel : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.enumerable.EnumerableFilterToCalcRule
Rename Parameter	child : RelNode to input : RelNode in method public EnumerableLimit(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, offset RexNode, fetch RexNode) from class org.apache.calcite.adapter.enumerable.EnumerableLimit
Rename Variable	child : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.enumerable.EnumerableProjectToCalcRule
Rename Parameter	child : RelNode to input : RelNode in method public EnumerableSort(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, collation RelCollation, offset RexNode, fetch RexNode) from class org.apache.calcite.adapter.enumerable.EnumerableSort
Extract Method	public create(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>) : EnumerableValues extracted from public copy(traitSet RelTraitSet, inputs List<RelNode>) : RelNode in class org.apache.calcite.adapter.enumerable.EnumerableValues
Change Method Access Modifier	package to private in method private EnumerableValues(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>, traitSet RelTraitSet) from class org.apache.calcite.adapter.enumerable.EnumerableValues
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.interpreter.BindableConvention
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.interpreter.InterpretableConvention
Remove Parameter Modifier	final in parameter fieldCollation : RelFieldCollation in method private comparator(fieldCollation RelFieldCollation) : Comparator<Row> from class org.apache.calcite.interpreter.SortNode
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.plan.Convention.Impl
Encapsulate Attribute	private emptyTraitSet : RelTraitSet from class org.apache.calcite.plan.RelOptCluster
Extract Variable	fieldNames2 : List<String> in method public createProject(child RelNode, exprs List<? extends RexNode>, fieldNames List<String>, optimize boolean) : RelNode from class org.apache.calcite.plan.RelOptUtil
Add Parameter Annotation	@Nonnull in parameter key : T in method public load(key T) : T from class org.apache.calcite.plan.RelTraitDef.canonicalMap.build.new CacheLoader<T,T>
Rename Method	public subsumes(that RelTraitSet) : boolean renamed to public satisfies(that RelTraitSet) : boolean in class org.apache.calcite.plan.RelTraitSet
Extract Variable	traitSet : RelTraitSet in method public add(rel RelNode) : RelSubset from class org.apache.calcite.plan.volcano.RelSet
Add Variable Modifier	final in variable subset : RelSubset in method public add(rel RelNode) : RelSubset from class org.apache.calcite.plan.volcano.RelSet
Rename Method	private asd(rel RelNode, set RelSet) : RelSubset renamed to private addRelToSet(rel RelNode, set RelSet) : RelSubset in class org.apache.calcite.plan.volcano.VolcanoPlanner
Extract Method	private forward1(s RelSet, p RelSet) : RelSet extracted from private merge(set RelSet, set2 RelSet) : RelSet in class org.apache.calcite.plan.volcano.VolcanoPlanner
Extract Method	private equivRoot(s RelSet) : RelSet extracted from private merge(set RelSet, set2 RelSet) : RelSet in class org.apache.calcite.plan.volcano.VolcanoPlanner
Rename Parameter	set2 : RelSet to p : RelSet in method private forward1(s RelSet, p RelSet) : RelSet from class org.apache.calcite.plan.volcano.VolcanoPlanner
Rename Parameter	set2 : RelSet to s : RelSet in method private equivRoot(s RelSet) : RelSet from class org.apache.calcite.plan.volcano.VolcanoPlanner
Rename Variable	child : RelNode to input : RelNode in method public translate(expression Expression) : RelNode from class org.apache.calcite.prepare.LixToRelTranslator
Remove Parameter	logicalRowType : RelDataType in method protected optimize(logicalRowType RelDataType, rootRel RelNode, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : RelNode from class org.apache.calcite.prepare.Prepare
Extract Variable	traits : RelTraitSet in method public toRel(context ToRelContext) : RelNode from class org.apache.calcite.prepare.RelOptTableImpl
Add Method Annotation	@Deprecated in method public getCollationList() : List<RelCollation> from class org.apache.calcite.rel.AbstractRelNode
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.rel.RelCollationImpl
Add Method Annotation	@Deprecated in method protected Calc(cluster RelOptCluster, traits RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.rel.core.Calc
Remove Parameter	collationList : List<RelCollation> in method public abstract copy(traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) : Calc from class org.apache.calcite.rel.core.Calc
Add Method Annotation	@Deprecated in method public LogicalAggregate(cluster RelOptCluster, child RelNode, indicator boolean, groupSet ImmutableBitSet, groupSets List<ImmutableBitSet>, aggCalls List<AggregateCall>) from class org.apache.calcite.rel.logical.LogicalAggregate
Rename Parameter	traits : RelTraitSet to traitSet : RelTraitSet in method public LogicalCalc(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.rel.logical.LogicalCalc
Add Method Annotation	@Deprecated in method public LogicalCalc(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.rel.logical.LogicalCalc
Remove Parameter	collationList : List<RelCollation> in method public copy(traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) : LogicalCalc from class org.apache.calcite.rel.logical.LogicalCalc
Add Method Annotation	@Deprecated in method public LogicalCorrelate(cluster RelOptCluster, left RelNode, right RelNode, correlationId CorrelationId, requiredColumns ImmutableBitSet, joinType SemiJoinType) from class org.apache.calcite.rel.logical.LogicalCorrelate
Add Method Annotation	@Deprecated in method public LogicalFilter(cluster RelOptCluster, child RelNode, condition RexNode) from class org.apache.calcite.rel.logical.LogicalFilter
Add Method Annotation	@Deprecated in method public LogicalIntersect(cluster RelOptCluster, inputs List<RelNode>, all boolean) from class org.apache.calcite.rel.logical.LogicalIntersect
Add Method Annotation	@Deprecated in method public LogicalJoin(cluster RelOptCluster, left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>) from class org.apache.calcite.rel.logical.LogicalJoin
Add Method Annotation	@Deprecated in method public LogicalJoin(cluster RelOptCluster, left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>, semiJoinDone boolean, systemFieldList ImmutableList<RelDataTypeField>) from class org.apache.calcite.rel.logical.LogicalJoin
Add Method Annotation	@Deprecated in method public LogicalMinus(cluster RelOptCluster, inputs List<RelNode>, all boolean) from class org.apache.calcite.rel.logical.LogicalMinus
Add Method Annotation	@Deprecated in method public LogicalProject(cluster RelOptCluster, child RelNode, exps List<RexNode>, fieldNames List<String>) from class org.apache.calcite.rel.logical.LogicalProject
Rename Parameter	child : RelNode to input : RelNode in method public LogicalProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, exps List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.rel.logical.LogicalProject
Add Method Annotation	@Deprecated in method public LogicalTableFunctionScan(cluster RelOptCluster, inputs List<RelNode>, rexCall RexNode, elementType Type, rowType RelDataType, columnMappings Set<RelColumnMapping>) from class org.apache.calcite.rel.logical.LogicalTableFunctionScan
Rename Parameter	child : RelNode to input : RelNode in method public LogicalTableModify(cluster RelOptCluster, table RelOptTable, schema Prepare.CatalogReader, input RelNode, operation Operation, updateColumnList List<String>, flattened boolean) from class org.apache.calcite.rel.logical.LogicalTableModify
Add Method Annotation	@Deprecated in method public LogicalTableModify(cluster RelOptCluster, table RelOptTable, schema Prepare.CatalogReader, input RelNode, operation Operation, updateColumnList List<String>, flattened boolean) from class org.apache.calcite.rel.logical.LogicalTableModify
Add Method Annotation	@Deprecated in method public LogicalTableScan(cluster RelOptCluster, table RelOptTable) from class org.apache.calcite.rel.logical.LogicalTableScan
Add Method Annotation	@Deprecated in method public LogicalUnion(cluster RelOptCluster, inputs List<RelNode>, all boolean) from class org.apache.calcite.rel.logical.LogicalUnion
Add Method Annotation	@Deprecated in method public LogicalValues(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>) from class org.apache.calcite.rel.logical.LogicalValues
Rename Variable	child : LogicalProject to input : LogicalProject in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.AggregateProjectPullUpConstantsRule
Rename Parameter	oldAggRel : Aggregate to oldAggregate : Aggregate in method protected newAggregateRel(oldAggregate Aggregate, input RelNode, newCalls List<AggregateCall>) : Aggregate from class org.apache.calcite.rel.rules.AggregateReduceFunctionsRule
Rename Parameter	inputRel : RelNode to input : RelNode in method protected newAggregateRel(oldAggregate Aggregate, input RelNode, newCalls List<AggregateCall>) : Aggregate from class org.apache.calcite.rel.rules.AggregateReduceFunctionsRule
Add Attribute Annotation	@Deprecated in attribute public NAME_CALC_INSTANCE : ProjectRemoveRule from class org.apache.calcite.rel.rules.ProjectRemoveRule
Add Method Annotation	@Deprecated in method public strip(project Project, useNamesInIdentityProjCalc boolean) : RelNode from class org.apache.calcite.rel.rules.ProjectRemoveRule
Add Method Annotation	@Deprecated in method public isTrivial(project Project, useNamesInIdentityProjCalc boolean) : boolean from class org.apache.calcite.rel.rules.ProjectRemoveRule
Add Method Annotation	@Deprecated in method public isIdentity(exps List<? extends RexNode>, rowType RelDataType, childRowType RelDataType) : boolean from class org.apache.calcite.rel.rules.ProjectRemoveRule
Rename Variable	child : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ProjectToCalcRule
Rename Variable	child : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ProjectToWindowRule.PROJECT.new ProjectToWindowRule
Inline Variable	operands : List<RexNode> in method public expand(call RexCall) : RexNode from class org.apache.calcite.rel.rules.ReduceDecimalsRule.CastArgAsTypeExpander
Add Method Annotation	@Deprecated in method public containIdentity(exps List<? extends RexNode>, rowType RelDataType, childRowType RelDataType) : boolean from class org.apache.calcite.rex.RexUtil
Extract Method	public of(rowCount double, keys List<ImmutableBitSet>, collations List<RelCollation>) : Statistic extracted from public of(rowCount double, keys List<ImmutableBitSet>) : Statistic in class org.apache.calcite.schema.Statistics
Inline Variable	operandList : List<SqlNode> in method public acceptCall(visitor SqlVisitor<R>, call SqlCall, onlyExpressions boolean, argHandler SqlBasicVisitor.ArgHandler<R>) : void from class org.apache.calcite.sql.SqlWindow.SqlWindowOperator
Inline Variable	rands : List<SqlNode> in method public unparse(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int) : void from class org.apache.calcite.sql.fun.SqlLiteralChainOperator
Add Method Annotation	@Deprecated in method public RelFieldTrimmer(validator SqlValidator, projectFactory RelFactories.ProjectFactory, filterFactory RelFactories.FilterFactory, joinFactory RelFactories.JoinFactory, semiJoinFactory RelFactories.SemiJoinFactory, sortFactory RelFactories.SortFactory, aggregateFactory RelFactories.AggregateFactory, setOpFactory RelFactories.SetOpFactory, useNamesInIdentityProjCalc boolean) from class org.apache.calcite.sql2rel.RelFieldTrimmer
Rename Variable	newChild : RelNode to newInput : RelNode in method public rewriteRel(rel LogicalCalc) : void from class org.apache.calcite.sql2rel.RelStructuredTypeFlattener
Extract Variable	size : int in method public startsWith(list0 List<E>, list1 List<E>) : boolean from class org.apache.calcite.util.Util
Rename Variable	table : LogicalTableScan to scan : LogicalTableScan in method public apply(cluster RelOptCluster, relOptSchema RelOptSchema, rootSchema SchemaPlus) : String from class org.apache.calcite.plan.RelWriterTest.testWriter.s.withPlanner.new Frameworks.PlannerAction<String>
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.plan.volcano.VolcanoPlannerTraitTest.AltTrait
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,SqlParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,SqlParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Change Parameter Type	iterable : Iterable<E> to iterable : Iterable<? extends E> in method public zip(iterable Iterable<? extends E>) : Iterable<Ord<E>> from class org.apache.calcite.linq4j.Ord
Change Parameter Type	iterator : Iterator<E> to iterator : Iterator<? extends E> in method public zip(iterator Iterator<? extends E>) : Iterator<Ord<E>> from class org.apache.calcite.linq4j.Ord
Extract Class	org.apache.calcite.rel.RelCollations from class org.apache.calcite.rel.RelCollationImpl
Move Method	public of(fieldCollations RelFieldCollation...) : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public of(fieldCollations RelFieldCollation...) : RelCollation from class org.apache.calcite.rel.RelCollations
Move Method	public of(fieldCollations List<RelFieldCollation>) : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public of(fieldCollations List<RelFieldCollation>) : RelCollation from class org.apache.calcite.rel.RelCollations
Move Method	public createSingleton(fieldIndex int) : List<RelCollation> from class org.apache.calcite.rel.RelCollationImpl to public createSingleton(fieldIndex int) : List<RelCollation> from class org.apache.calcite.rel.RelCollations
Move Method	public isValid(rowType RelDataType, collationList List<RelCollation>, fail boolean) : boolean from class org.apache.calcite.rel.RelCollationImpl to public isValid(rowType RelDataType, collationList List<RelCollation>, fail boolean) : boolean from class org.apache.calcite.rel.RelCollations
Move Method	public equal(collationList1 List<RelCollation>, collationList2 List<RelCollation>) : boolean from class org.apache.calcite.rel.RelCollationImpl to public equal(collationList1 List<RelCollation>, collationList2 List<RelCollation>) : boolean from class org.apache.calcite.rel.RelCollations
Move Method	public ordinals(collation RelCollation) : List<Integer> from class org.apache.calcite.rel.RelCollationImpl to public ordinals(collation RelCollation) : List<Integer> from class org.apache.calcite.rel.RelCollations
Move Attribute	public EMPTY : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public EMPTY : RelCollation from class org.apache.calcite.rel.RelCollations
Move Attribute	public PRESERVE : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public PRESERVE : RelCollation from class org.apache.calcite.rel.RelCollations
Change Method Access Modifier	private to public in method public compare(c1 Comparable, c2 Comparable, nullComparison int) : int from class org.apache.calcite.rel.RelFieldCollation
Move Method	private compare(c1 Comparable, c2 Comparable, nullComparison int) : int from class org.apache.calcite.interpreter.SortNode to public compare(c1 Comparable, c2 Comparable, nullComparison int) : int from class org.apache.calcite.rel.RelFieldCollation
Extract And Move Method	public create(inputs List<RelNode>, all boolean) : LogicalIntersect extracted from public createSetOp(kind SqlKind, inputs List<RelNode>, all boolean) : RelNode in class org.apache.calcite.rel.core.RelFactories.SetOpFactoryImpl & moved to class org.apache.calcite.rel.logical.LogicalIntersect
Extract And Move Method	public create(left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>, semiJoinDone boolean, systemFieldList ImmutableList<RelDataTypeField>) : LogicalJoin extracted from public createJoin(left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>, semiJoinDone boolean) : RelNode in class org.apache.calcite.rel.core.RelFactories.JoinFactoryImpl & moved to class org.apache.calcite.rel.logical.LogicalJoin
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.plan.RelTrait
Developers have reported that 10708 commits involve refactoring but only 294 involve refactoring operations
There are 4 duplicate commits with refactoring out of the 294 commits.

No refactorings detected at c0120dd80bfe5e5fb077a5b631efbccb35afd9eb

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b339626b42f23be17e097
Issue Title: : Add collation as a trait and a kind of RelNode metadata
Refactorings at 2709896eb176c14605b1ddc4be57d916ebeb0fe8
Rename Parameter	child : RelNode to input : RelNode in method public EnumerableCalc(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.adapter.enumerable.EnumerableCalc
Add Method Annotation	@Deprecated in method public EnumerableCalc(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.adapter.enumerable.EnumerableCalc
Remove Parameter	collationList : List<RelCollation> in method public copy(traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) : EnumerableCalc from class org.apache.calcite.adapter.enumerable.EnumerableCalc
Extract Variable	input : RelNode in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.enumerable.EnumerableCalcRule
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.adapter.enumerable.EnumerableConvention
Rename Variable	rel : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.enumerable.EnumerableFilterToCalcRule
Rename Parameter	child : RelNode to input : RelNode in method public EnumerableLimit(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, offset RexNode, fetch RexNode) from class org.apache.calcite.adapter.enumerable.EnumerableLimit
Rename Variable	child : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.enumerable.EnumerableProjectToCalcRule
Rename Parameter	child : RelNode to input : RelNode in method public EnumerableSort(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, collation RelCollation, offset RexNode, fetch RexNode) from class org.apache.calcite.adapter.enumerable.EnumerableSort
Extract Method	public create(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>) : EnumerableValues extracted from public copy(traitSet RelTraitSet, inputs List<RelNode>) : RelNode in class org.apache.calcite.adapter.enumerable.EnumerableValues
Change Method Access Modifier	package to private in method private EnumerableValues(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>, traitSet RelTraitSet) from class org.apache.calcite.adapter.enumerable.EnumerableValues
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.interpreter.BindableConvention
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.interpreter.InterpretableConvention
Remove Parameter Modifier	final in parameter fieldCollation : RelFieldCollation in method private comparator(fieldCollation RelFieldCollation) : Comparator<Row> from class org.apache.calcite.interpreter.SortNode
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.plan.Convention.Impl
Encapsulate Attribute	private emptyTraitSet : RelTraitSet from class org.apache.calcite.plan.RelOptCluster
Extract Variable	fieldNames2 : List<String> in method public createProject(child RelNode, exprs List<? extends RexNode>, fieldNames List<String>, optimize boolean) : RelNode from class org.apache.calcite.plan.RelOptUtil
Add Parameter Annotation	@Nonnull in parameter key : T in method public load(key T) : T from class org.apache.calcite.plan.RelTraitDef.canonicalMap.build.new CacheLoader<T,T>
Rename Method	public subsumes(that RelTraitSet) : boolean renamed to public satisfies(that RelTraitSet) : boolean in class org.apache.calcite.plan.RelTraitSet
Extract Variable	traitSet : RelTraitSet in method public add(rel RelNode) : RelSubset from class org.apache.calcite.plan.volcano.RelSet
Add Variable Modifier	final in variable subset : RelSubset in method public add(rel RelNode) : RelSubset from class org.apache.calcite.plan.volcano.RelSet
Rename Method	private asd(rel RelNode, set RelSet) : RelSubset renamed to private addRelToSet(rel RelNode, set RelSet) : RelSubset in class org.apache.calcite.plan.volcano.VolcanoPlanner
Extract Method	private forward1(s RelSet, p RelSet) : RelSet extracted from private merge(set RelSet, set2 RelSet) : RelSet in class org.apache.calcite.plan.volcano.VolcanoPlanner
Extract Method	private equivRoot(s RelSet) : RelSet extracted from private merge(set RelSet, set2 RelSet) : RelSet in class org.apache.calcite.plan.volcano.VolcanoPlanner
Rename Parameter	set2 : RelSet to p : RelSet in method private forward1(s RelSet, p RelSet) : RelSet from class org.apache.calcite.plan.volcano.VolcanoPlanner
Rename Parameter	set2 : RelSet to s : RelSet in method private equivRoot(s RelSet) : RelSet from class org.apache.calcite.plan.volcano.VolcanoPlanner
Rename Variable	child : RelNode to input : RelNode in method public translate(expression Expression) : RelNode from class org.apache.calcite.prepare.LixToRelTranslator
Remove Parameter	logicalRowType : RelDataType in method protected optimize(logicalRowType RelDataType, rootRel RelNode, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : RelNode from class org.apache.calcite.prepare.Prepare
Extract Variable	traits : RelTraitSet in method public toRel(context ToRelContext) : RelNode from class org.apache.calcite.prepare.RelOptTableImpl
Add Method Annotation	@Deprecated in method public getCollationList() : List<RelCollation> from class org.apache.calcite.rel.AbstractRelNode
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.rel.RelCollationImpl
Add Method Annotation	@Deprecated in method protected Calc(cluster RelOptCluster, traits RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.rel.core.Calc
Remove Parameter	collationList : List<RelCollation> in method public abstract copy(traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) : Calc from class org.apache.calcite.rel.core.Calc
Add Method Annotation	@Deprecated in method public LogicalAggregate(cluster RelOptCluster, child RelNode, indicator boolean, groupSet ImmutableBitSet, groupSets List<ImmutableBitSet>, aggCalls List<AggregateCall>) from class org.apache.calcite.rel.logical.LogicalAggregate
Rename Parameter	traits : RelTraitSet to traitSet : RelTraitSet in method public LogicalCalc(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.rel.logical.LogicalCalc
Add Method Annotation	@Deprecated in method public LogicalCalc(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.rel.logical.LogicalCalc
Remove Parameter	collationList : List<RelCollation> in method public copy(traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) : LogicalCalc from class org.apache.calcite.rel.logical.LogicalCalc
Add Method Annotation	@Deprecated in method public LogicalCorrelate(cluster RelOptCluster, left RelNode, right RelNode, correlationId CorrelationId, requiredColumns ImmutableBitSet, joinType SemiJoinType) from class org.apache.calcite.rel.logical.LogicalCorrelate
Add Method Annotation	@Deprecated in method public LogicalFilter(cluster RelOptCluster, child RelNode, condition RexNode) from class org.apache.calcite.rel.logical.LogicalFilter
Add Method Annotation	@Deprecated in method public LogicalIntersect(cluster RelOptCluster, inputs List<RelNode>, all boolean) from class org.apache.calcite.rel.logical.LogicalIntersect
Add Method Annotation	@Deprecated in method public LogicalJoin(cluster RelOptCluster, left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>) from class org.apache.calcite.rel.logical.LogicalJoin
Add Method Annotation	@Deprecated in method public LogicalJoin(cluster RelOptCluster, left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>, semiJoinDone boolean, systemFieldList ImmutableList<RelDataTypeField>) from class org.apache.calcite.rel.logical.LogicalJoin
Add Method Annotation	@Deprecated in method public LogicalMinus(cluster RelOptCluster, inputs List<RelNode>, all boolean) from class org.apache.calcite.rel.logical.LogicalMinus
Add Method Annotation	@Deprecated in method public LogicalProject(cluster RelOptCluster, child RelNode, exps List<RexNode>, fieldNames List<String>) from class org.apache.calcite.rel.logical.LogicalProject
Rename Parameter	child : RelNode to input : RelNode in method public LogicalProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, exps List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.rel.logical.LogicalProject
Add Method Annotation	@Deprecated in method public LogicalTableFunctionScan(cluster RelOptCluster, inputs List<RelNode>, rexCall RexNode, elementType Type, rowType RelDataType, columnMappings Set<RelColumnMapping>) from class org.apache.calcite.rel.logical.LogicalTableFunctionScan
Rename Parameter	child : RelNode to input : RelNode in method public LogicalTableModify(cluster RelOptCluster, table RelOptTable, schema Prepare.CatalogReader, input RelNode, operation Operation, updateColumnList List<String>, flattened boolean) from class org.apache.calcite.rel.logical.LogicalTableModify
Add Method Annotation	@Deprecated in method public LogicalTableModify(cluster RelOptCluster, table RelOptTable, schema Prepare.CatalogReader, input RelNode, operation Operation, updateColumnList List<String>, flattened boolean) from class org.apache.calcite.rel.logical.LogicalTableModify
Add Method Annotation	@Deprecated in method public LogicalTableScan(cluster RelOptCluster, table RelOptTable) from class org.apache.calcite.rel.logical.LogicalTableScan
Add Method Annotation	@Deprecated in method public LogicalUnion(cluster RelOptCluster, inputs List<RelNode>, all boolean) from class org.apache.calcite.rel.logical.LogicalUnion
Add Method Annotation	@Deprecated in method public LogicalValues(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>) from class org.apache.calcite.rel.logical.LogicalValues
Rename Variable	child : LogicalProject to input : LogicalProject in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.AggregateProjectPullUpConstantsRule
Rename Parameter	oldAggRel : Aggregate to oldAggregate : Aggregate in method protected newAggregateRel(oldAggregate Aggregate, input RelNode, newCalls List<AggregateCall>) : Aggregate from class org.apache.calcite.rel.rules.AggregateReduceFunctionsRule
Rename Parameter	inputRel : RelNode to input : RelNode in method protected newAggregateRel(oldAggregate Aggregate, input RelNode, newCalls List<AggregateCall>) : Aggregate from class org.apache.calcite.rel.rules.AggregateReduceFunctionsRule
Add Attribute Annotation	@Deprecated in attribute public NAME_CALC_INSTANCE : ProjectRemoveRule from class org.apache.calcite.rel.rules.ProjectRemoveRule
Add Method Annotation	@Deprecated in method public strip(project Project, useNamesInIdentityProjCalc boolean) : RelNode from class org.apache.calcite.rel.rules.ProjectRemoveRule
Add Method Annotation	@Deprecated in method public isTrivial(project Project, useNamesInIdentityProjCalc boolean) : boolean from class org.apache.calcite.rel.rules.ProjectRemoveRule
Add Method Annotation	@Deprecated in method public isIdentity(exps List<? extends RexNode>, rowType RelDataType, childRowType RelDataType) : boolean from class org.apache.calcite.rel.rules.ProjectRemoveRule
Rename Variable	child : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ProjectToCalcRule
Rename Variable	child : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ProjectToWindowRule.PROJECT.new ProjectToWindowRule
Inline Variable	operands : List<RexNode> in method public expand(call RexCall) : RexNode from class org.apache.calcite.rel.rules.ReduceDecimalsRule.CastArgAsTypeExpander
Add Method Annotation	@Deprecated in method public containIdentity(exps List<? extends RexNode>, rowType RelDataType, childRowType RelDataType) : boolean from class org.apache.calcite.rex.RexUtil
Extract Method	public of(rowCount double, keys List<ImmutableBitSet>, collations List<RelCollation>) : Statistic extracted from public of(rowCount double, keys List<ImmutableBitSet>) : Statistic in class org.apache.calcite.schema.Statistics
Inline Variable	operandList : List<SqlNode> in method public acceptCall(visitor SqlVisitor<R>, call SqlCall, onlyExpressions boolean, argHandler SqlBasicVisitor.ArgHandler<R>) : void from class org.apache.calcite.sql.SqlWindow.SqlWindowOperator
Inline Variable	rands : List<SqlNode> in method public unparse(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int) : void from class org.apache.calcite.sql.fun.SqlLiteralChainOperator
Add Method Annotation	@Deprecated in method public RelFieldTrimmer(validator SqlValidator, projectFactory RelFactories.ProjectFactory, filterFactory RelFactories.FilterFactory, joinFactory RelFactories.JoinFactory, semiJoinFactory RelFactories.SemiJoinFactory, sortFactory RelFactories.SortFactory, aggregateFactory RelFactories.AggregateFactory, setOpFactory RelFactories.SetOpFactory, useNamesInIdentityProjCalc boolean) from class org.apache.calcite.sql2rel.RelFieldTrimmer
Rename Variable	newChild : RelNode to newInput : RelNode in method public rewriteRel(rel LogicalCalc) : void from class org.apache.calcite.sql2rel.RelStructuredTypeFlattener
Extract Variable	size : int in method public startsWith(list0 List<E>, list1 List<E>) : boolean from class org.apache.calcite.util.Util
Rename Variable	table : LogicalTableScan to scan : LogicalTableScan in method public apply(cluster RelOptCluster, relOptSchema RelOptSchema, rootSchema SchemaPlus) : String from class org.apache.calcite.plan.RelWriterTest.testWriter.s.withPlanner.new Frameworks.PlannerAction<String>
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.plan.volcano.VolcanoPlannerTraitTest.AltTrait
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,SqlParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,SqlParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Change Parameter Type	iterable : Iterable<E> to iterable : Iterable<? extends E> in method public zip(iterable Iterable<? extends E>) : Iterable<Ord<E>> from class org.apache.calcite.linq4j.Ord
Change Parameter Type	iterator : Iterator<E> to iterator : Iterator<? extends E> in method public zip(iterator Iterator<? extends E>) : Iterator<Ord<E>> from class org.apache.calcite.linq4j.Ord
Extract Class	org.apache.calcite.rel.RelCollations from class org.apache.calcite.rel.RelCollationImpl
Move Method	public of(fieldCollations RelFieldCollation...) : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public of(fieldCollations RelFieldCollation...) : RelCollation from class org.apache.calcite.rel.RelCollations
Move Method	public of(fieldCollations List<RelFieldCollation>) : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public of(fieldCollations List<RelFieldCollation>) : RelCollation from class org.apache.calcite.rel.RelCollations
Move Method	public createSingleton(fieldIndex int) : List<RelCollation> from class org.apache.calcite.rel.RelCollationImpl to public createSingleton(fieldIndex int) : List<RelCollation> from class org.apache.calcite.rel.RelCollations
Move Method	public isValid(rowType RelDataType, collationList List<RelCollation>, fail boolean) : boolean from class org.apache.calcite.rel.RelCollationImpl to public isValid(rowType RelDataType, collationList List<RelCollation>, fail boolean) : boolean from class org.apache.calcite.rel.RelCollations
Move Method	public equal(collationList1 List<RelCollation>, collationList2 List<RelCollation>) : boolean from class org.apache.calcite.rel.RelCollationImpl to public equal(collationList1 List<RelCollation>, collationList2 List<RelCollation>) : boolean from class org.apache.calcite.rel.RelCollations
Move Method	public ordinals(collation RelCollation) : List<Integer> from class org.apache.calcite.rel.RelCollationImpl to public ordinals(collation RelCollation) : List<Integer> from class org.apache.calcite.rel.RelCollations
Move Attribute	public EMPTY : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public EMPTY : RelCollation from class org.apache.calcite.rel.RelCollations
Move Attribute	public PRESERVE : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public PRESERVE : RelCollation from class org.apache.calcite.rel.RelCollations
Change Method Access Modifier	private to public in method public compare(c1 Comparable, c2 Comparable, nullComparison int) : int from class org.apache.calcite.rel.RelFieldCollation
Move Method	private compare(c1 Comparable, c2 Comparable, nullComparison int) : int from class org.apache.calcite.interpreter.SortNode to public compare(c1 Comparable, c2 Comparable, nullComparison int) : int from class org.apache.calcite.rel.RelFieldCollation
Extract And Move Method	public create(inputs List<RelNode>, all boolean) : LogicalIntersect extracted from public createSetOp(kind SqlKind, inputs List<RelNode>, all boolean) : RelNode in class org.apache.calcite.rel.core.RelFactories.SetOpFactoryImpl & moved to class org.apache.calcite.rel.logical.LogicalIntersect
Extract And Move Method	public create(left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>, semiJoinDone boolean, systemFieldList ImmutableList<RelDataTypeField>) : LogicalJoin extracted from public createJoin(left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>, semiJoinDone boolean) : RelNode in class org.apache.calcite.rel.core.RelFactories.JoinFactoryImpl & moved to class org.apache.calcite.rel.logical.LogicalJoin
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.plan.RelTrait
Developers have reported that 10708 commits involve refactoring but only 295 involve refactoring operations
There are 5 duplicate commits with refactoring out of the 295 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b33b426b42f23be17e113
Issue Title: : Add LogicalSort relational expression, and make Sort abstract
Refactorings at c0a3085ce9f5f5de1d2c9d3656ad740a35a5a91e
Add Parameter	offset : RexNode in method public copy(traitSet RelTraitSet, newInput RelNode, newCollation RelCollation, offset RexNode, fetch RexNode) : JdbcSort from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcSort
Add Parameter	fetch : RexNode in method public copy(traitSet RelTraitSet, newInput RelNode, newCollation RelCollation, offset RexNode, fetch RexNode) : JdbcSort from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcSort
Add Class Modifier	abstract in class org.apache.calcite.rel.core.Sort
Add Method Modifier	final in method public copy(traitSet RelTraitSet, inputs List<RelNode>) : Sort from class org.apache.calcite.rel.core.Sort
Add Method Modifier	final in method public copy(traitSet RelTraitSet, newInput RelNode, newCollation RelCollation) : Sort from class org.apache.calcite.rel.core.Sort
Add Variable Modifier	final in variable newRel : Sort in method public decorrelateRel(rel Sort) : void from class org.apache.calcite.sql2rel.RelDecorrelator
Add Method Annotation	@Override in method public copy(traitSet RelTraitSet, newInput RelNode, newCollation RelCollation, offset RexNode, fetch RexNode) : Sort from class org.apache.calcite.rel.logical.LogicalSort
Push Down Method	public copy(traitSet RelTraitSet, newInput RelNode, newCollation RelCollation, offset RexNode, fetch RexNode) : Sort from class org.apache.calcite.rel.core.Sort to public copy(traitSet RelTraitSet, newInput RelNode, newCollation RelCollation, offset RexNode, fetch RexNode) : Sort from class org.apache.calcite.rel.logical.LogicalSort
Developers have reported that 10708 commits involve refactoring but only 296 involve refactoring operations
There are 5 duplicate commits with refactoring out of the 296 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b33b426b42f23be17e113
Issue Title: : Add LogicalSort relational expression, and make Sort abstract
Refactorings at 2709896eb176c14605b1ddc4be57d916ebeb0fe8
Rename Parameter	child : RelNode to input : RelNode in method public EnumerableCalc(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.adapter.enumerable.EnumerableCalc
Add Method Annotation	@Deprecated in method public EnumerableCalc(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.adapter.enumerable.EnumerableCalc
Remove Parameter	collationList : List<RelCollation> in method public copy(traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) : EnumerableCalc from class org.apache.calcite.adapter.enumerable.EnumerableCalc
Extract Variable	input : RelNode in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.enumerable.EnumerableCalcRule
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.adapter.enumerable.EnumerableConvention
Rename Variable	rel : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.enumerable.EnumerableFilterToCalcRule
Rename Parameter	child : RelNode to input : RelNode in method public EnumerableLimit(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, offset RexNode, fetch RexNode) from class org.apache.calcite.adapter.enumerable.EnumerableLimit
Rename Variable	child : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.enumerable.EnumerableProjectToCalcRule
Rename Parameter	child : RelNode to input : RelNode in method public EnumerableSort(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, collation RelCollation, offset RexNode, fetch RexNode) from class org.apache.calcite.adapter.enumerable.EnumerableSort
Extract Method	public create(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>) : EnumerableValues extracted from public copy(traitSet RelTraitSet, inputs List<RelNode>) : RelNode in class org.apache.calcite.adapter.enumerable.EnumerableValues
Change Method Access Modifier	package to private in method private EnumerableValues(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>, traitSet RelTraitSet) from class org.apache.calcite.adapter.enumerable.EnumerableValues
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.interpreter.BindableConvention
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.interpreter.InterpretableConvention
Remove Parameter Modifier	final in parameter fieldCollation : RelFieldCollation in method private comparator(fieldCollation RelFieldCollation) : Comparator<Row> from class org.apache.calcite.interpreter.SortNode
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.plan.Convention.Impl
Encapsulate Attribute	private emptyTraitSet : RelTraitSet from class org.apache.calcite.plan.RelOptCluster
Extract Variable	fieldNames2 : List<String> in method public createProject(child RelNode, exprs List<? extends RexNode>, fieldNames List<String>, optimize boolean) : RelNode from class org.apache.calcite.plan.RelOptUtil
Add Parameter Annotation	@Nonnull in parameter key : T in method public load(key T) : T from class org.apache.calcite.plan.RelTraitDef.canonicalMap.build.new CacheLoader<T,T>
Rename Method	public subsumes(that RelTraitSet) : boolean renamed to public satisfies(that RelTraitSet) : boolean in class org.apache.calcite.plan.RelTraitSet
Extract Variable	traitSet : RelTraitSet in method public add(rel RelNode) : RelSubset from class org.apache.calcite.plan.volcano.RelSet
Add Variable Modifier	final in variable subset : RelSubset in method public add(rel RelNode) : RelSubset from class org.apache.calcite.plan.volcano.RelSet
Rename Method	private asd(rel RelNode, set RelSet) : RelSubset renamed to private addRelToSet(rel RelNode, set RelSet) : RelSubset in class org.apache.calcite.plan.volcano.VolcanoPlanner
Extract Method	private forward1(s RelSet, p RelSet) : RelSet extracted from private merge(set RelSet, set2 RelSet) : RelSet in class org.apache.calcite.plan.volcano.VolcanoPlanner
Extract Method	private equivRoot(s RelSet) : RelSet extracted from private merge(set RelSet, set2 RelSet) : RelSet in class org.apache.calcite.plan.volcano.VolcanoPlanner
Rename Parameter	set2 : RelSet to p : RelSet in method private forward1(s RelSet, p RelSet) : RelSet from class org.apache.calcite.plan.volcano.VolcanoPlanner
Rename Parameter	set2 : RelSet to s : RelSet in method private equivRoot(s RelSet) : RelSet from class org.apache.calcite.plan.volcano.VolcanoPlanner
Rename Variable	child : RelNode to input : RelNode in method public translate(expression Expression) : RelNode from class org.apache.calcite.prepare.LixToRelTranslator
Remove Parameter	logicalRowType : RelDataType in method protected optimize(logicalRowType RelDataType, rootRel RelNode, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : RelNode from class org.apache.calcite.prepare.Prepare
Extract Variable	traits : RelTraitSet in method public toRel(context ToRelContext) : RelNode from class org.apache.calcite.prepare.RelOptTableImpl
Add Method Annotation	@Deprecated in method public getCollationList() : List<RelCollation> from class org.apache.calcite.rel.AbstractRelNode
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.rel.RelCollationImpl
Add Method Annotation	@Deprecated in method protected Calc(cluster RelOptCluster, traits RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.rel.core.Calc
Remove Parameter	collationList : List<RelCollation> in method public abstract copy(traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) : Calc from class org.apache.calcite.rel.core.Calc
Add Method Annotation	@Deprecated in method public LogicalAggregate(cluster RelOptCluster, child RelNode, indicator boolean, groupSet ImmutableBitSet, groupSets List<ImmutableBitSet>, aggCalls List<AggregateCall>) from class org.apache.calcite.rel.logical.LogicalAggregate
Rename Parameter	traits : RelTraitSet to traitSet : RelTraitSet in method public LogicalCalc(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.rel.logical.LogicalCalc
Add Method Annotation	@Deprecated in method public LogicalCalc(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) from class org.apache.calcite.rel.logical.LogicalCalc
Remove Parameter	collationList : List<RelCollation> in method public copy(traitSet RelTraitSet, child RelNode, program RexProgram, collationList List<RelCollation>) : LogicalCalc from class org.apache.calcite.rel.logical.LogicalCalc
Add Method Annotation	@Deprecated in method public LogicalCorrelate(cluster RelOptCluster, left RelNode, right RelNode, correlationId CorrelationId, requiredColumns ImmutableBitSet, joinType SemiJoinType) from class org.apache.calcite.rel.logical.LogicalCorrelate
Add Method Annotation	@Deprecated in method public LogicalFilter(cluster RelOptCluster, child RelNode, condition RexNode) from class org.apache.calcite.rel.logical.LogicalFilter
Add Method Annotation	@Deprecated in method public LogicalIntersect(cluster RelOptCluster, inputs List<RelNode>, all boolean) from class org.apache.calcite.rel.logical.LogicalIntersect
Add Method Annotation	@Deprecated in method public LogicalJoin(cluster RelOptCluster, left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>) from class org.apache.calcite.rel.logical.LogicalJoin
Add Method Annotation	@Deprecated in method public LogicalJoin(cluster RelOptCluster, left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>, semiJoinDone boolean, systemFieldList ImmutableList<RelDataTypeField>) from class org.apache.calcite.rel.logical.LogicalJoin
Add Method Annotation	@Deprecated in method public LogicalMinus(cluster RelOptCluster, inputs List<RelNode>, all boolean) from class org.apache.calcite.rel.logical.LogicalMinus
Add Method Annotation	@Deprecated in method public LogicalProject(cluster RelOptCluster, child RelNode, exps List<RexNode>, fieldNames List<String>) from class org.apache.calcite.rel.logical.LogicalProject
Rename Parameter	child : RelNode to input : RelNode in method public LogicalProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, exps List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.rel.logical.LogicalProject
Add Method Annotation	@Deprecated in method public LogicalTableFunctionScan(cluster RelOptCluster, inputs List<RelNode>, rexCall RexNode, elementType Type, rowType RelDataType, columnMappings Set<RelColumnMapping>) from class org.apache.calcite.rel.logical.LogicalTableFunctionScan
Rename Parameter	child : RelNode to input : RelNode in method public LogicalTableModify(cluster RelOptCluster, table RelOptTable, schema Prepare.CatalogReader, input RelNode, operation Operation, updateColumnList List<String>, flattened boolean) from class org.apache.calcite.rel.logical.LogicalTableModify
Add Method Annotation	@Deprecated in method public LogicalTableModify(cluster RelOptCluster, table RelOptTable, schema Prepare.CatalogReader, input RelNode, operation Operation, updateColumnList List<String>, flattened boolean) from class org.apache.calcite.rel.logical.LogicalTableModify
Add Method Annotation	@Deprecated in method public LogicalTableScan(cluster RelOptCluster, table RelOptTable) from class org.apache.calcite.rel.logical.LogicalTableScan
Add Method Annotation	@Deprecated in method public LogicalUnion(cluster RelOptCluster, inputs List<RelNode>, all boolean) from class org.apache.calcite.rel.logical.LogicalUnion
Add Method Annotation	@Deprecated in method public LogicalValues(cluster RelOptCluster, rowType RelDataType, tuples ImmutableList<ImmutableList<RexLiteral>>) from class org.apache.calcite.rel.logical.LogicalValues
Rename Variable	child : LogicalProject to input : LogicalProject in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.AggregateProjectPullUpConstantsRule
Rename Parameter	oldAggRel : Aggregate to oldAggregate : Aggregate in method protected newAggregateRel(oldAggregate Aggregate, input RelNode, newCalls List<AggregateCall>) : Aggregate from class org.apache.calcite.rel.rules.AggregateReduceFunctionsRule
Rename Parameter	inputRel : RelNode to input : RelNode in method protected newAggregateRel(oldAggregate Aggregate, input RelNode, newCalls List<AggregateCall>) : Aggregate from class org.apache.calcite.rel.rules.AggregateReduceFunctionsRule
Add Attribute Annotation	@Deprecated in attribute public NAME_CALC_INSTANCE : ProjectRemoveRule from class org.apache.calcite.rel.rules.ProjectRemoveRule
Add Method Annotation	@Deprecated in method public strip(project Project, useNamesInIdentityProjCalc boolean) : RelNode from class org.apache.calcite.rel.rules.ProjectRemoveRule
Add Method Annotation	@Deprecated in method public isTrivial(project Project, useNamesInIdentityProjCalc boolean) : boolean from class org.apache.calcite.rel.rules.ProjectRemoveRule
Add Method Annotation	@Deprecated in method public isIdentity(exps List<? extends RexNode>, rowType RelDataType, childRowType RelDataType) : boolean from class org.apache.calcite.rel.rules.ProjectRemoveRule
Rename Variable	child : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ProjectToCalcRule
Rename Variable	child : RelNode to input : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ProjectToWindowRule.PROJECT.new ProjectToWindowRule
Inline Variable	operands : List<RexNode> in method public expand(call RexCall) : RexNode from class org.apache.calcite.rel.rules.ReduceDecimalsRule.CastArgAsTypeExpander
Add Method Annotation	@Deprecated in method public containIdentity(exps List<? extends RexNode>, rowType RelDataType, childRowType RelDataType) : boolean from class org.apache.calcite.rex.RexUtil
Extract Method	public of(rowCount double, keys List<ImmutableBitSet>, collations List<RelCollation>) : Statistic extracted from public of(rowCount double, keys List<ImmutableBitSet>) : Statistic in class org.apache.calcite.schema.Statistics
Inline Variable	operandList : List<SqlNode> in method public acceptCall(visitor SqlVisitor<R>, call SqlCall, onlyExpressions boolean, argHandler SqlBasicVisitor.ArgHandler<R>) : void from class org.apache.calcite.sql.SqlWindow.SqlWindowOperator
Inline Variable	rands : List<SqlNode> in method public unparse(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int) : void from class org.apache.calcite.sql.fun.SqlLiteralChainOperator
Add Method Annotation	@Deprecated in method public RelFieldTrimmer(validator SqlValidator, projectFactory RelFactories.ProjectFactory, filterFactory RelFactories.FilterFactory, joinFactory RelFactories.JoinFactory, semiJoinFactory RelFactories.SemiJoinFactory, sortFactory RelFactories.SortFactory, aggregateFactory RelFactories.AggregateFactory, setOpFactory RelFactories.SetOpFactory, useNamesInIdentityProjCalc boolean) from class org.apache.calcite.sql2rel.RelFieldTrimmer
Rename Variable	newChild : RelNode to newInput : RelNode in method public rewriteRel(rel LogicalCalc) : void from class org.apache.calcite.sql2rel.RelStructuredTypeFlattener
Extract Variable	size : int in method public startsWith(list0 List<E>, list1 List<E>) : boolean from class org.apache.calcite.util.Util
Rename Variable	table : LogicalTableScan to scan : LogicalTableScan in method public apply(cluster RelOptCluster, relOptSchema RelOptSchema, rootSchema SchemaPlus) : String from class org.apache.calcite.plan.RelWriterTest.testWriter.s.withPlanner.new Frameworks.PlannerAction<String>
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.plan.volcano.VolcanoPlannerTraitTest.AltTrait
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,SqlParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,SqlParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Change Parameter Type	iterable : Iterable<E> to iterable : Iterable<? extends E> in method public zip(iterable Iterable<? extends E>) : Iterable<Ord<E>> from class org.apache.calcite.linq4j.Ord
Change Parameter Type	iterator : Iterator<E> to iterator : Iterator<? extends E> in method public zip(iterator Iterator<? extends E>) : Iterator<Ord<E>> from class org.apache.calcite.linq4j.Ord
Extract Class	org.apache.calcite.rel.RelCollations from class org.apache.calcite.rel.RelCollationImpl
Move Method	public of(fieldCollations RelFieldCollation...) : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public of(fieldCollations RelFieldCollation...) : RelCollation from class org.apache.calcite.rel.RelCollations
Move Method	public of(fieldCollations List<RelFieldCollation>) : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public of(fieldCollations List<RelFieldCollation>) : RelCollation from class org.apache.calcite.rel.RelCollations
Move Method	public createSingleton(fieldIndex int) : List<RelCollation> from class org.apache.calcite.rel.RelCollationImpl to public createSingleton(fieldIndex int) : List<RelCollation> from class org.apache.calcite.rel.RelCollations
Move Method	public isValid(rowType RelDataType, collationList List<RelCollation>, fail boolean) : boolean from class org.apache.calcite.rel.RelCollationImpl to public isValid(rowType RelDataType, collationList List<RelCollation>, fail boolean) : boolean from class org.apache.calcite.rel.RelCollations
Move Method	public equal(collationList1 List<RelCollation>, collationList2 List<RelCollation>) : boolean from class org.apache.calcite.rel.RelCollationImpl to public equal(collationList1 List<RelCollation>, collationList2 List<RelCollation>) : boolean from class org.apache.calcite.rel.RelCollations
Move Method	public ordinals(collation RelCollation) : List<Integer> from class org.apache.calcite.rel.RelCollationImpl to public ordinals(collation RelCollation) : List<Integer> from class org.apache.calcite.rel.RelCollations
Move Attribute	public EMPTY : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public EMPTY : RelCollation from class org.apache.calcite.rel.RelCollations
Move Attribute	public PRESERVE : RelCollation from class org.apache.calcite.rel.RelCollationImpl to public PRESERVE : RelCollation from class org.apache.calcite.rel.RelCollations
Change Method Access Modifier	private to public in method public compare(c1 Comparable, c2 Comparable, nullComparison int) : int from class org.apache.calcite.rel.RelFieldCollation
Move Method	private compare(c1 Comparable, c2 Comparable, nullComparison int) : int from class org.apache.calcite.interpreter.SortNode to public compare(c1 Comparable, c2 Comparable, nullComparison int) : int from class org.apache.calcite.rel.RelFieldCollation
Extract And Move Method	public create(inputs List<RelNode>, all boolean) : LogicalIntersect extracted from public createSetOp(kind SqlKind, inputs List<RelNode>, all boolean) : RelNode in class org.apache.calcite.rel.core.RelFactories.SetOpFactoryImpl & moved to class org.apache.calcite.rel.logical.LogicalIntersect
Extract And Move Method	public create(left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>, semiJoinDone boolean, systemFieldList ImmutableList<RelDataTypeField>) : LogicalJoin extracted from public createJoin(left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>, semiJoinDone boolean) : RelNode in class org.apache.calcite.rel.core.RelFactories.JoinFactoryImpl & moved to class org.apache.calcite.rel.logical.LogicalJoin
Rename Method	public subsumes(trait RelTrait) : boolean renamed to public satisfies(trait RelTrait) : boolean in class org.apache.calcite.plan.RelTrait
Developers have reported that 10708 commits involve refactoring but only 297 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 297 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b33b826b42f23be17e127
Issue Title: : Revert temporary API changes introduced in [CALCITE-575]
Refactorings at ee3347f805d7802ab8f6defbea3ec616a1c04ff0
Remove Parameter	useNamesInIdentityProjCalc : boolean in method private ProjectRemoveRule(useNamesInIdentityProjCalc boolean) from class org.apache.calcite.rel.rules.ProjectRemoveRule
Add Variable Modifier	final in variable newProjects : List<RexNode> in method public trimFields(project Project, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Rename Variable	newProjectExprList : List<RexNode> to newProjects : List<RexNode> in method public trimFields(project Project, fieldsUsed ImmutableBitSet, extraFields Set<RelDataTypeField>) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Developers have reported that 10708 commits involve refactoring but only 298 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 298 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b33bc26b42f23be17e13c
Issue Title: : Use user-given names in RelOptUtil.createProject and createRename
Refactorings at e237804b0e4d7ac17249708a5cf823e0c1fe1625
Add Attribute Modifier	transient in attribute public internalParameters : Map<String,Object> from class org.apache.calcite.avatica.Meta.Signature
Remove Parameter Annotation	@JsonProperty("columns") in parameter columns : List<ColumnMetaData> in method public Signature(columns List<ColumnMetaData>, sql String, parameters List<AvaticaParameter>, internalParameters Map<String,Object>, cursorFactory CursorFactory) from class org.apache.calcite.avatica.Meta.Signature
Remove Parameter Annotation	@JsonProperty("sql") in parameter sql : String in method public Signature(columns List<ColumnMetaData>, sql String, parameters List<AvaticaParameter>, internalParameters Map<String,Object>, cursorFactory CursorFactory) from class org.apache.calcite.avatica.Meta.Signature
Remove Parameter Annotation	@JsonProperty("parameters") in parameter parameters : List<AvaticaParameter> in method public Signature(columns List<ColumnMetaData>, sql String, parameters List<AvaticaParameter>, internalParameters Map<String,Object>, cursorFactory CursorFactory) from class org.apache.calcite.avatica.Meta.Signature
Remove Parameter Annotation	@JsonProperty("internalParameters") in parameter internalParameters : Map<String,Object> in method public Signature(columns List<ColumnMetaData>, sql String, parameters List<AvaticaParameter>, internalParameters Map<String,Object>, cursorFactory CursorFactory) from class org.apache.calcite.avatica.Meta.Signature
Remove Parameter Annotation	@JsonProperty("cursorFactory") in parameter cursorFactory : CursorFactory in method public Signature(columns List<ColumnMetaData>, sql String, parameters List<AvaticaParameter>, internalParameters Map<String,Object>, cursorFactory CursorFactory) from class org.apache.calcite.avatica.Meta.Signature
Remove Method Annotation	@JsonCreator in method public Signature(columns List<ColumnMetaData>, sql String, parameters List<AvaticaParameter>, internalParameters Map<String,Object>, cursorFactory CursorFactory) from class org.apache.calcite.avatica.Meta.Signature
Developers have reported that 10708 commits involve refactoring but only 299 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 299 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b33bc26b42f23be17e13c
Issue Title: : Use user-given names in RelOptUtil.createProject and createRename
Refactorings at 8f1e3b2803edda876c31a0a491e901b33c92da34
Change Return Type	Pair<RexNode,String> to RexNode in method public get(index int) : RexNode from class org.apache.calcite.plan.RelOptUtil.createRename.refs.new AbstractList<RexNode>
Change Variable Type	refs : List<Pair<RexNode,String>> to refs : List<RexNode> in method public createRename(rel RelNode, fieldNames List<String>) : RelNode from class org.apache.calcite.plan.RelOptUtil
Extract Variable	rowType : RelDataType in method public createProject(factory RelFactories.ProjectFactory, child RelNode, posList List<Integer>) : RelNode from class org.apache.calcite.plan.RelOptUtil
Extract Method	private runDuplicateSortCheck(sql String, plan String) : void extracted from public testDuplicateSortPlan() : void in class org.apache.calcite.tools.PlannerTest
Developers have reported that 10708 commits involve refactoring but only 300 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 300 commits.

No refactorings detected at 49ec280180cfa74cb35f6a50fbcf84857f690951

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b33c726b42f23be17e197
Issue Title: : Change visibility of constructor in metadata providers for size, memory, parallelism
Refactorings at b659d0f3be34819705beffed612d82b3c162cd9c
Change Method Access Modifier	private to protected in method protected RelMdMemory() from class org.apache.calcite.rel.metadata.RelMdMemory
Change Method Access Modifier	private to protected in method protected RelMdParallelism() from class org.apache.calcite.rel.metadata.RelMdParallelism
Change Method Access Modifier	private to protected in method protected RelMdSize() from class org.apache.calcite.rel.metadata.RelMdSize
Developers have reported that 10708 commits involve refactoring but only 301 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 301 commits.

No refactorings detected at e0b3c4a47786fcb081c90fdbe850ad6b28da75ca

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b33ca26b42f23be17e1ae
Issue Title: : Remove Project.flags
Refactorings at 5a6d32a2a0dcc48c25dda51d350b76c9c8bf6d10
Remove Parameter	flags : int in method public EnumerableProject(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, exps List<? extends RexNode>, rowType RelDataType, flags int) from class org.apache.calcite.adapter.enumerable.EnumerableProject
Remove Parameter	flags : int in method public JdbcCalc(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, program RexProgram, flags int) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcCalc
Remove Parameter	flags : int in method public JdbcProject(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, exps List<RexNode>, rowType RelDataType, flags int) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProject
Remove Parameter	flags : int in method public BindableProject(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, exps List<? extends RexNode>, rowType RelDataType, flags int) from class org.apache.calcite.interpreter.Bindables.BindableProject
Remove Parameter	flags : int in method protected Project(cluster RelOptCluster, traits RelTraitSet, input RelNode, exps List<? extends RexNode>, rowType RelDataType, flags int) from class org.apache.calcite.rel.core.Project
Remove Parameter	flags : int in method public LogicalProject(cluster RelOptCluster, child RelNode, exps List<RexNode>, fieldNames List<String>, flags int) from class org.apache.calcite.rel.logical.LogicalProject
Remove Parameter	flags : int in method public LogicalProject(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, exps List<? extends RexNode>, rowType RelDataType, flags int) from class org.apache.calcite.rel.logical.LogicalProject
Remove Parameter	flags : int in method public MongoProject(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, exps List<RexNode>, rowType RelDataType, flags int) from class org.apache.calcite.adapter.mongodb.MongoProject
Remove Parameter	flags : int in method public SparkCalc(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, program RexProgram, flags int) from class org.apache.calcite.adapter.spark.SparkRules.SparkCalc
Developers have reported that 10708 commits involve refactoring but only 302 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 302 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b33ca26b42f23be17e1ae
Issue Title: : Remove Project.flags
Refactorings at 9bd3ba36edf776a1b0a3b7798c6927f5dc1d9408
Rename Parameter	child : RelNode to input : RelNode in method public EnumerableProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.adapter.enumerable.EnumerableProject
Rename Parameter	exps : List<? extends RexNode> to projects : List<? extends RexNode> in method public EnumerableProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.adapter.enumerable.EnumerableProject
Rename Parameter	exps : List<RexNode> to projects : List<RexNode> in method public copy(traitSet RelTraitSet, input RelNode, projects List<RexNode>, rowType RelDataType) : EnumerableProject from class org.apache.calcite.adapter.enumerable.EnumerableProject
Rename Parameter	traits : RelTraitSet to traitSet : RelTraitSet in method protected JdbcJoin(cluster RelOptCluster, traitSet RelTraitSet, left RelNode, right RelNode, condition RexNode, leftKeys ImmutableIntList, rightKeys ImmutableIntList, joinType JoinRelType, variablesStopped Set<String>) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcJoin
Rename Parameter	child : RelNode to input : RelNode in method public JdbcCalc(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, program RexProgram) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcCalc
Rename Parameter	exps : List<RexNode> to projects : List<RexNode> in method public copy(traitSet RelTraitSet, input RelNode, projects List<RexNode>, rowType RelDataType) : JdbcProject from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProject
Change Parameter Type	exps : List<RexNode> to projects : List<? extends RexNode> in method public JdbcProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProject
Rename Parameter	child : RelNode to input : RelNode in method public JdbcProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProject
Rename Parameter	exps : List<RexNode> to projects : List<? extends RexNode> in method public JdbcProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProject
Rename Parameter	child : RelNode to input : RelNode in method public JdbcFilter(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, condition RexNode) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcFilter
Rename Parameter	child : RelNode to input : RelNode in method public JdbcAggregate(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, indicator boolean, groupSet ImmutableBitSet, groupSets List<ImmutableBitSet>, aggCalls List<AggregateCall>) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcAggregate
Rename Parameter	child : RelNode to input : RelNode in method public JdbcSort(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, collation RelCollation) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcSort
Rename Parameter	child : RelNode to input : RelNode in method public JdbcTableModify(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable, catalogReader Prepare.CatalogReader, input RelNode, operation Operation, updateColumnList List<String>, flattened boolean) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcTableModify
Rename Parameter	traits : RelTraitSet to traitSet : RelTraitSet in method public JdbcTableModify(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable, catalogReader Prepare.CatalogReader, input RelNode, operation Operation, updateColumnList List<String>, flattened boolean) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcTableModify
Rename Parameter	traits : RelTraitSet to traitSet : RelTraitSet in method package BindableTableScan(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable) from class org.apache.calcite.interpreter.Bindables.BindableTableScan
Rename Parameter	child : RelNode to input : RelNode in method public BindableFilter(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, condition RexNode) from class org.apache.calcite.interpreter.Bindables.BindableFilter
Rename Parameter	child : RelNode to input : RelNode in method public BindableProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.interpreter.Bindables.BindableProject
Rename Parameter	exps : List<? extends RexNode> to projects : List<? extends RexNode> in method public BindableProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.interpreter.Bindables.BindableProject
Rename Parameter	exps : List<RexNode> to projects : List<RexNode> in method public copy(traitSet RelTraitSet, input RelNode, projects List<RexNode>, rowType RelDataType) : BindableProject from class org.apache.calcite.interpreter.Bindables.BindableProject
Rename Parameter	child : RelNode to input : RelNode in method public BindableSort(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, collation RelCollation, offset RexNode, fetch RexNode) from class org.apache.calcite.interpreter.Bindables.BindableSort
Rename Parameter	traits : RelTraitSet to traitSet : RelTraitSet in method protected BindableJoin(cluster RelOptCluster, traitSet RelTraitSet, left RelNode, right RelNode, condition RexNode, joinType JoinRelType, variablesStopped Set<String>) from class org.apache.calcite.interpreter.Bindables.BindableJoin
Rename Parameter	child : RelNode to input : RelNode in method public BindableAggregate(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, indicator boolean, groupSet ImmutableBitSet, groupSets List<ImmutableBitSet>, aggCalls List<AggregateCall>) from class org.apache.calcite.interpreter.Bindables.BindableAggregate
Rename Parameter	traits : RelTraitSet to traitSet : RelTraitSet in method package BindableWindow(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, constants List<RexLiteral>, rowType RelDataType, groups List<Group>) from class org.apache.calcite.interpreter.Bindables.BindableWindow
Rename Parameter	child : RelNode to input : RelNode in method package BindableWindow(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, constants List<RexLiteral>, rowType RelDataType, groups List<Group>) from class org.apache.calcite.interpreter.Bindables.BindableWindow
Rename Variable	child : RelNode to input : RelNode in method public convert(rel RelNode) : RelNode from class org.apache.calcite.interpreter.Bindables.BindableWindowRule
Rename Variable	convertedChild : RelNode to convertedInput : RelNode in method public convert(rel RelNode) : RelNode from class org.apache.calcite.interpreter.Bindables.BindableWindowRule
Rename Parameter	exps : List<? extends RexNode> to projects : List<? extends RexNode> in method protected Project(cluster RelOptCluster, traits RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.rel.core.Project
Rename Parameter	exps : List<RexNode> to projects : List<RexNode> in method public copy(traitSet RelTraitSet, input RelNode, projects List<RexNode>, rowType RelDataType) : LogicalProject from class org.apache.calcite.rel.logical.LogicalProject
Rename Parameter	exps : List<? extends RexNode> to projects : List<? extends RexNode> in method public LogicalProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.rel.logical.LogicalProject
Rename Parameter	child : RelNode to input : RelNode in method public LogicalProject(cluster RelOptCluster, input RelNode, projects List<RexNode>, fieldNames List<String>, flags int) from class org.apache.calcite.rel.logical.LogicalProject
Rename Parameter	exps : List<RexNode> to projects : List<RexNode> in method public LogicalProject(cluster RelOptCluster, input RelNode, projects List<RexNode>, fieldNames List<String>, flags int) from class org.apache.calcite.rel.logical.LogicalProject
Add Parameter	flags : int in method public LogicalProject(cluster RelOptCluster, input RelNode, projects List<RexNode>, fieldNames List<String>, flags int) from class org.apache.calcite.rel.logical.LogicalProject
Rename Parameter	exps : List<RexNode> to projects : List<RexNode> in method public copy(traitSet RelTraitSet, input RelNode, projects List<RexNode>, rowType RelDataType) : Project from class org.apache.calcite.adapter.mongodb.MongoProject
Change Parameter Type	exps : List<RexNode> to projects : List<? extends RexNode> in method public MongoProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.adapter.mongodb.MongoProject
Rename Parameter	child : RelNode to input : RelNode in method public MongoProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.adapter.mongodb.MongoProject
Rename Parameter	exps : List<RexNode> to projects : List<? extends RexNode> in method public MongoProject(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, projects List<? extends RexNode>, rowType RelDataType) from class org.apache.calcite.adapter.mongodb.MongoProject
Rename Parameter	child : RelNode to input : RelNode in method public SparkCalc(cluster RelOptCluster, traitSet RelTraitSet, input RelNode, program RexProgram) from class org.apache.calcite.adapter.spark.SparkRules.SparkCalc
Rename Parameter	exps : List<RexNode> to projects : List<RexNode> in method public abstract copy(traitSet RelTraitSet, input RelNode, projects List<RexNode>, rowType RelDataType) : Project from class org.apache.calcite.rel.core.Project
Developers have reported that 10708 commits involve refactoring but only 303 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 303 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b33f026b42f23be17e220
Issue Title: : Move from Commons Logging to SLF4J
Refactorings at 05a57992a45f9aa66db31355aa7733cfadafa1e1
Change Attribute Type	LOG : Log to LOG : Logger in class org.apache.calcite.avatica.jdbc.JdbcMeta
Change Attribute Type	LOG : Log to LOG : Logger in class org.apache.calcite.avatica.server.AvaticaJsonHandler
Change Attribute Type	LOG : Log to LOG : Logger in class org.apache.calcite.avatica.server.AvaticaProtobufHandler
Change Attribute Type	LOG : Log to LOG : Logger in class org.apache.calcite.avatica.server.DelegatingAvaticaHandler
Change Attribute Type	LOG : Log to LOG : Logger in class org.apache.calcite.avatica.server.HttpServer
Rename Method	public severe(msg String) : void renamed to public warn(msg String) : void in class org.apache.calcite.util.trace.CalciteLogger
Move And Inline Method	public fine(msg String) : void moved from class org.apache.calcite.util.trace.CalciteLogger to class org.apache.calcite.plan.volcano.VolcanoRuleCall & inlined to public transformTo(rel RelNode, equiv Map<RelNode,RelNode>) : void
Developers have reported that 10708 commits involve refactoring but only 304 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 304 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b33ff26b42f23be17e264
Issue Title: : Push theta joins down to JDBC adapter
Refactorings at a13137dc9a79795e3748d19dd34923ec674f9298
Extract Method	private convertConditionToSqlNode(node RexNode, leftContext JdbcImplementor.Context, rightContext JdbcImplementor.Context, leftFieldCount int) : SqlNode extracted from public implement(implementor JdbcImplementor) : JdbcImplementor.Result in class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcJoin
Change Variable Type	pair : Pair<Integer,Integer> to operand : RexNode in method private convertConditionToSqlNode(node RexNode, leftContext JdbcImplementor.Context, rightContext JdbcImplementor.Context, leftFieldCount int) : SqlNode from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcJoin
Rename Variable	pair : Pair<Integer,Integer> to operand : RexNode in method private convertConditionToSqlNode(node RexNode, leftContext JdbcImplementor.Context, rightContext JdbcImplementor.Context, leftFieldCount int) : SqlNode from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcJoin
Remove Parameter	leftKeys : ImmutableIntList in method protected JdbcJoin(cluster RelOptCluster, traitSet RelTraitSet, left RelNode, right RelNode, condition RexNode, leftKeys ImmutableIntList, rightKeys ImmutableIntList, joinType JoinRelType, variablesStopped Set<String>) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcJoin
Remove Parameter	rightKeys : ImmutableIntList in method protected JdbcJoin(cluster RelOptCluster, traitSet RelTraitSet, left RelNode, right RelNode, condition RexNode, leftKeys ImmutableIntList, rightKeys ImmutableIntList, joinType JoinRelType, variablesStopped Set<String>) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcJoin
Developers have reported that 10708 commits involve refactoring but only 305 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 305 commits.

No refactorings detected at b312031f3ead3adb272b79d02d7fcfc095ec4deb

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b342526b42f23be17e2fa
Issue Title: : Remove uses of linq4j Functions.adapt
Refactorings at 574dc7cc89c6319ed51629f316d3a87eedfb1c0f
Change Attribute Type	TIMESTAMP_TO_LONG : Function1<Timestamp,Long> to TIMESTAMP_TO_LONG : Function<Timestamp,Long> in class org.apache.calcite.adapter.clone.ColumnLoader
Change Attribute Type	TIME_TO_INT : Function1<Time,Integer> to TIME_TO_INT : Function<Time,Integer> in class org.apache.calcite.adapter.clone.ColumnLoader
Change Attribute Type	DATE_TO_INT : Function1<Date,Integer> to DATE_TO_INT : Function<Date,Integer> in class org.apache.calcite.adapter.clone.ColumnLoader
Change Attribute Type	F : Function1<ImmutableList<RexLiteral>,Object> to F : Function<ImmutableList<RexLiteral>,Object> in class org.apache.calcite.rel.core.Values
Add Method Annotation	@Deprecated in method public adapt(list List<T1>, f Function1<T1,R>) : List<R> from class org.apache.calcite.linq4j.function.Functions
Add Method Annotation	@Deprecated in method public adapt(ts T[], f Function1<T,R>) : List<R> from class org.apache.calcite.linq4j.function.Functions
Change Variable Type	list2 : ArrayList<R> to list2 : List<R> in method public apply(list List<T1>, f Function1<T1,R>) : List<R> from class org.apache.calcite.linq4j.function.Functions
Developers have reported that 10708 commits involve refactoring but only 306 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 306 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b342726b42f23be17e303
Issue Title: : Improve Avatica date support
Refactorings at 5648083f017a1cf28e223f2230c59c20cd713a4b
Rename Class	org.apache.calcite.avatica.util.AbstractCursor.DateFromIntAccessor renamed to org.apache.calcite.avatica.util.AbstractCursor.DateFromNumberAccessor
Rename Class	org.apache.calcite.avatica.util.AbstractCursor.TimeFromIntAccessor renamed to org.apache.calcite.avatica.util.AbstractCursor.TimeFromNumberAccessor
Rename Class	org.apache.calcite.avatica.util.AbstractCursor.TimestampFromLongAccessor renamed to org.apache.calcite.avatica.util.AbstractCursor.TimestampFromNumberAccessor
Extract Variable	rep : ColumnMetaData.Rep in method protected columns(metaData ResultSetMetaData) : List<ColumnMetaData> from class org.apache.calcite.avatica.jdbc.JdbcMeta
Change Method Access Modifier	private to public in method public toBigDecimal(x Object) : BigDecimal from class org.apache.calcite.avatica.AvaticaParameter
Rename Method	public setId(rep int) : AvaticaType renamed to public setRep(rep Rep) : AvaticaType in class org.apache.calcite.avatica.ColumnMetaData.AvaticaType
Change Parameter Type	rep : int to rep : Rep in method public setRep(rep Rep) : AvaticaType from class org.apache.calcite.avatica.ColumnMetaData.AvaticaType
Rename Method	public setId(id int) : AvaticaType renamed to public setRep(rep Rep) : AvaticaType in class org.apache.calcite.avatica.ColumnMetaData.ScalarType
Add Parameter	rep : Rep in method public setRep(rep Rep) : AvaticaType from class org.apache.calcite.avatica.ColumnMetaData.ScalarType
Remove Parameter	id : int in method public setId(id int) : AvaticaType from class org.apache.calcite.avatica.ColumnMetaData.ScalarType
Add Parameter	scale : int in method public NumberAccessor(getter Getter, scale int) from class org.apache.calcite.avatica.util.AbstractCursor.NumberAccessor
Change Variable Type	v : int to v : Number in method public getDate(calendar Calendar) : Date from class org.apache.calcite.avatica.util.AbstractCursor.DateFromNumberAccessor
Change Variable Type	v : int to v : Number in method public getTimestamp(calendar Calendar) : Timestamp from class org.apache.calcite.avatica.util.AbstractCursor.DateFromNumberAccessor
Change Variable Type	v : int to v : Number in method public getString() : String from class org.apache.calcite.avatica.util.AbstractCursor.DateFromNumberAccessor
Change Variable Type	v : int to v : Number in method public getTime(calendar Calendar) : Time from class org.apache.calcite.avatica.util.AbstractCursor.TimeFromNumberAccessor
Change Variable Type	v : long to v : Number in method public getTimestamp(calendar Calendar) : Timestamp from class org.apache.calcite.avatica.util.AbstractCursor.TimeFromNumberAccessor
Change Variable Type	v : int to v : Number in method public getString() : String from class org.apache.calcite.avatica.util.AbstractCursor.TimeFromNumberAccessor
Change Variable Type	v : long to v : Number in method public getTimestamp(calendar Calendar) : Timestamp from class org.apache.calcite.avatica.util.AbstractCursor.TimestampFromNumberAccessor
Change Variable Type	v : long to v : Number in method public getString() : String from class org.apache.calcite.avatica.util.AbstractCursor.TimestampFromNumberAccessor
Developers have reported that 10708 commits involve refactoring but only 307 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 307 commits.

No refactorings detected at ba07b09aae2c5e09acfeb3ad77a4a6e4ddfb3ac4

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b342b26b42f23be17e31d
Issue Title: : Add Avatica support for getTableTypes, getColumns
Refactorings at fe13dd3bcbac3998defa37929da0ab428372d2a1
Modify Class Annotation	@JsonSubTypes({@JsonSubTypes.Type(value=CatalogsRequest.class,name="getCatalogs"),@JsonSubTypes.Type(value=SchemasRequest.class,name="getSchemas"),@JsonSubTypes.Type(value=TablesRequest.class,name="getTables"),@JsonSubTypes.Type(value=PrepareRequest.class,name="prepare"),@JsonSubTypes.Type(value=PrepareAndExecuteRequest.class,name="prepareAndExecute"),@JsonSubTypes.Type(value=FetchRequest.class,name="fetch"),@JsonSubTypes.Type(value=CreateStatementRequest.class,name="createStatement")}) to @JsonSubTypes({@JsonSubTypes.Type(value=CatalogsRequest.class,name="getCatalogs"),@JsonSubTypes.Type(value=SchemasRequest.class,name="getSchemas"),@JsonSubTypes.Type(value=TablesRequest.class,name="getTables"),@JsonSubTypes.Type(value=TableTypesRequest.class,name="getTableTypes"),@JsonSubTypes.Type(value=ColumnsRequest.class,name="getColumns"),@JsonSubTypes.Type(value=PrepareRequest.class,name="prepare"),@JsonSubTypes.Type(value=PrepareAndExecuteRequest.class,name="prepareAndExecute"),@JsonSubTypes.Type(value=FetchRequest.class,name="fetch"),@JsonSubTypes.Type(value=CreateStatementRequest.class,name="createStatement")}) in class org.apache.calcite.avatica.remote.Service.Request
Developers have reported that 10708 commits involve refactoring but only 308 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 308 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b343026b42f23be17e33d
Issue Title: : Add metadata for average size of a tuple in SemiJoin
Refactorings at e2833a297cf1308fe63795ebabb52a2d66e3b863
Extract Method	private averageJoinColumnSizes(rel Join, semijoin boolean) : List<Double> extracted from public averageColumnSizes(rel Join) : List<Double> in class org.apache.calcite.rel.metadata.RelMdSize
Developers have reported that 10708 commits involve refactoring but only 309 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 309 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b343d26b42f23be17e39f
Issue Title: : Add Avatica support for getTables
Refactorings at 4d2f647a6d397a4a7c99fcc2d3d6359baf937943
Move Class	org.apache.calcite.test.CalciteAssert.ConnectionSpec moved to org.apache.calcite.test.ConnectionSpec
Change Parameter Type	iterable : Iterable<Object> to firstFrame : Meta.Frame in method public assign(signature Meta.Signature, firstFrame Meta.Frame) : void from class org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal.x.prepareAndExecute.new Meta.PrepareCallback
Rename Parameter	iterable : Iterable<Object> to firstFrame : Meta.Frame in method public assign(signature Meta.Signature, firstFrame Meta.Frame) : void from class org.apache.calcite.avatica.AvaticaConnection.prepareAndExecuteInternal.x.prepareAndExecute.new Meta.PrepareCallback
Change Parameter Type	iterable : Iterable<Object> to firstFrame : Meta.Frame in method protected executeQueryInternal(statement AvaticaStatement, signature Meta.Signature, firstFrame Meta.Frame) : ResultSet from class org.apache.calcite.avatica.AvaticaConnection
Rename Parameter	iterable : Iterable<Object> to firstFrame : Meta.Frame in method protected executeQueryInternal(statement AvaticaStatement, signature Meta.Signature, firstFrame Meta.Frame) : ResultSet from class org.apache.calcite.avatica.AvaticaConnection
Change Parameter Type	iterable : Iterable<Object> to firstFrame : Meta.Frame in method public newResultSet(statement AvaticaStatement, signature Meta.Signature, timeZone TimeZone, firstFrame Meta.Frame) : AvaticaResultSet from class org.apache.calcite.avatica.AvaticaJdbc41Factory
Rename Parameter	iterable : Iterable<Object> to firstFrame : Meta.Frame in method public newResultSet(statement AvaticaStatement, signature Meta.Signature, timeZone TimeZone, firstFrame Meta.Frame) : AvaticaResultSet from class org.apache.calcite.avatica.AvaticaJdbc41Factory
Change Parameter Type	iterable : Iterable<Object> to firstFrame : Meta.Frame in method public AvaticaResultSet(statement AvaticaStatement, signature Meta.Signature, resultSetMetaData ResultSetMetaData, timeZone TimeZone, firstFrame Meta.Frame) from class org.apache.calcite.avatica.AvaticaResultSet
Rename Parameter	iterable : Iterable<Object> to firstFrame : Meta.Frame in method public AvaticaResultSet(statement AvaticaStatement, signature Meta.Signature, resultSetMetaData ResultSetMetaData, timeZone TimeZone, firstFrame Meta.Frame) from class org.apache.calcite.avatica.AvaticaResultSet
Rename Attribute	iterable : Iterable<Object> to firstFrame : Meta.Frame in class org.apache.calcite.avatica.AvaticaResultSet
Change Attribute Type	iterable : Iterable<Object> to firstFrame : Meta.Frame in class org.apache.calcite.avatica.AvaticaResultSet
Rename Parameter	type : int to id : int in method protected AvaticaType(id int, name String, rep Rep) from class org.apache.calcite.avatica.ColumnMetaData.AvaticaType
Rename Parameter	typeName : String to name : String in method protected AvaticaType(id int, name String, rep Rep) from class org.apache.calcite.avatica.ColumnMetaData.AvaticaType
Rename Parameter	representation : Rep to rep : Rep in method protected AvaticaType(id int, name String, rep Rep) from class org.apache.calcite.avatica.ColumnMetaData.AvaticaType
Rename Attribute	typeName : String to rep : Rep in class org.apache.calcite.avatica.ColumnMetaData.AvaticaType
Change Attribute Type	typeName : String to rep : Rep in class org.apache.calcite.avatica.ColumnMetaData.AvaticaType
Modify Parameter Annotation	@JsonProperty("type") to @JsonProperty("id") in parameter id : int in method public ScalarType(id int, name String, rep Rep) from class org.apache.calcite.avatica.ColumnMetaData.ScalarType
Modify Parameter Annotation	@JsonProperty("typeName") to @JsonProperty("name") in parameter name : String in method public ScalarType(id int, name String, rep Rep) from class org.apache.calcite.avatica.ColumnMetaData.ScalarType
Modify Parameter Annotation	@JsonProperty("representation") to @JsonProperty("rep") in parameter rep : Rep in method public ScalarType(id int, name String, rep Rep) from class org.apache.calcite.avatica.ColumnMetaData.ScalarType
Rename Parameter	type : int to id : int in method public ScalarType(id int, name String, rep Rep) from class org.apache.calcite.avatica.ColumnMetaData.ScalarType
Rename Parameter	typeName : String to name : String in method public ScalarType(id int, name String, rep Rep) from class org.apache.calcite.avatica.ColumnMetaData.ScalarType
Rename Parameter	representation : Rep to rep : Rep in method public ScalarType(id int, name String, rep Rep) from class org.apache.calcite.avatica.ColumnMetaData.ScalarType
Change Parameter Type	iterable : Iterable<Object> to firstFrame : Frame in method public MetaResultSet(statementId int, ownStatement boolean, signature Signature, firstFrame Frame) from class org.apache.calcite.avatica.Meta.MetaResultSet
Rename Parameter	iterable : Iterable<Object> to firstFrame : Frame in method public MetaResultSet(statementId int, ownStatement boolean, signature Signature, firstFrame Frame) from class org.apache.calcite.avatica.Meta.MetaResultSet
Rename Attribute	iterable : Iterable<Object> to firstFrame : Frame in class org.apache.calcite.avatica.Meta.MetaResultSet
Change Attribute Type	iterable : Iterable<Object> to firstFrame : Frame in class org.apache.calcite.avatica.Meta.MetaResultSet
Change Parameter Type	iterable : Iterable<Object> to firstFrame : Frame in method protected createResultSet(internalParameters Map<String,Object>, columns List<ColumnMetaData>, cursorFactory CursorFactory, firstFrame Frame) : MetaResultSet from class org.apache.calcite.avatica.MetaImpl
Change Variable Type	signature : SignatureWithIterable to signature : Signature in method protected createResultSet(internalParameters Map<String,Object>, columns List<ColumnMetaData>, cursorFactory CursorFactory, firstFrame Frame) : MetaResultSet from class org.apache.calcite.avatica.MetaImpl
Rename Parameter	iterable : Iterable<Object> to firstFrame : Frame in method protected createResultSet(internalParameters Map<String,Object>, columns List<ColumnMetaData>, cursorFactory CursorFactory, firstFrame Frame) : MetaResultSet from class org.apache.calcite.avatica.MetaImpl
Change Method Access Modifier	private to protected in method protected decode(response String, valueType Class<T>) : T from class org.apache.calcite.avatica.remote.JsonService
Add Method Modifier	static in method protected decode(response String, valueType Class<T>) : T from class org.apache.calcite.avatica.remote.JsonService
Change Method Access Modifier	private to protected in method protected encode(request T) : String from class org.apache.calcite.avatica.remote.JsonService
Add Method Modifier	static in method protected encode(request T) : String from class org.apache.calcite.avatica.remote.JsonService
Add Variable Modifier	final in variable list : List<List<Object>> in method private list2(resultSet Meta.MetaResultSet) : List<List<Object>> from class org.apache.calcite.avatica.remote.LocalService
Remove Variable Modifier	final in variable signature : Meta.Signature in method public apply(request PrepareRequest) : PrepareResponse from class org.apache.calcite.avatica.remote.LocalService
Add Method Annotation	@Override in method public getMonitor() : Object from class org.apache.calcite.avatica.remote.LocalService.apply.resultSet.prepareAndExecute.new Meta.PrepareCallback
Add Method Annotation	@Override in method public clear() : void from class org.apache.calcite.avatica.remote.LocalService.apply.resultSet.prepareAndExecute.new Meta.PrepareCallback
Add Method Annotation	@Override in method public execute() : void from class org.apache.calcite.avatica.remote.LocalService.apply.resultSet.prepareAndExecute.new Meta.PrepareCallback
Remove Variable Modifier	final in variable signature0 : Signature in method private toResultSet(response Service.ResultSetResponse) : MetaResultSet from class org.apache.calcite.avatica.remote.RemoteMeta
Add Parameter	clazz : Class in method private toResultSet(clazz Class, response Service.ResultSetResponse) : MetaResultSet from class org.apache.calcite.avatica.remote.RemoteMeta
Modify Class Annotation	@JsonSubTypes({@JsonSubTypes.Type(value=CatalogsRequest.class,name="getCatalogs"),@JsonSubTypes.Type(value=SchemasRequest.class,name="getSchemas"),@JsonSubTypes.Type(value=PrepareRequest.class,name="prepare"),@JsonSubTypes.Type(value=PrepareAndExecuteRequest.class,name="prepareAndExecute"),@JsonSubTypes.Type(value=CreateStatementRequest.class,name="createStatement")}) to @JsonSubTypes({@JsonSubTypes.Type(value=CatalogsRequest.class,name="getCatalogs"),@JsonSubTypes.Type(value=SchemasRequest.class,name="getSchemas"),@JsonSubTypes.Type(value=TablesRequest.class,name="getTables"),@JsonSubTypes.Type(value=PrepareRequest.class,name="prepare"),@JsonSubTypes.Type(value=PrepareAndExecuteRequest.class,name="prepareAndExecute"),@JsonSubTypes.Type(value=FetchRequest.class,name="fetch"),@JsonSubTypes.Type(value=CreateStatementRequest.class,name="createStatement")}) in class org.apache.calcite.avatica.remote.Service.Request
Modify Class Annotation	@JsonSubTypes({@JsonSubTypes.Type(value=ResultSetResponse.class,name="resultSet"),@JsonSubTypes.Type(value=PrepareResponse.class,name="prepare"),@JsonSubTypes.Type(value=CreateStatementResponse.class,name="createStatement")}) to @JsonSubTypes({@JsonSubTypes.Type(value=ResultSetResponse.class,name="resultSet"),@JsonSubTypes.Type(value=PrepareResponse.class,name="prepare"),@JsonSubTypes.Type(value=FetchResponse.class,name="fetch"),@JsonSubTypes.Type(value=CreateStatementResponse.class,name="createStatement")}) in class org.apache.calcite.avatica.remote.Service.Response
Change Parameter Type	rows : List<Object> to firstFrame : Meta.Frame in method public ResultSetResponse(statementId int, ownStatement boolean, signature Meta.Signature, firstFrame Meta.Frame) from class org.apache.calcite.avatica.remote.Service.ResultSetResponse
Modify Parameter Annotation	@JsonProperty("rows") to @JsonProperty("firstFrame") in parameter firstFrame : Meta.Frame in method public ResultSetResponse(statementId int, ownStatement boolean, signature Meta.Signature, firstFrame Meta.Frame) from class org.apache.calcite.avatica.remote.Service.ResultSetResponse
Rename Parameter	rows : List<Object> to firstFrame : Meta.Frame in method public ResultSetResponse(statementId int, ownStatement boolean, signature Meta.Signature, firstFrame Meta.Frame) from class org.apache.calcite.avatica.remote.Service.ResultSetResponse
Rename Attribute	rows : List<Object> to firstFrame : Meta.Frame in class org.apache.calcite.avatica.remote.Service.ResultSetResponse
Change Attribute Type	rows : List<Object> to firstFrame : Meta.Frame in class org.apache.calcite.avatica.remote.Service.ResultSetResponse
Rename Parameter	type : ColumnMetaData to columnMetaData : ColumnMetaData in method protected createAccessor(columnMetaData ColumnMetaData, ordinal int, localCalendar Calendar, factory ArrayImpl.Factory) : Accessor from class org.apache.calcite.avatica.util.AbstractCursor
Extract Method	private mjs() : Connection extracted from public testCatalogsMock() : void in class org.apache.calcite.avatica.test.RemoteDriverTest
Change Parameter Type	iterable : Iterable<Object> to firstFrame : Meta.Frame in method public newResultSet(statement AvaticaStatement, signature Meta.Signature, timeZone TimeZone, firstFrame Meta.Frame) : CalciteResultSet from class org.apache.calcite.jdbc.CalciteJdbc41Factory
Rename Parameter	iterable : Iterable<Object> to firstFrame : Meta.Frame in method public newResultSet(statement AvaticaStatement, signature Meta.Signature, timeZone TimeZone, firstFrame Meta.Frame) : CalciteResultSet from class org.apache.calcite.jdbc.CalciteJdbc41Factory
Change Parameter Type	iterable : Iterable<Object> to firstFrame : Frame in method protected createResultSet(internalParameters Map<String,Object>, columns List<ColumnMetaData>, cursorFactory CursorFactory, firstFrame Frame) : MetaResultSet from class org.apache.calcite.jdbc.CalciteMetaImpl
Rename Parameter	iterable : Iterable<Object> to firstFrame : Frame in method protected createResultSet(internalParameters Map<String,Object>, columns List<ColumnMetaData>, cursorFactory CursorFactory, firstFrame Frame) : MetaResultSet from class org.apache.calcite.jdbc.CalciteMetaImpl
Add Parameter	parameterValues : List<Object> in method public createIterable(handle StatementHandle, signature Signature, parameterValues List<Object>, firstFrame Frame) : Iterable<Object> from class org.apache.calcite.jdbc.CalciteMetaImpl
Add Parameter	firstFrame : Frame in method public createIterable(handle StatementHandle, signature Signature, parameterValues List<Object>, firstFrame Frame) : Iterable<Object> from class org.apache.calcite.jdbc.CalciteMetaImpl
Remove Parameter	iterable : Iterable<Object> in method public createIterable(handle StatementHandle, signature Signature, iterable Iterable<Object>) : Iterable<Object> from class org.apache.calcite.jdbc.CalciteMetaImpl
Change Parameter Type	iterable : Iterable<Object> to firstFrame : Meta.Frame in method package CalciteResultSet(statement AvaticaStatement, calciteSignature CalcitePrepare.CalciteSignature, resultSetMetaData ResultSetMetaData, timeZone TimeZone, firstFrame Meta.Frame) from class org.apache.calcite.jdbc.CalciteResultSet
Rename Parameter	iterable : Iterable<Object> to firstFrame : Meta.Frame in method package CalciteResultSet(statement AvaticaStatement, calciteSignature CalcitePrepare.CalciteSignature, resultSetMetaData ResultSetMetaData, timeZone TimeZone, firstFrame Meta.Frame) from class org.apache.calcite.jdbc.CalciteResultSet
Change Type Declaration Kind	enum to class in type org.apache.calcite.test.ConnectionSpec
Change Method Access Modifier	package to public in method public ConnectionSpec(url String, username String, password String, driver String) from class org.apache.calcite.test.ConnectionSpec
Rename Attribute	typeName : String to name : String in class org.apache.calcite.avatica.ColumnMetaData.AvaticaType
Rename Attribute	representation : Rep to rep : Rep in class org.apache.calcite.avatica.ColumnMetaData.AvaticaType
Rename Attribute	type : int to id : int in class org.apache.calcite.avatica.ColumnMetaData.AvaticaType
Rename Attribute	CONNECTION_SPEC : ConnectionSpec to DB : DatabaseInstance in class org.apache.calcite.test.CalciteAssert
Change Attribute Type	CONNECTION_SPEC : ConnectionSpec to DB : DatabaseInstance in class org.apache.calcite.test.CalciteAssert
Extract Class	org.apache.calcite.avatica.Meta.Frame from class org.apache.calcite.avatica.remote.Service.ResultSetResponse
Rename Parameter	iterable : Iterable<Object> to firstFrame : Meta.Frame in method public newResultSet(statement AvaticaStatement, signature Meta.Signature, timeZone TimeZone, firstFrame Meta.Frame) : AvaticaResultSet from class org.apache.calcite.avatica.AvaticaFactory
Change Parameter Type	iterable : Iterable<Object> to firstFrame : Meta.Frame in method public newResultSet(statement AvaticaStatement, signature Meta.Signature, timeZone TimeZone, firstFrame Meta.Frame) : AvaticaResultSet from class org.apache.calcite.avatica.AvaticaFactory
Add Parameter	parameterValues : List<Object> in method public createIterable(handle StatementHandle, signature Signature, parameterValues List<Object>, firstFrame Frame) : Iterable<Object> from class org.apache.calcite.avatica.Meta
Remove Parameter	iterable : Iterable<Object> in method public createIterable(handle StatementHandle, signature Signature, iterable Iterable<Object>) : Iterable<Object> from class org.apache.calcite.avatica.Meta
Add Parameter	firstFrame : Frame in method public createIterable(handle StatementHandle, signature Signature, parameterValues List<Object>, firstFrame Frame) : Iterable<Object> from class org.apache.calcite.avatica.Meta
Add Parameter	firstFrame : Frame in method public createIterable(handle StatementHandle, signature Signature, parameterValues List<Object>, firstFrame Frame) : Iterable<Object> from class org.apache.calcite.avatica.MetaImpl
Remove Parameter	iterable : Iterable<Object> in method public createIterable(handle StatementHandle, signature Signature, iterable Iterable<Object>) : Iterable<Object> from class org.apache.calcite.avatica.MetaImpl
Add Parameter	parameterValues : List<Object> in method public createIterable(handle StatementHandle, signature Signature, parameterValues List<Object>, firstFrame Frame) : Iterable<Object> from class org.apache.calcite.avatica.MetaImpl
Developers have reported that 10708 commits involve refactoring but only 310 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 310 commits.

No refactorings detected at e48c7627c162726f42e786a0e0b8c3042315491a

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b345026b42f23be17e3f2
Issue Title: : Move server pieces of avatica into avatica-server
Refactorings at fa9bdc4ac8b7d0106ebf5fa875cd9edc00d47865
Move Class	org.apache.calcite.avatica.test.RemoteDriverTest moved to org.apache.calcite.avatica.RemoteDriverTest
Move Source Folder	avatica to avatica-server
Move Source Folder	avatica to avatica-server
Developers have reported that 10708 commits involve refactoring but only 311 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 311 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b345426b42f23be17e3ff
Issue Title: : splitCondition does not behave correctly when one side of the condition references columns from different inputs
Refactorings at 53b4b09606de5fe14f49e65a6d5b4346ec930a62
Change Variable Type	firstFieldInputs : int[] to inputsRange : ImmutableBitSet[] in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable inputsRange : ImmutableBitSet[] in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Rename Variable	firstFieldInputs : int[] to inputsRange : ImmutableBitSet[] in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Developers have reported that 10708 commits involve refactoring but only 312 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 312 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b345426b42f23be17e400
Issue Title: : Extend splitCondition method in RelOptUtil to support MultiJoin operator
Refactorings at 61eea9ce4f0b02cb84557477bb58fd38d03e9c5c
Extract Method	public splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>) : RexNode extracted from public splitJoinCondition(sysFieldList List<RelDataTypeField>, leftRel RelNode, rightRel RelNode, condition RexNode, leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, filterNulls List<Integer>, rangeOp List<SqlOperator>) : RexNode in class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable nonEquiList : List<RexNode> in method public splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>) : RexNode from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable result : List<String> in method public getVariablesSetAndUsed(rel0 RelNode, rel1 RelNode) : List<String> from class org.apache.calcite.plan.RelOptUtil
Extract Variable	rexBuilder : RexBuilder in method public createRenameRel(outputType RelDataType, rel RelNode) : RelNode from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable renames : List<Pair<RexNode,String>> in method public createRenameRel(outputType RelDataType, rel RelNode) : RelNode from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable rexBuilder : RexBuilder in method public createNullFilter(rel RelNode, fieldOrdinals Integer[]) : RelNode from class org.apache.calcite.plan.RelOptUtil
Extract Variable	rexBuilder : RexBuilder in method public createCastRel(rel RelNode, castRowType RelDataType, rename boolean, projectFactory RelFactories.ProjectFactory) : RelNode from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable castExps : List<RexNode> in method public createCastRel(rel RelNode, castRowType RelDataType, rename boolean, projectFactory RelFactories.ProjectFactory) : RelNode from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable aggCallCnt : int in method public createSingleValueAggRel(cluster RelOptCluster, rel RelNode) : RelNode from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable aggCalls : List<AggregateCall> in method public createSingleValueAggRel(cluster RelOptCluster, rel RelNode) : RelNode from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable nonEquiList : List<RexNode> in method public splitJoinCondition(left RelNode, right RelNode, condition RexNode, leftKeys List<Integer>, rightKeys List<Integer>) : RexNode from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable nonEquiList : List<RexNode> in method public splitCorrelatedFilterCondition(filter LogicalFilter, joinKeys List<RexInputRef>, correlatedJoinKeys List<RexNode>) : RexNode from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable nonEquiList : List<RexNode> in method public splitCorrelatedFilterCondition(filter LogicalFilter, joinKeys List<RexNode>, correlatedJoinKeys List<RexNode>, extractCorrelatedFieldAccess boolean) : RexNode from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable newLeftFields : List<RexNode> in method public projectJoinInputs(inputRels RelNode[], leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, systemColCount int, leftKeys List<Integer>, rightKeys List<Integer>, outputProj List<Integer>) : void from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable newLeftFieldNames : List<String> in method public projectJoinInputs(inputRels RelNode[], leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, systemColCount int, leftKeys List<Integer>, rightKeys List<Integer>, outputProj List<Integer>) : void from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable newRightFields : List<RexNode> in method public projectJoinInputs(inputRels RelNode[], leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, systemColCount int, leftKeys List<Integer>, rightKeys List<Integer>, outputProj List<Integer>) : void from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable newRightFieldNames : List<String> in method public projectJoinInputs(inputRels RelNode[], leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, systemColCount int, leftKeys List<Integer>, rightKeys List<Integer>, outputProj List<Integer>) : void from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable newProjects : List<Pair<RexNode,String>> in method public createProjectJoinRel(outputProj List<Integer>, joinRel RelNode) : RelNode from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable newKeys : List<Integer> in method public adjustKeys(keys List<Integer>, adjustment int) : List<Integer> from class org.apache.calcite.plan.RelOptUtil
Extract Variable	cluster : RelOptCluster in method public permute(rel RelNode, permutation Permutation, fieldNames List<String>) : RelNode from class org.apache.calcite.plan.RelOptUtil
Extract Variable	typeFactory : RelDataTypeFactory in method public permute(rel RelNode, permutation Permutation, fieldNames List<String>) : RelNode from class org.apache.calcite.plan.RelOptUtil
Extract Variable	cluster : RelOptCluster in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable rexBuilder : RexBuilder in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable typeFactory : RelDataTypeFactory in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Remove Variable Modifier	final in variable totalFieldCount : int in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, leftRel RelNode, rightRel RelNode, condition RexNode, leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Remove Variable Modifier	final in variable leftFields : List<RelDataTypeField> in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, leftRel RelNode, rightRel RelNode, condition RexNode, leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Remove Variable Modifier	final in variable rightFields : List<RelDataTypeField> in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, leftRel RelNode, rightRel RelNode, condition RexNode, leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Rename Variable	firstLeftField : int to lowerLimit : int in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Rename Variable	firstRightField : int to lowerLimit : int in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Merge Parameter	[leftRel : RelNode, rightRel : RelNode] to inputs : List<RelNode> in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Merge Parameter	[leftJoinKeys : List<RexNode>, rightJoinKeys : List<RexNode>] to joinKeys : List<List<RexNode>> in method private splitJoinCondition(sysFieldList List<RelDataTypeField>, inputs List<RelNode>, condition RexNode, joinKeys List<List<RexNode>>, filterNulls List<Integer>, rangeOp List<SqlOperator>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Developers have reported that 10708 commits involve refactoring but only 313 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 313 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b347126b42f23be17e491
Issue Title: : Allow clients to control creation of RelOptCluster
Refactorings at bf88476b04595f16037733901ed8256324bac187
Replace Variable With Attribute	query : RelOptQuery to prepare : CalcitePrepareImpl in method public prepareQueryable(queryable Queryable, resultType RelDataType) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Change Variable Type	query : RelOptQuery to prepare : CalcitePrepareImpl in method public prepareQueryable(queryable Queryable, resultType RelDataType) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Extract Method	protected createCluster(planner RelOptPlanner, rexBuilder RexBuilder) : RelOptCluster extracted from public perform(statement CalciteServerStatement, action Frameworks.PrepareAction<R>) : R in class org.apache.calcite.prepare.CalcitePrepareImpl
Extract Method	private createCluster(rexBuilder RexBuilder, planner RelOptPlanner) : RelOptCluster extracted from public SqlToRelConverter(viewExpander RelOptTable.ViewExpander, validator SqlValidator, catalogReader Prepare.CatalogReader, planner RelOptPlanner, rexBuilder RexBuilder, convertletTable SqlRexConvertletTable) in class org.apache.calcite.sql2rel.SqlToRelConverter
Add Method Annotation	@Deprecated in method public SqlToRelConverter(viewExpander RelOptTable.ViewExpander, validator SqlValidator, catalogReader Prepare.CatalogReader, planner RelOptPlanner, rexBuilder RexBuilder, convertletTable SqlRexConvertletTable) from class org.apache.calcite.sql2rel.SqlToRelConverter
Extract And Move Method	protected createCluster(planner RelOptPlanner, rexBuilder RexBuilder) : RelOptCluster extracted from public prepareQueryable(queryable Queryable, resultType RelDataType) : PreparedResult in class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt & moved to class org.apache.calcite.prepare.CalcitePrepareImpl
Developers have reported that 10708 commits involve refactoring but only 314 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 314 commits.

No refactorings detected at 85887fe3516e6dcee2e11f95571a40bed3e1cfbb

No refactorings detected at f076a9bacc25dc5671b5557e48d9a654a6aa6854

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b349226b42f23be17e558
Issue Title: : Add a SWAP_OUTER static instance to JoinCommuteRule
Refactorings at ec925e2d337d61a0bb4cb7662c580c47e148adad
Add Method Annotation	@Deprecated in method public JoinCommuteRule(clazz Class<? extends Join>, projectFactory ProjectFactory) from class org.apache.calcite.rel.rules.JoinCommuteRule
Add Parameter	swapOuter : boolean in method private JoinCommuteRule(swapOuter boolean) from class org.apache.calcite.rel.rules.JoinCommuteRule
Developers have reported that 10708 commits involve refactoring but only 315 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 315 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b349526b42f23be17e567
Issue Title: : Add validator test for monotonic expressions
Refactorings at 91f0fca610c0ec8964e95a87547e3a941b834aab
Change Class Access Modifier	public to package in class org.apache.calcite.sql.test.SqlTester.VmName
Developers have reported that 10708 commits involve refactoring but only 316 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 316 commits.

No refactorings detected at 06a192a0afaf8de758d55aaf3e4858733df6c55e

No refactorings detected at fcb6ba5fa4be7c5eb55f784f5ff74ce4bd993abb

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b34c626b42f23be17e64d
Issue Title: : Add back sqlline as a dependency
Refactorings at 56342c124175cac8f03b47368001fedf77ad8361
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Developers have reported that 10708 commits involve refactoring but only 317 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 317 commits.

No refactorings detected at e0a42301e5556685945ecbe2be83f93f10a1869f

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b34d726b42f23be17e6a1
Issue Title: : Support adding new columns when creating/altering VIEW
Refactorings at e0a1f7d3069f0eefeb8bdd411a250cd1fb0532f3
Move Class	org.apache.calcite.schema.impl.ViewTable.ViewTableMacro moved to org.apache.calcite.schema.impl.ViewTableMacro
Move Class	org.apache.calcite.schema.impl.ViewTable.ModifiableViewTable moved to org.apache.calcite.schema.impl.ModifiableViewTable
Add Parameter	modifiable : boolean in method public AnalyzeViewResult(prepare CalcitePrepareImpl, validator SqlValidator, sql String, sqlNode SqlNode, rowType RelDataType, root RelRoot, table Table, tablePath ImmutableList<String>, constraint RexNode, columnMapping ImmutableIntList, modifiable boolean) from class org.apache.calcite.jdbc.CalcitePrepare.AnalyzeViewResult
Extract Variable	rowType : RelDataType in method private resolve_(rootSchema CalciteSchema, names List<String>, schemaNames List<String>, nameMatcher SqlNameMatcher, path Path, resolved Resolved) : void from class org.apache.calcite.sql.validate.EmptyScope
Extract Method	private getNamespace(id SqlIdentifier, scope DelegatingScope) : SqlValidatorNamespace extracted from private getNamespace(node SqlNode, scope SqlValidatorScope) : SqlValidatorNamespace in class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Attribute Access Modifier	private to protected in attribute protected rexBuilder : RexBuilder from class org.apache.calcite.sql2rel.NullInitializerExpressionFactory
Extract Method	private convertIdentifier(bb Blackboard, id SqlIdentifier, extendedColumns SqlNodeList) : void extracted from protected convertFrom(bb Blackboard, from SqlNode) : void in class org.apache.calcite.sql2rel.SqlToRelConverter
Add Variable Modifier	final in variable usedDataset : boolean[] in method private convertIdentifier(bb Blackboard, id SqlIdentifier, extendedColumns SqlNodeList) : void from class org.apache.calcite.sql2rel.SqlToRelConverter
Change Attribute Access Modifier	private to protected in attribute protected stream : boolean from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Attribute Access Modifier	private to protected in attribute protected rowCount : double from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Attribute Access Modifier	private to protected in attribute protected collationList : List<RelCollation> from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Attribute Access Modifier	private to protected in attribute protected monotonicColumnSet : Set<String> from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Attribute Access Modifier	private to protected in attribute protected kind : StructKind from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Attribute Access Modifier	private to protected in attribute protected initializerFactory : InitializerExpressionFactory from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Class Access Modifier	package to public in class org.apache.calcite.schema.impl.ViewTableMacro
Remove Class Modifier	static in class org.apache.calcite.schema.impl.ViewTable.ViewTableMacro
Extract Method	protected modifiableViewTable(parsed CalcitePrepare.AnalyzeViewResult, viewSql String, schemaPath List<String>, viewPath List<String>, schema CalciteSchema) : ModifiableViewTable extracted from public apply(arguments List<Object>) : TranslatableTable in class org.apache.calcite.schema.impl.ViewTableMacro
Extract Method	protected viewTable(parsed CalcitePrepare.AnalyzeViewResult, viewSql String, schemaPath List<String>, viewPath List<String>) : ViewTable extracted from public apply(arguments List<Object>) : TranslatableTable in class org.apache.calcite.schema.impl.ViewTableMacro
Change Method Access Modifier	package to public in method public ViewTableMacro(schema CalciteSchema, viewSql String, schemaPath List<String>, viewPath List<String>, modifiable Boolean) from class org.apache.calcite.schema.impl.ViewTableMacro
Change Class Access Modifier	package to public in class org.apache.calcite.schema.impl.ModifiableViewTable
Remove Class Modifier	static in class org.apache.calcite.schema.impl.ViewTable.ModifiableViewTable
Add Parameter	typeFactory : RelDataTypeFactory in method public ModifiableViewTable(elementType Type, rowType RelProtoDataType, viewSql String, schemaPath List<String>, viewPath List<String>, table Table, tablePath Path, constraint RexNode, columnMapping ImmutableIntList, typeFactory RelDataTypeFactory) from class org.apache.calcite.schema.impl.ModifiableViewTable
Pull Up Method	public extend(extendedFields List<RelDataTypeField>) : RelOptTable from class org.apache.calcite.prepare.RelOptTableImpl to public extend(extendedFields List<RelDataTypeField>) : RelOptTable from class org.apache.calcite.prepare.Prepare.AbstractPreparingTable
Move Method	public unwrap(aClass Class<C>) : C from class org.apache.calcite.test.MockCatalogReader.MockTable.ModifiableTableWithCustomColumnResolving to public unwrap(aClass Class<C>) : C from class org.apache.calcite.prepare.CalciteCatalogReader
Developers have reported that 10708 commits involve refactoring but only 318 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 318 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b34d726b42f23be17e6a2
Issue Title: : Add EXTEND clause, for defining columns and their types at query/DML time
Refactorings at ecc5f4c2fff0a7a2a310b109b070d402c156f25a
Change Attribute Type	targetTable : SqlIdentifier to targetTable : SqlNode in class org.apache.calcite.sql.SqlDelete
Change Return Type	SqlIdentifier to SqlNode in method public getTargetTable() : SqlNode from class org.apache.calcite.sql.SqlDelete
Change Parameter Type	targetTable : SqlIdentifier to targetTable : SqlNode in method public SqlDelete(pos SqlParserPos, targetTable SqlNode, condition SqlNode, sourceSelect SqlSelect, alias SqlIdentifier) from class org.apache.calcite.sql.SqlDelete
Change Attribute Type	targetTable : SqlIdentifier to targetTable : SqlNode in class org.apache.calcite.sql.SqlInsert
Change Return Type	SqlIdentifier to SqlNode in method public getTargetTable() : SqlNode from class org.apache.calcite.sql.SqlInsert
Change Parameter Type	targetTable : SqlIdentifier to targetTable : SqlNode in method public SqlInsert(pos SqlParserPos, keywords SqlNodeList, targetTable SqlNode, source SqlNode, columnList SqlNodeList) from class org.apache.calcite.sql.SqlInsert
Change Attribute Type	targetTable : SqlIdentifier to targetTable : SqlNode in class org.apache.calcite.sql.SqlMerge
Change Return Type	SqlIdentifier to SqlNode in method public getTargetTable() : SqlNode from class org.apache.calcite.sql.SqlMerge
Change Parameter Type	targetTable : SqlIdentifier to targetTable : SqlNode in method public SqlMerge(pos SqlParserPos, targetTable SqlNode, condition SqlNode, source SqlNode, updateCall SqlUpdate, insertCall SqlInsert, sourceSelect SqlSelect, alias SqlIdentifier) from class org.apache.calcite.sql.SqlMerge
Change Attribute Type	targetTable : SqlIdentifier to targetTable : SqlNode in class org.apache.calcite.sql.SqlUpdate
Change Return Type	SqlIdentifier to SqlNode in method public getTargetTable() : SqlNode from class org.apache.calcite.sql.SqlUpdate
Change Parameter Type	targetTable : SqlIdentifier to targetTable : SqlNode in method public SqlUpdate(pos SqlParserPos, targetTable SqlNode, targetColumnList SqlNodeList, sourceExpressionList SqlNodeList, condition SqlNode, sourceSelect SqlSelect, alias SqlIdentifier) from class org.apache.calcite.sql.SqlUpdate
Add Parameter	extendList : SqlNodeList in method package IdentifierNamespace(validator SqlValidatorImpl, id SqlIdentifier, extendList SqlNodeList, enclosingNode SqlNode, parentScope SqlValidatorScope) from class org.apache.calcite.sql.validate.IdentifierNamespace
Change Parameter Type	id : SqlIdentifier to id : SqlNode in method protected DmlNamespace(validator SqlValidatorImpl, id SqlNode, enclosingNode SqlNode, parentScope SqlValidatorScope) from class org.apache.calcite.sql.validate.SqlValidatorImpl.DmlNamespace
Change Variable Type	target : SqlIdentifier to target : SqlNode in method private rewriteUpdateToMerge(updateCall SqlUpdate, selfJoinSrcExpr SqlNode) : SqlNode from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Parameter Type	table : SqlIdentifier to table : SqlNode in method protected getSelfJoinExprForUpdate(table SqlNode, alias String) : SqlNode from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Parameter	extendList : SqlNodeList in method private registerFrom(parentScope SqlValidatorScope, usingScope SqlValidatorScope, node SqlNode, enclosingNode SqlNode, alias String, extendList SqlNodeList, forceNullable boolean) : SqlNode from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable tableNamespace : TableNamespace in method public getRelOptTable(namespace SqlValidatorNamespace, catalogReader Prepare.CatalogReader, datasetName String, usedDataset boolean[]) : RelOptTable from class org.apache.calcite.sql.validate.SqlValidatorUtil
Change Method Access Modifier	package to public in method public TableNamespace(validator SqlValidatorImpl, table SqlValidatorTable) from class org.apache.calcite.sql.validate.TableNamespace
Change Attribute Type	columnList : List<Pair<String,RelDataType>> to columnList : List<Map.Entry<String,RelDataType>> in class org.apache.calcite.test.MockCatalogReader.MockTable
Add Parameter	catalogName : String in method public MockTable(catalogReader MockCatalogReader, catalogName String, schemaName String, name String) from class org.apache.calcite.test.MockCatalogReader.MockTable
Add Parameter	schemaName : String in method public MockTable(catalogReader MockCatalogReader, catalogName String, schemaName String, name String) from class org.apache.calcite.test.MockCatalogReader.MockTable
Remove Parameter	schema : MockSchema in method public MockTable(catalogReader MockCatalogReader, schema MockSchema, name String) from class org.apache.calcite.test.MockCatalogReader.MockTable
Developers have reported that 10708 commits involve refactoring but only 319 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 319 commits.

No refactorings detected at a61be0db744081af4c375fb0dcbae4a95041ff9d

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b34f626b42f23be17e726
Issue Title: : Add API to execute queries expressed as RelNode
Refactorings at 2a215df30d26f4363e6a7fe2d27be0ee7db9357f
Extract Method	private prepareStatement_(query CalcitePrepare.Query<?>, resultSetType int, resultSetConcurrency int, resultSetHoldability int) : CalcitePreparedStatement extracted from public prepareStatement(sql String, resultSetType int, resultSetConcurrency int, resultSetHoldability int) : CalcitePreparedStatement in class org.apache.calcite.jdbc.CalciteConnectionImpl
Change Parameter Type	sql : String to query : CalcitePrepare.Query<?> in method private prepareStatement_(query CalcitePrepare.Query<?>, resultSetType int, resultSetConcurrency int, resultSetHoldability int) : CalcitePreparedStatement from class org.apache.calcite.jdbc.CalciteConnectionImpl
Add Variable Modifier	final in variable signature : Meta.Signature in method private prepareStatement_(query CalcitePrepare.Query<?>, resultSetType int, resultSetConcurrency int, resultSetHoldability int) : CalcitePreparedStatement from class org.apache.calcite.jdbc.CalciteConnectionImpl
Rename Parameter	sql : String to query : CalcitePrepare.Query<?> in method private prepareStatement_(query CalcitePrepare.Query<?>, resultSetType int, resultSetConcurrency int, resultSetHoldability int) : CalcitePreparedStatement from class org.apache.calcite.jdbc.CalciteConnectionImpl
Change Parameter Type	sql : String to query : CalcitePrepare.Query<T> in method package parseQuery(query CalcitePrepare.Query<T>, prepareContext CalcitePrepare.Context, maxRowCount long) : CalcitePrepare.CalciteSignature<T> from class org.apache.calcite.jdbc.CalciteConnectionImpl
Rename Parameter	sql : String to query : CalcitePrepare.Query<T> in method package parseQuery(query CalcitePrepare.Query<T>, prepareContext CalcitePrepare.Context, maxRowCount long) : CalcitePrepare.CalciteSignature<T> from class org.apache.calcite.jdbc.CalciteConnectionImpl
Extract Method	private prepare_(fn Supplier<RelNode>, resultType RelDataType) : PreparedResult extracted from public prepareQueryable(queryable Queryable, resultType RelDataType) : PreparedResult in class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Extract Variable	collation : RelCollation in method private prepare_(fn Supplier<RelNode>, resultType RelDataType) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Add Parameter Modifier	final in parameter queryable : Queryable in method public prepareQueryable(queryable Queryable, resultType RelDataType) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Merge Parameter	[sql : String, expression : Queryable<T>] to query : Query<T> in method public prepareSql(context Context, query Query<T>, elementType Type, maxRowCount long) : CalciteSignature<T> from class org.apache.calcite.prepare.CalcitePrepareImpl
Merge Parameter	[sql : String, queryable : Queryable<T>] to query : Query<T> in method package prepare_(context Context, query Query<T>, elementType Type, maxRowCount long) : CalciteSignature<T> from class org.apache.calcite.prepare.CalcitePrepareImpl
Merge Parameter	[queryable : Queryable<T>, sql : String] to query : Query<T> in method package prepare2_(context Context, query Query<T>, elementType Type, maxRowCount long, catalogReader CalciteCatalogReader, planner RelOptPlanner) : CalciteSignature<T> from class org.apache.calcite.prepare.CalcitePrepareImpl
Developers have reported that 10708 commits involve refactoring but only 320 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 320 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b350c26b42f23be17e787
Issue Title: : Remove push down expressions from FilterJoinRule and create a new rule for it
Refactorings at 9f1f73d392fbff4f0ac2b29cc9462cf388be645d
Extract Variable	program : HepProgram in method public testPushJoinCondDownToProject() : void from class org.apache.calcite.test.RelOptRulesTest
Developers have reported that 10708 commits involve refactoring but only 321 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 321 commits.

No refactorings detected at 468a161bbd8fd4994085d96e2bc801209a17cf76

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b356226b42f23be17e8b5
Issue Title: : Use a Factory in MaterializationService to create tables
Refactorings at 8b53dc49f49113daf12a355c5db18ccc248f4924
Change Variable Type	pair : Pair<String,Table> to entry : TableEntry in method public getTable(name String) : Table from class org.apache.calcite.jdbc.CalciteSchema.SchemaPlusImpl
Rename Variable	pair : Pair<String,Table> to entry : TableEntry in method public getTable(name String) : Table from class org.apache.calcite.jdbc.CalciteSchema.SchemaPlusImpl
Change Return Type	Pair<String,Table> to TableEntry in method public getTableBySql(sql String) : TableEntry from class org.apache.calcite.jdbc.CalciteSchema
Change Return Type	Pair<String,Table> to TableEntry in method public getTable(tableName String, caseSensitive boolean) : TableEntry from class org.apache.calcite.jdbc.CalciteSchema
Change Return Type	Pair<String,Table> to TableEntry in method public getTableBasedOnNullaryFunction(tableName String, caseSensitive boolean) : TableEntry from class org.apache.calcite.jdbc.CalciteSchema
Extract Method	public defineMaterialization(schema CalciteSchema, tileKey TileKey, viewSql String, viewSchemaPath List<String>, tableFactory TableFactory, create boolean) : MaterializationKey extracted from public defineMaterialization(schema CalciteSchema, tileKey TileKey, viewSql String, viewSchemaPath List<String>, suggestedTableName String, create boolean) : MaterializationKey in class org.apache.calcite.materialize.MaterializationService
Extract Method	public defineMaterialization(schema CalciteSchema, tileKey TileKey, viewSql String, viewSchemaPath List<String>, tableFactory TableFactory, create boolean) : MaterializationKey extracted from public defineTile(lattice Lattice, groupSet ImmutableBitSet, measureList List<Lattice.Measure>, schema CalciteSchema, create boolean, exact boolean) : Pair<CalciteSchema.TableEntry,TileKey> in class org.apache.calcite.materialize.MaterializationService
Extract Method	public defineTile(lattice Lattice, groupSet ImmutableBitSet, measureList List<Lattice.Measure>, schema CalciteSchema, create boolean, exact boolean, tableFactory TableFactory) : Pair<CalciteSchema.TableEntry,TileKey> extracted from public defineTile(lattice Lattice, groupSet ImmutableBitSet, measureList List<Lattice.Measure>, schema CalciteSchema, create boolean, exact boolean) : Pair<CalciteSchema.TableEntry,TileKey> in class org.apache.calcite.materialize.MaterializationService
Remove Variable Modifier	final in variable tableEntry : CalciteSchema.TableEntry in method public defineMaterialization(schema CalciteSchema, tileKey TileKey, viewSql String, viewSchemaPath List<String>, suggestedTableName String, create boolean) : MaterializationKey from class org.apache.calcite.materialize.MaterializationService
Change Variable Type	pair : Pair<String,Table> to entry : CalciteSchema.TableEntry in method private getTableFrom(names List<String>, schemaNames List<String>) : RelOptTableImpl from class org.apache.calcite.prepare.CalciteCatalogReader
Rename Variable	pair : Pair<String,Table> to entry : CalciteSchema.TableEntry in method private getTableFrom(names List<String>, schemaNames List<String>) : RelOptTableImpl from class org.apache.calcite.prepare.CalciteCatalogReader
Developers have reported that 10708 commits involve refactoring but only 322 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 322 commits.

No refactorings detected at 5c049bc8764e931bd7771928fd25c21f33d24546

No refactorings detected at da5d5c2dfc3dfc26fb2e6a8f0dc7ed7dfd5dbc51

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b357f26b42f23be17e96f
Issue Title: : Detect if materialized view can be used to rewrite a query in non-trivial cases
Refactorings at 4a9b19390b2f9ab5a6d3bc2340c323d3a39cfa80
Change Method Access Modifier	private to public in method public reverse(kind SqlKind) : SqlKind from class org.apache.calcite.plan.RelOptUtil
Change Method Access Modifier	private to public in method public op(kind SqlKind, operator SqlOperator) : SqlOperator from class org.apache.calcite.plan.RelOptUtil
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MatchFailed
Change Attribute Access Modifier	package to public in attribute public INSTANCE : MatchFailed from class org.apache.calcite.plan.SubstitutionVisitor.MatchFailed
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.UnifyRule
Change Method Access Modifier	package to protected in method protected abstract apply(call UnifyRuleCall) : UnifyResult from class org.apache.calcite.plan.SubstitutionVisitor.UnifyRule
Change Method Access Modifier	package to protected in method protected match(visitor SubstitutionVisitor, query MutableRel, target MutableRel) : UnifyRuleCall from class org.apache.calcite.plan.SubstitutionVisitor.UnifyRule
Change Method Access Modifier	private to protected in method protected copy(slots E[], slotCount int) : ImmutableList<E> from class org.apache.calcite.plan.SubstitutionVisitor.UnifyRule
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.UnifyRuleCall
Change Attribute Access Modifier	package to protected in attribute protected rule : UnifyRule from class org.apache.calcite.plan.SubstitutionVisitor.UnifyRuleCall
Change Attribute Access Modifier	package to public in attribute public query : MutableRel from class org.apache.calcite.plan.SubstitutionVisitor.UnifyRuleCall
Change Attribute Access Modifier	package to public in attribute public target : MutableRel from class org.apache.calcite.plan.SubstitutionVisitor.UnifyRuleCall
Change Attribute Access Modifier	package to protected in attribute protected slots : ImmutableList<MutableRel> from class org.apache.calcite.plan.SubstitutionVisitor.UnifyRuleCall
Change Method Access Modifier	package to public in method public result(result MutableRel) : UnifyResult from class org.apache.calcite.plan.SubstitutionVisitor.UnifyRuleCall
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.UnifyResult
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.AbstractUnifyRule
Change Method Access Modifier	package to protected in method protected operand(clazz Class<? extends MutableRel>, inputOperands Operand...) : Operand from class org.apache.calcite.plan.SubstitutionVisitor.AbstractUnifyRule
Change Method Access Modifier	package to protected in method protected any(clazz Class<? extends MutableRel>) : Operand from class org.apache.calcite.plan.SubstitutionVisitor.AbstractUnifyRule
Change Method Access Modifier	package to protected in method protected query(ordinal int) : Operand from class org.apache.calcite.plan.SubstitutionVisitor.AbstractUnifyRule
Change Method Access Modifier	package to protected in method protected target(ordinal int) : Operand from class org.apache.calcite.plan.SubstitutionVisitor.AbstractUnifyRule
Change Method Access Modifier	private to protected in method protected invert(namedProjects List<Pair<RexNode,String>>, input MutableRel, shuttle RexShuttle) : MutableRel from class org.apache.calcite.plan.SubstitutionVisitor.FilterToProjectUnifyRule
Change Method Access Modifier	private to protected in method protected invert(model MutableRel, input MutableRel, project MutableProject) : MutableRel from class org.apache.calcite.plan.SubstitutionVisitor.FilterToProjectUnifyRule
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableRel
Encapsulate Attribute	package parent : MutableRel from class org.apache.calcite.plan.SubstitutionVisitor.MutableRel
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableLeafRel
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableSingleRel
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableScan
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableValues
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableProject
Change Method Access Modifier	package to public in method public of(rowType RelDataType, input MutableRel, projects List<RexNode>) : MutableProject from class org.apache.calcite.plan.SubstitutionVisitor.MutableProject
Change Method Access Modifier	package to public in method public of(child MutableRel, exprList List<RexNode>, fieldNameList List<String>) : MutableRel from class org.apache.calcite.plan.SubstitutionVisitor.MutableProject
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableFilter
Change Method Access Modifier	package to public in method public of(input MutableRel, condition RexNode) : MutableFilter from class org.apache.calcite.plan.SubstitutionVisitor.MutableFilter
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableAggregate
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableSort
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableSetOp
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableUnion
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableRels
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.MutableRelDumper
Change Class Access Modifier	private to protected in class org.apache.calcite.plan.SubstitutionVisitor.Operand
Change Method Access Modifier	package to public in method public abstract matches(visitor SubstitutionVisitor, rel MutableRel) : boolean from class org.apache.calcite.plan.SubstitutionVisitor.Operand
Change Method Access Modifier	package to public in method public matches(visitor SubstitutionVisitor, rel MutableRel) : boolean from class org.apache.calcite.plan.SubstitutionVisitor.InternalOperand
Change Method Access Modifier	package to public in method public matches(visitor SubstitutionVisitor, rel MutableRel) : boolean from class org.apache.calcite.plan.SubstitutionVisitor.AnyOperand
Change Method Access Modifier	package to public in method public matches(visitor SubstitutionVisitor, rel MutableRel) : boolean from class org.apache.calcite.plan.SubstitutionVisitor.QueryOperand
Change Method Access Modifier	package to public in method public matches(visitor SubstitutionVisitor, rel MutableRel) : boolean from class org.apache.calcite.plan.SubstitutionVisitor.TargetOperand
Encapsulate Attribute	protected slots : MutableRel[] from class org.apache.calcite.plan.SubstitutionVisitor
Change Method Access Modifier	private to protected in method protected getRexShuttle(target MutableProject) : RexShuttle from class org.apache.calcite.plan.SubstitutionVisitor
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,RelBuilderTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,RelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Developers have reported that 10708 commits involve refactoring but only 323 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 323 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b359426b42f23be17e9ec
Issue Title: : DML in Avatica, and split Execute out from Fetch request
Refactorings at cee8e8448c314753dacda8f880fac2bcab701f08
Add Parameter	statementType : Meta.StatementType in method protected signature(metaData ResultSetMetaData, parameterMetaData ParameterMetaData, sql String, statementType Meta.StatementType) : Signature from class org.apache.calcite.avatica.jdbc.JdbcMeta
Extract Method	public create(connectionId String, statementId int, resultSet ResultSet, maxRowCount long, signature Meta.Signature) : JdbcResultSet extracted from public create(connectionId String, statementId int, resultSet ResultSet, maxRowCount long) : JdbcResultSet in class org.apache.calcite.avatica.jdbc.JdbcResultSet
Parameterize Variable	sig : Meta.Signature to signature : Meta.Signature in method public create(connectionId String, statementId int, resultSet ResultSet, maxRowCount long, signature Meta.Signature) : JdbcResultSet from class org.apache.calcite.avatica.jdbc.JdbcResultSet
Extract Variable	frame : Meta.Frame in method protected executeQueryInternal(statement AvaticaStatement, signature Meta.Signature, firstFrame Meta.Frame) : ResultSet from class org.apache.calcite.avatica.AvaticaConnection
Extract Variable	signature2 : Meta.Signature in method protected executeQueryInternal(statement AvaticaStatement, signature Meta.Signature, firstFrame Meta.Frame) : ResultSet from class org.apache.calcite.avatica.AvaticaConnection
Add Parameter	statementType : Meta.StatementType in method public Signature(columns List<ColumnMetaData>, sql String, parameters List<AvaticaParameter>, internalParameters Map<String,Object>, cursorFactory CursorFactory, statementType Meta.StatementType) from class org.apache.calcite.avatica.Meta.Signature
Add Parameter	statementType : Meta.StatementType in method public create(columns List<ColumnMetaData>, sql String, parameters List<AvaticaParameter>, cursorFactory CursorFactory, statementType Meta.StatementType) : Signature from class org.apache.calcite.avatica.Meta.Signature
Remove Parameter	parameterValues : List<TypedValue> in method public fetch(h StatementHandle, parameterValues List<TypedValue>, offset long, fetchMaxRowCount int) : Frame from class org.apache.calcite.avatica.MetaImpl
Extract Variable	updateCount : int in method public toResponse(resultSet Meta.MetaResultSet) : ResultSetResponse from class org.apache.calcite.avatica.remote.LocalService
Remove Parameter	parameterValues : List<TypedValue> in method public fetch(h StatementHandle, parameterValues List<TypedValue>, offset long, fetchMaxRowCount int) : Frame from class org.apache.calcite.avatica.remote.RemoteMeta
Modify Class Annotation	@JsonSubTypes({@JsonSubTypes.Type(value=CatalogsRequest.class,name="getCatalogs"),@JsonSubTypes.Type(value=SchemasRequest.class,name="getSchemas"),@JsonSubTypes.Type(value=TablesRequest.class,name="getTables"),@JsonSubTypes.Type(value=TableTypesRequest.class,name="getTableTypes"),@JsonSubTypes.Type(value=TypeInfoRequest.class,name="getTypeInfo"),@JsonSubTypes.Type(value=ColumnsRequest.class,name="getColumns"),@JsonSubTypes.Type(value=PrepareRequest.class,name="prepare"),@JsonSubTypes.Type(value=PrepareAndExecuteRequest.class,name="prepareAndExecute"),@JsonSubTypes.Type(value=FetchRequest.class,name="fetch"),@JsonSubTypes.Type(value=CreateStatementRequest.class,name="createStatement"),@JsonSubTypes.Type(value=CloseStatementRequest.class,name="closeStatement"),@JsonSubTypes.Type(value=CloseConnectionRequest.class,name="closeConnection"),@JsonSubTypes.Type(value=ConnectionSyncRequest.class,name="connectionSync"),@JsonSubTypes.Type(value=DatabasePropertyRequest.class,name="databaseProperties")}) to @JsonSubTypes({@JsonSubTypes.Type(value=CatalogsRequest.class,name="getCatalogs"),@JsonSubTypes.Type(value=SchemasRequest.class,name="getSchemas"),@JsonSubTypes.Type(value=TablesRequest.class,name="getTables"),@JsonSubTypes.Type(value=TableTypesRequest.class,name="getTableTypes"),@JsonSubTypes.Type(value=TypeInfoRequest.class,name="getTypeInfo"),@JsonSubTypes.Type(value=ColumnsRequest.class,name="getColumns"),@JsonSubTypes.Type(value=ExecuteRequest.class,name="execute"),@JsonSubTypes.Type(value=PrepareRequest.class,name="prepare"),@JsonSubTypes.Type(value=PrepareAndExecuteRequest.class,name="prepareAndExecute"),@JsonSubTypes.Type(value=FetchRequest.class,name="fetch"),@JsonSubTypes.Type(value=CreateStatementRequest.class,name="createStatement"),@JsonSubTypes.Type(value=CloseStatementRequest.class,name="closeStatement"),@JsonSubTypes.Type(value=CloseConnectionRequest.class,name="closeConnection"),@JsonSubTypes.Type(value=ConnectionSyncRequest.class,name="connectionSync"),@JsonSubTypes.Type(value=DatabasePropertyRequest.class,name="databaseProperties")}) in class org.apache.calcite.avatica.remote.Service.Request
Remove Parameter	parameterValues : List<TypedValue> in method public FetchRequest(connectionId String, statementId int, parameterValues List<TypedValue>, offset long, fetchMaxRowCount int) from class org.apache.calcite.avatica.remote.Service.FetchRequest
Remove Parameter	parameterValues : List<TypedValue> in method public fetch(h StatementHandle, parameterValues List<TypedValue>, offset long, fetchMaxRowCount int) : Frame from class org.apache.calcite.jdbc.CalciteMetaImpl
Extract Method	private makePostProcessor(initialData List<JdbcTest.Employee>) : CalciteAssert.ConnectionPostProcessor extracted from private mutable(employees List<JdbcTest.Employee>) : CalciteAssert.AssertThat in class org.apache.calcite.test.JdbcFrontLinqBackTest
Rename Parameter	employees : List<JdbcTest.Employee> to initialData : List<JdbcTest.Employee> in method private makePostProcessor(initialData List<JdbcTest.Employee>) : CalciteAssert.ConnectionPostProcessor from class org.apache.calcite.test.JdbcFrontLinqBackTest
Add Method Annotation	@Ignore in method public testInsert() : void from class org.apache.calcite.test.JdbcFrontLinqBackTest
Add Method Annotation	@Ignore in method public testInsert2() : void from class org.apache.calcite.test.JdbcFrontLinqBackTest
Extract Class	org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest
Extract Class	org.apache.calcite.avatica.proto.Requests.ExecuteRequest from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder
Pull Up Attribute	private signature : Meta.Signature from class org.apache.calcite.avatica.AvaticaPreparedStatement to private signature : Meta.Signature from class org.apache.calcite.avatica.AvaticaStatement
Move Attribute	public PARAMETER_VALUES_FIELD_NUMBER : int from class org.apache.calcite.avatica.proto.Requests.FetchRequest to public PARAMETER_VALUES_FIELD_NUMBER : int from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest
Move Attribute	public HAS_PARAMETER_VALUES_FIELD_NUMBER : int from class org.apache.calcite.avatica.proto.Requests.FetchRequest to public HAS_PARAMETER_VALUES_FIELD_NUMBER : int from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest
Move Attribute	public parameterValues : List<TypedValue> from class org.apache.calcite.avatica.remote.Service.FetchRequest to public parameterValues : List<TypedValue> from class org.apache.calcite.avatica.remote.Service.ExecuteRequest
Move Method	public getParameterValuesList() : List<org.apache.calcite.avatica.proto.Common.TypedValue> from class org.apache.calcite.avatica.proto.Requests.FetchRequest to public getParameterValuesList() : List<org.apache.calcite.avatica.proto.Common.TypedValue> from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public getParameterValuesCount() : int from class org.apache.calcite.avatica.proto.Requests.FetchRequest to public getParameterValuesCount() : int from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public getParameterValues(index int) : Common.TypedValue from class org.apache.calcite.avatica.proto.Requests.FetchRequest to public getParameterValues(index int) : Common.TypedValue from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public getParameterValuesOrBuilder(index int) : Common.TypedValueOrBuilder from class org.apache.calcite.avatica.proto.Requests.FetchRequest to public getParameterValuesOrBuilder(index int) : Common.TypedValueOrBuilder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public getParameterValuesOrBuilderList() : List<? extends org.apache.calcite.avatica.proto.Common.TypedValueOrBuilder> from class org.apache.calcite.avatica.proto.Requests.FetchRequest to public getParameterValuesOrBuilderList() : List<? extends org.apache.calcite.avatica.proto.Common.TypedValueOrBuilder> from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public getHasParameterValues() : boolean from class org.apache.calcite.avatica.proto.Requests.FetchRequest to public getHasParameterValues() : boolean from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Attribute	private bitField0_ : int from class org.apache.calcite.avatica.proto.Requests.FetchRequest to private bitField0_ : int from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Attribute	private parameterValues_ : java.util.List<org.apache.calcite.avatica.proto.Common.TypedValue> from class org.apache.calcite.avatica.proto.Requests.FetchRequest to private parameterValues_ : java.util.List<org.apache.calcite.avatica.proto.Common.TypedValue> from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Attribute	private hasParameterValues_ : boolean from class org.apache.calcite.avatica.proto.Requests.FetchRequest to private hasParameterValues_ : boolean from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public getParameterValuesList() : List<org.apache.calcite.avatica.proto.Common.TypedValue> from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public getParameterValuesList() : List<org.apache.calcite.avatica.proto.Common.TypedValue> from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest
Move Method	public getParameterValuesOrBuilderList() : List<? extends org.apache.calcite.avatica.proto.Common.TypedValueOrBuilder> from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public getParameterValuesOrBuilderList() : List<? extends org.apache.calcite.avatica.proto.Common.TypedValueOrBuilder> from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest
Move Method	public getParameterValuesCount() : int from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public getParameterValuesCount() : int from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest
Move Method	public getParameterValues(index int) : Common.TypedValue from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public getParameterValues(index int) : Common.TypedValue from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest
Move Method	public getParameterValuesOrBuilder(index int) : Common.TypedValueOrBuilder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public getParameterValuesOrBuilder(index int) : Common.TypedValueOrBuilder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest
Move Method	public getHasParameterValues() : boolean from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public getHasParameterValues() : boolean from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest
Move Attribute	private bitField0_ : int from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to private bitField0_ : int from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest
Move Attribute	private parameterValues_ : java.util.List<org.apache.calcite.avatica.proto.Common.TypedValue> from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to private parameterValues_ : java.util.List<org.apache.calcite.avatica.proto.Common.TypedValue> from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest
Move Attribute	private hasParameterValues_ : boolean from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to private hasParameterValues_ : boolean from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest
Change Parameter Type	value : boolean to value : int in method public setStatementTypeValue(value int) : Builder from class org.apache.calcite.avatica.proto.Common.Signature.Builder
Move And Rename Method	public setHasParameterValues(value boolean) : Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public setStatementTypeValue(value int) : Builder from class org.apache.calcite.avatica.proto.Common.Signature.Builder
Move Method	public getParameterValuesList() : List<org.apache.calcite.avatica.proto.Common.TypedValue> from class org.apache.calcite.avatica.proto.Requests.FetchRequestOrBuilder to public getParameterValuesList() : List<org.apache.calcite.avatica.proto.Common.TypedValue> from class org.apache.calcite.avatica.proto.Requests.ExecuteRequestOrBuilder
Move Method	public getParameterValues(index int) : Common.TypedValue from class org.apache.calcite.avatica.proto.Requests.FetchRequestOrBuilder to public getParameterValues(index int) : Common.TypedValue from class org.apache.calcite.avatica.proto.Requests.ExecuteRequestOrBuilder
Move Method	public getParameterValuesCount() : int from class org.apache.calcite.avatica.proto.Requests.FetchRequestOrBuilder to public getParameterValuesCount() : int from class org.apache.calcite.avatica.proto.Requests.ExecuteRequestOrBuilder
Move Method	public getParameterValuesOrBuilderList() : List<? extends org.apache.calcite.avatica.proto.Common.TypedValueOrBuilder> from class org.apache.calcite.avatica.proto.Requests.FetchRequestOrBuilder to public getParameterValuesOrBuilderList() : List<? extends org.apache.calcite.avatica.proto.Common.TypedValueOrBuilder> from class org.apache.calcite.avatica.proto.Requests.ExecuteRequestOrBuilder
Move Method	public getParameterValuesOrBuilder(index int) : Common.TypedValueOrBuilder from class org.apache.calcite.avatica.proto.Requests.FetchRequestOrBuilder to public getParameterValuesOrBuilder(index int) : Common.TypedValueOrBuilder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequestOrBuilder
Move Method	public getHasParameterValues() : boolean from class org.apache.calcite.avatica.proto.Requests.FetchRequestOrBuilder to public getHasParameterValues() : boolean from class org.apache.calcite.avatica.proto.Requests.ExecuteRequestOrBuilder
Move Method	private ensureParameterValuesIsMutable() : void from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to private ensureParameterValuesIsMutable() : void from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public setParameterValues(index int, value Common.TypedValue) : Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public setParameterValues(index int, value Common.TypedValue) : Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public setParameterValues(index int, builderForValue Common.TypedValue.Builder) : Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public setParameterValues(index int, builderForValue Common.TypedValue.Builder) : Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public addParameterValues(value Common.TypedValue) : Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public addParameterValues(value Common.TypedValue) : Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public addParameterValues(index int, value Common.TypedValue) : Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public addParameterValues(index int, value Common.TypedValue) : Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public addParameterValues(builderForValue Common.TypedValue.Builder) : Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public addParameterValues(builderForValue Common.TypedValue.Builder) : Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public addParameterValues(index int, builderForValue Common.TypedValue.Builder) : Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public addParameterValues(index int, builderForValue Common.TypedValue.Builder) : Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public addAllParameterValues(values Iterable<? extends org.apache.calcite.avatica.proto.Common.TypedValue>) : Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public addAllParameterValues(values Iterable<? extends org.apache.calcite.avatica.proto.Common.TypedValue>) : Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public clearParameterValues() : Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public clearParameterValues() : Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public removeParameterValues(index int) : Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public removeParameterValues(index int) : Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public getParameterValuesBuilder(index int) : Common.TypedValue.Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public getParameterValuesBuilder(index int) : Common.TypedValue.Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public addParameterValuesBuilder() : Common.TypedValue.Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public addParameterValuesBuilder() : Common.TypedValue.Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public addParameterValuesBuilder(index int) : Common.TypedValue.Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public addParameterValuesBuilder(index int) : Common.TypedValue.Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public getParameterValuesBuilderList() : List<org.apache.calcite.avatica.proto.Common.TypedValue.Builder> from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public getParameterValuesBuilderList() : List<org.apache.calcite.avatica.proto.Common.TypedValue.Builder> from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	private getParameterValuesFieldBuilder() : RepeatedFieldBuilder<org.apache.calcite.avatica.proto.Common.TypedValue,org.apache.calcite.avatica.proto.Common.TypedValue.Builder,org.apache.calcite.avatica.proto.Common.TypedValueOrBuilder> from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to private getParameterValuesFieldBuilder() : RepeatedFieldBuilder<org.apache.calcite.avatica.proto.Common.TypedValue,org.apache.calcite.avatica.proto.Common.TypedValue.Builder,org.apache.calcite.avatica.proto.Common.TypedValueOrBuilder> from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Move Method	public clearHasParameterValues() : Builder from class org.apache.calcite.avatica.proto.Requests.FetchRequest.Builder to public clearHasParameterValues() : Builder from class org.apache.calcite.avatica.proto.Requests.ExecuteRequest.Builder
Extract And Move Method	protected setSignature(signature Meta.Signature) : void extracted from protected prepareAndExecuteInternal(statement AvaticaStatement, sql String, maxRowCount long) : Meta.ExecuteResult in class org.apache.calcite.avatica.AvaticaConnection & moved to class org.apache.calcite.avatica.AvaticaStatement
Remove Parameter	parameterValues : List<TypedValue> in method public fetch(h StatementHandle, parameterValues List<TypedValue>, offset long, fetchMaxRowCount int) : Frame from class org.apache.calcite.avatica.jdbc.JdbcMeta
Remove Parameter	parameterValues : List<TypedValue> in method public fetch(h StatementHandle, parameterValues List<TypedValue>, offset long, fetchMaxRowCount int) : Frame from class org.apache.calcite.avatica.Meta
Developers have reported that 10708 commits involve refactoring but only 324 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 324 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b359726b42f23be17e9f7
Issue Title: : Extend JoinProjectTransposeRule with option to support outer joins
Refactorings at 2376ae4a876b421ee19c2b2a05a6bd1d306e442b
Change Method Access Modifier	private to protected in method protected createProjectExprs(projRel Project, joinChild RelNode, adjustmentAmount int, rexBuilder RexBuilder, joinChildrenFields List<RelDataTypeField>, projects List<Pair<RexNode,String>>) : void from class org.apache.calcite.rel.rules.JoinProjectTransposeRule
Rename Parameter	pFactory : ProjectFactory to projectFactory : ProjectFactory in method public JoinProjectTransposeRule(operand RelOptRuleOperand, description String, includeOuter boolean, projectFactory ProjectFactory) from class org.apache.calcite.rel.rules.JoinProjectTransposeRule
Add Parameter	includeOuter : boolean in method public JoinProjectTransposeRule(operand RelOptRuleOperand, description String, includeOuter boolean, projectFactory ProjectFactory) from class org.apache.calcite.rel.rules.JoinProjectTransposeRule
Developers have reported that 10708 commits involve refactoring but only 325 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 325 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b359c26b42f23be17ea11
Issue Title: : Add RelOptRuleOperand constructor that takes a predicate
Refactorings at 3afe4b14942e4a60672f807f52b512b6df24b28b
Change Parameter Type	clazz : Class<? extends RelNode> to clazz : Class<R> in method public operand(clazz Class<R>, trait RelTrait, predicate Predicate<? super R>, operandList RelOptRuleOperandChildren) : RelOptRuleOperand from class org.eigenbase.relopt.RelOptRule
Add Parameter	trait : RelTrait in method public operand(clazz Class<R>, trait RelTrait, predicate Predicate<? super R>, operandList RelOptRuleOperandChildren) : RelOptRuleOperand from class org.eigenbase.relopt.RelOptRule
Add Parameter	predicate : Predicate<? super R> in method public operand(clazz Class<R>, trait RelTrait, predicate Predicate<? super R>, operandList RelOptRuleOperandChildren) : RelOptRuleOperand from class org.eigenbase.relopt.RelOptRule
Change Parameter Type	clazz : Class<? extends RelNode> to clazz : Class<R> in method public operand(clazz Class<R>, trait RelTrait, operandList RelOptRuleOperandChildren) : RelOptRuleOperand from class org.eigenbase.relopt.RelOptRule
Change Parameter Type	clazz : Class<? extends RelNode> to clazz : Class<R> in method public operand(clazz Class<R>, first RelOptRuleOperand, rest RelOptRuleOperand...) : RelOptRuleOperand from class org.eigenbase.relopt.RelOptRule
Change Parameter Type	clazz : Class<? extends RelNode> to clazz : Class<R> in method protected RelOptRuleOperand(clazz Class<R>, trait RelTrait, predicate Predicate<? super R>, children RelOptRuleOperandChildren) from class org.eigenbase.relopt.RelOptRuleOperand
Add Parameter	predicate : Predicate<? super R> in method protected RelOptRuleOperand(clazz Class<R>, trait RelTrait, predicate Predicate<? super R>, children RelOptRuleOperandChildren) from class org.eigenbase.relopt.RelOptRuleOperand
Developers have reported that 10708 commits involve refactoring but only 326 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 326 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b35ad26b42f23be17ea74
Issue Title: : Change semi-join rules to make use of factories
Refactorings at c91259dd5b89351a5218af5c89471748213547c2
Change Variable Type	filter : FilterRel to filter : FilterRelBase in method public onMatch(call RelOptRuleCall) : void from class org.eigenbase.rel.rules.PushSemiJoinPastFilterRule
Add Parameter	filterFactory : FilterFactory in method public PushSemiJoinPastFilterRule(filterFactory FilterFactory) from class org.eigenbase.rel.rules.PushSemiJoinPastFilterRule
Change Method Access Modifier	private to public in method public PushSemiJoinPastFilterRule(filterFactory FilterFactory) from class org.eigenbase.rel.rules.PushSemiJoinPastFilterRule
Add Parameter	projectFactory : ProjectFactory in method public PushSemiJoinPastProjectRule(projectFactory ProjectFactory) from class org.eigenbase.rel.rules.PushSemiJoinPastProjectRule
Change Method Access Modifier	private to public in method public PushSemiJoinPastProjectRule(projectFactory ProjectFactory) from class org.eigenbase.rel.rules.PushSemiJoinPastProjectRule
Developers have reported that 10708 commits involve refactoring but only 327 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 327 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b361226b42f23be17ebec
Issue Title: : Improve how ReduceExpressionsRule handles duplicate constraints
Refactorings at 690faa55f553fdaa86aa91a3f2c731d6c16007ca
Change Variable Type	builder : Map<RexNode,RexLiteral> to builder : ImmutableMap.Builder<RexNode,RexLiteral> in method protected predicateConstants(predicates RelOptPredicateList) : ImmutableMap<RexNode,RexLiteral> from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Developers have reported that 10708 commits involve refactoring but only 328 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 328 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b361426b42f23be17ebfb
Issue Title: : Add Oracle test environment
Refactorings at 3f8363855985106cccefa339dd12a3f86dacabb4
Extract Method	package checkResult(expected String, resultSetFormatter ResultSetFormatter) : Function<ResultSet,Void> extracted from package checkResult(expected String) : Function<ResultSet,Void> in class org.apache.calcite.test.CalciteAssert
Add Parameter	schema : String in method public ConnectionSpec(url String, username String, password String, driver String, schema String) from class org.apache.calcite.test.ConnectionSpec
Change Variable Type	buf : StringBuilder to formatter : CalciteAssert.ResultSetFormatter in method public apply(input ResultSet) : Void from class org.apache.calcite.test.StreamTest.startsWith.new Function<ResultSet,Void>
Rename Variable	buf : StringBuilder to formatter : CalciteAssert.ResultSetFormatter in method public apply(input ResultSet) : Void from class org.apache.calcite.test.StreamTest.startsWith.new Function<ResultSet,Void>
Change Return Type	StringBuilder to ResultSetFormatter in method package rowToString(resultSet ResultSet, metaData ResultSetMetaData) : ResultSetFormatter from class org.apache.calcite.test.CalciteAssert.ResultSetFormatter
Remove Parameter	buf : StringBuilder in method package rowToString(resultSet ResultSet, buf StringBuilder, metaData ResultSetMetaData) : StringBuilder from class org.apache.calcite.test.CalciteAssert
Remove Method Modifier	static in method package rowToString(resultSet ResultSet, buf StringBuilder, metaData ResultSetMetaData) : StringBuilder from class org.apache.calcite.test.CalciteAssert
Move Method	package rowToString(resultSet ResultSet, buf StringBuilder, metaData ResultSetMetaData) : StringBuilder from class org.apache.calcite.test.CalciteAssert to package rowToString(resultSet ResultSet, metaData ResultSetMetaData) : ResultSetFormatter from class org.apache.calcite.test.CalciteAssert.ResultSetFormatter
Extract Method	protected adjustValue(string String) : String extracted from package rowToString(resultSet ResultSet, buf StringBuilder, metaData ResultSetMetaData) : StringBuilder in class org.apache.calcite.test.CalciteAssert.ResultSetFormatter
Developers have reported that 10708 commits involve refactoring but only 329 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 329 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b362f26b42f23be17ec8a
Issue Title: : Add "Piglet", a subset of Pig Latin on top of Calcite algebra
Refactorings at 5cee2a1ada46a38212122e562a9326a501d3187e
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,RelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Developers have reported that 10708 commits involve refactoring but only 330 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 330 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b364526b42f23be17ecf4
Issue Title: : Make ReduceExpressionsRule extensible
Refactorings at b4c4f49389cd74cd2e748f33ced1add9278bf8f4
Change Class Access Modifier	private to protected in class org.apache.calcite.rel.rules.ReduceExpressionsRule.RexReplacer
Change Class Access Modifier	private to protected in class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Change Class Access Modifier	private to protected in class org.apache.calcite.rel.rules.ReduceExpressionsRule.CaseShuttle
Change Method Access Modifier	package to protected in method protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Method Access Modifier	private to protected in method protected findReducibleExps(typeFactory RelDataTypeFactory, exps List<RexNode>, constants ImmutableMap<RexNode,RexLiteral>, constExps List<RexNode>, addCasts List<Boolean>, removableCasts List<RexNode>) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Method Access Modifier	private to protected in method protected predicateConstants(predicates RelOptPredicateList) : ImmutableMap<RexNode,RexLiteral> from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Method Access Modifier	private to protected in method protected pushPredicateIntoCase(call RexCall) : RexCall from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Method Access Modifier	private to protected in method protected substitute(call RexCall, ordinal int, node RexNode) : RexNode from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Parameter	relBuilderFactory : RelBuilderFactory in method protected ReduceExpressionsRule(clazz Class<? extends RelNode>, relBuilderFactory RelBuilderFactory, desc String) from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Method Access Modifier	private to protected in method protected ReduceExpressionsRule(clazz Class<? extends RelNode>, relBuilderFactory RelBuilderFactory, desc String) from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Developers have reported that 10708 commits involve refactoring but only 331 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 331 commits.

No refactorings detected at afd7e2e213d8db6a2a1689bb0e9842833178ff1b

No refactorings detected at 13f6efddf350ee87699c767d6d949563f02208b2

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b368426b42f23be17ede6
Issue Title: : Improve handling of ARRAY, MULTISET, STRUCT types
Refactorings at 4000edd8e69956cdc6a95f3c8d6292d648c0bb32
Change Class Access Modifier	private to package in class org.apache.calcite.avatica.util.AbstractCursor.ArrayAccessor
Change Attribute Access Modifier	private to package in attribute package componentType : ColumnMetaData.AvaticaType from class org.apache.calcite.avatica.util.AbstractCursor.ArrayAccessor
Change Attribute Access Modifier	private to package in attribute package factory : ArrayImpl.Factory from class org.apache.calcite.avatica.util.AbstractCursor.ArrayAccessor
Add Parameter	componentAccessor : Accessor in method public ArrayAccessor(getter Getter, componentType ColumnMetaData.AvaticaType, componentAccessor Accessor, componentSlotGetter SlotGetter, factory ArrayImpl.Factory) from class org.apache.calcite.avatica.util.AbstractCursor.ArrayAccessor
Add Parameter	componentSlotGetter : SlotGetter in method public ArrayAccessor(getter Getter, componentType ColumnMetaData.AvaticaType, componentAccessor Accessor, componentSlotGetter SlotGetter, factory ArrayImpl.Factory) from class org.apache.calcite.avatica.util.AbstractCursor.ArrayAccessor
Extract Method	protected createAccessor(columnMetaData ColumnMetaData, getter Getter, localCalendar Calendar, factory ArrayImpl.Factory) : Accessor extracted from protected createAccessor(columnMetaData ColumnMetaData, ordinal int, localCalendar Calendar, factory ArrayImpl.Factory) : Accessor in class org.apache.calcite.avatica.util.AbstractCursor
Change Variable Type	arrayType : ColumnMetaData.ArrayType to componentAccessor : AbstractCursor.ArrayAccessor in method protected getArray(list List) : Object from class org.apache.calcite.avatica.util.ArrayImpl
Rename Variable	arrayType : ColumnMetaData.ArrayType to componentAccessor : AbstractCursor.ArrayAccessor in method protected getArray(list List) : Object from class org.apache.calcite.avatica.util.ArrayImpl
Merge Parameter	[elementType : ColumnMetaData.AvaticaType, factory : Factory] to accessor : AbstractCursor.ArrayAccessor in method public ArrayImpl(list List, accessor AbstractCursor.ArrayAccessor) from class org.apache.calcite.avatica.util.ArrayImpl
Merge Attribute	[elementType : ColumnMetaData.AvaticaType, factory : Factory] to accessor : AbstractCursor.ArrayAccessor in class org.apache.calcite.avatica.util.ArrayImpl
Change Attribute Type	types : LinkedHashSet<Type> to types : Collection<Type> in class org.apache.calcite.adapter.enumerable.EnumerableRelImplementor.TypeFinder
Change Parameter Type	types : LinkedHashSet<Type> to types : Collection<Type> in method package TypeFinder(types Collection<Type>) from class org.apache.calcite.adapter.enumerable.EnumerableRelImplementor.TypeFinder
Add Variable Modifier	final in variable memberDeclarations : List<MemberDeclaration> in method public implementRoot(rootRel EnumerableRel, prefer EnumerableRel.Prefer) : ClassDeclaration from class org.apache.calcite.adapter.enumerable.EnumerableRelImplementor
Add Variable Modifier	final in variable conditions : List<Expression> in method private classDecl(type JavaTypeFactoryImpl.SyntheticRecordType) : ClassDeclaration from class org.apache.calcite.adapter.enumerable.EnumerableRelImplementor
Add Variable Modifier	final in variable list : List<RelDataTypeField> in method public createStructType(type Class) : RelDataType from class org.apache.calcite.jdbc.JavaTypeFactoryImpl
Add Variable Modifier	final in variable syntheticRecordType : SyntheticRecordType in method public createType(type Type) : RelDataType from class org.apache.calcite.jdbc.JavaTypeFactoryImpl
Extract Variable	typeOrdinal : int in method private avaticaType(typeFactory JavaTypeFactory, type RelDataType, fieldType RelDataType) : ColumnMetaData.AvaticaType from class org.apache.calcite.prepare.CalcitePrepareImpl
Add Attribute Annotation	@org.apache.calcite.adapter.java.Array(component = Employee.class) in attribute public employees : List<Employee> from class org.apache.calcite.test.JdbcTest.Department
Move Method	private append(buf StringBuilder, o Object) : void from class org.apache.calcite.avatica.util.AbstractCursor.ArrayAccessor to private append(buf StringBuilder, o Object) : void from class org.apache.calcite.avatica.util.ArrayImpl
Developers have reported that 10708 commits involve refactoring but only 332 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 332 commits.

No refactorings detected at d50c46a1a970c6bad47f31c1dfc56a14146c37f3

No refactorings detected at 5ed5ef46909774c6284a6a7521cc3b2c0d23177a

No refactorings detected at c2059f1524b50c120f655025efca958d61e6eb2b

No refactorings detected at b3d35c03310e2e8aff57cb46e4985ed9e7506e1d

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b36df26b42f23be17f007
Issue Title: : Add a "contract" for the result of a relational expression
Refactorings at 5a3970635030ddde27e4237da5d8c5c3419c34b5
Change Parameter Type	relNode : RelNode to root : RelRoot in method public ConvertResult(prepare CalcitePrepareImpl, validator SqlValidator, sql String, sqlNode SqlNode, rowType RelDataType, root RelRoot) from class org.apache.calcite.jdbc.CalcitePrepare.ConvertResult
Rename Parameter	relNode : RelNode to root : RelRoot in method public ConvertResult(prepare CalcitePrepareImpl, validator SqlValidator, sql String, sqlNode SqlNode, rowType RelDataType, root RelRoot) from class org.apache.calcite.jdbc.CalcitePrepare.ConvertResult
Rename Attribute	relNode : RelNode to root : RelRoot in class org.apache.calcite.jdbc.CalcitePrepare.ConvertResult
Change Attribute Type	relNode : RelNode to root : RelRoot in class org.apache.calcite.jdbc.CalcitePrepare.ConvertResult
Change Parameter Type	relNode : RelNode to root : RelRoot in method public AnalyzeViewResult(prepare CalcitePrepareImpl, validator SqlValidator, sql String, sqlNode SqlNode, rowType RelDataType, root RelRoot, table Table, tablePath ImmutableList<String>, constraint RexNode, columnMapping ImmutableIntList) from class org.apache.calcite.jdbc.CalcitePrepare.AnalyzeViewResult
Rename Parameter	relNode : RelNode to root : RelRoot in method public AnalyzeViewResult(prepare CalcitePrepareImpl, validator SqlValidator, sql String, sqlNode SqlNode, rowType RelDataType, root RelRoot, table Table, tablePath ImmutableList<String>, constraint RexNode, columnMapping ImmutableIntList) from class org.apache.calcite.jdbc.CalcitePrepare.AnalyzeViewResult
Change Return Type	RelNode to RelRoot in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>) : RelRoot from class org.apache.calcite.plan.RelOptTable.ViewExpander
Change Return Type	RelNode to RelRoot in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>) : RelRoot from class org.apache.calcite.plan.RelOptUtil.getContext.new RelOptTable.ToRelContext
Extract Variable	root : RelRoot in method public prepareQueryable(queryable Queryable, resultType RelDataType) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Add Variable Modifier	final in variable rel : RelNode in method public prepareQueryable(queryable Queryable, resultType RelDataType) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Rename Variable	rootRel : RelNode to rel : RelNode in method public prepareQueryable(queryable Queryable, resultType RelDataType) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Change Variable Type	relNode : RelNode to root : RelRoot in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>) : RelRoot from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Rename Variable	relNode : RelNode to root : RelRoot in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>) : RelRoot from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Change Return Type	RelNode to RelRoot in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>) : RelRoot from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Change Parameter Type	rootRel : RelNode to root : RelRoot in method protected createPreparedExplanation(resultType RelDataType, parameterRowType RelDataType, root RelRoot, explainAsXml boolean, detailLevel SqlExplainLevel) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Rename Parameter	rootRel : RelNode to root : RelRoot in method protected createPreparedExplanation(resultType RelDataType, parameterRowType RelDataType, root RelRoot, explainAsXml boolean, detailLevel SqlExplainLevel) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Add Parameter	root : RelRoot in method protected implement(root RelRoot) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Remove Parameter	rowType : RelDataType in method protected implement(rowType RelDataType, rootRel RelNode, sqlKind SqlKind) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Remove Parameter	rootRel : RelNode in method protected implement(rowType RelDataType, rootRel RelNode, sqlKind SqlKind) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Remove Parameter	sqlKind : SqlKind in method protected implement(rowType RelDataType, rootRel RelNode, sqlKind SqlKind) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Change Parameter Type	rootRel : RelNode to root : RelRoot in method public CalcitePreparedExplain(resultType RelDataType, parameterRowType RelDataType, root RelRoot, explainAsXml boolean, detailLevel SqlExplainLevel) from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparedExplain
Rename Parameter	rootRel : RelNode to root : RelRoot in method public CalcitePreparedExplain(resultType RelDataType, parameterRowType RelDataType, root RelRoot, explainAsXml boolean, detailLevel SqlExplainLevel) from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparedExplain
Change Variable Type	list : ArrayList<RexNode> to list : List<RexNode> in method private toRex(expressions List<Expression>) : List<RexNode> from class org.apache.calcite.prepare.CalcitePrepareImpl.EmptyScalarTranslator
Add Variable Modifier	final in variable list : List<RexNode> in method private toRex(expressions List<Expression>) : List<RexNode> from class org.apache.calcite.prepare.CalcitePrepareImpl.EmptyScalarTranslator
Change Variable Type	relNode : RelNode to root : RelRoot in method private convert_(context Context, sql String, analyze boolean, fail boolean, catalogReader CalciteCatalogReader, validator SqlValidator, sqlNode1 SqlNode) : ParseResult from class org.apache.calcite.prepare.CalcitePrepareImpl
Rename Variable	relNode : RelNode to root : RelRoot in method private convert_(context Context, sql String, analyze boolean, fail boolean, catalogReader CalciteCatalogReader, validator SqlValidator, sqlNode1 SqlNode) : ParseResult from class org.apache.calcite.prepare.CalcitePrepareImpl
Change Parameter Type	rel : RelNode to root : RelRoot in method private analyze_(validator SqlValidator, sql String, sqlNode SqlNode, root RelRoot, fail boolean) : AnalyzeViewResult from class org.apache.calcite.prepare.CalcitePrepareImpl
Rename Parameter	rel : RelNode to root : RelRoot in method private analyze_(validator SqlValidator, sql String, sqlNode SqlNode, root RelRoot, fail boolean) : AnalyzeViewResult from class org.apache.calcite.prepare.CalcitePrepareImpl
Change Return Type	RelNode to RelRoot in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>) : RelRoot from class org.apache.calcite.prepare.LixToRelTranslator
Change Return Type	RelNode to RelRoot in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>) : RelRoot from class org.apache.calcite.prepare.PlannerImpl.ViewExpanderImpl
Extract Method	public rel(sql SqlNode) : RelRoot extracted from public convert(sql SqlNode) : RelNode in class org.apache.calcite.prepare.PlannerImpl
Add Method Modifier	final in method public convert(sql SqlNode) : RelNode from class org.apache.calcite.prepare.PlannerImpl
Rename Attribute	rel : RelNode to root : RelRoot in class org.apache.calcite.prepare.PlannerImpl
Change Attribute Type	rel : RelNode to root : RelRoot in class org.apache.calcite.prepare.PlannerImpl
Change Parameter Type	rel : RelNode to root : RelRoot in method public PreparedExplain(rowType RelDataType, parameterRowType RelDataType, root RelRoot, asXml boolean, detailLevel SqlExplainLevel) from class org.apache.calcite.prepare.Prepare.PreparedExplain
Rename Parameter	rel : RelNode to root : RelRoot in method public PreparedExplain(rowType RelDataType, parameterRowType RelDataType, root RelRoot, asXml boolean, detailLevel SqlExplainLevel) from class org.apache.calcite.prepare.Prepare.PreparedExplain
Rename Attribute	rel : RelNode to root : RelRoot in class org.apache.calcite.prepare.Prepare.PreparedExplain
Change Attribute Type	rel : RelNode to root : RelRoot in class org.apache.calcite.prepare.Prepare.PreparedExplain
Change Variable Type	rootRel : RelNode to root : RelRoot in method public prepareSql(sqlQuery SqlNode, sqlNodeOriginal SqlNode, runtimeContextClass Class, validator SqlValidator, needsValidation boolean, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : PreparedResult from class org.apache.calcite.prepare.Prepare
Rename Variable	rootRel : RelNode to root : RelRoot in method public prepareSql(sqlQuery SqlNode, sqlNodeOriginal SqlNode, runtimeContextClass Class, validator SqlValidator, needsValidation boolean, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : PreparedResult from class org.apache.calcite.prepare.Prepare
Change Return Type	RelNode to RelRoot in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>) : RelRoot from class org.apache.calcite.prepare.Prepare
Change Return Type	RelNode to RelRoot in method protected optimize(root RelRoot, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : RelRoot from class org.apache.calcite.prepare.Prepare
Rename Parameter	rootRel : RelNode to root : RelRoot in method protected optimize(root RelRoot, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : RelRoot from class org.apache.calcite.prepare.Prepare
Change Parameter Type	rootRel : RelNode to root : RelRoot in method protected optimize(root RelRoot, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : RelRoot from class org.apache.calcite.prepare.Prepare
Add Attribute Annotation	@Deprecated in attribute public PRESERVE : RelCollation from class org.apache.calcite.rel.RelCollations
Change Attribute Access Modifier	private to protected in attribute protected input : RelNode from class org.apache.calcite.rel.SingleRel
Extract Method	public getStringList(tag String) : List<String> extracted from public getTable(table String) : RelOptTable in class org.apache.calcite.rel.externalize.RelJsonReader.readRel.input.new RelInput
Extract Method	public getStringList(tag String) : List<String> extracted from public getInputs() : List<RelNode> in class org.apache.calcite.rel.externalize.RelJsonReader.readRel.input.new RelInput
Add Variable Modifier	final in variable jsonInputs : List<String> in method public getInputs() : List<RelNode> from class org.apache.calcite.rel.externalize.RelJsonReader.readRel.input.new RelInput
Add Variable Annotation	@SuppressWarnings("unchecked") in variable jsonAggs : List<Map<String,Object>> in method public getAggregateCalls(tag String) : List<AggregateCall> from class org.apache.calcite.rel.externalize.RelJsonReader.readRel.input.new RelInput
Add Variable Modifier	final in variable jsonAggs : List<Map<String,Object>> in method public getAggregateCalls(tag String) : List<AggregateCall> from class org.apache.calcite.rel.externalize.RelJsonReader.readRel.input.new RelInput
Add Variable Annotation	@SuppressWarnings("unchecked") in variable jsonNodes : List<Object> in method public getExpressionList(tag String) : List<RexNode> from class org.apache.calcite.rel.externalize.RelJsonReader.readRel.input.new RelInput
Add Variable Modifier	final in variable jsonTuples : List<List> in method public getTuples(tag String) : ImmutableList<ImmutableList<RexLiteral>> from class org.apache.calcite.rel.externalize.RelJsonReader.readRel.input.new RelInput
Merge Catch	[catch(InstantiationException e), catch(IllegalAccessException e)] to catch(InstantiationException|IllegalAccessException e) in method private readRel(jsonRel Map<String,Object>) : void from class org.apache.calcite.rel.externalize.RelJsonReader
Change Variable Type	e : InstantiationException to e : InstantiationException|IllegalAccessException in method private readRel(jsonRel Map<String,Object>) : void from class org.apache.calcite.rel.externalize.RelJsonReader
Add Variable Annotation	@SuppressWarnings("unchecked") in variable operands : List<Integer> in method private toAggCall(jsonAggCall Map<String,Object>) : AggregateCall from class org.apache.calcite.rel.externalize.RelJsonReader
Change Variable Type	rel : RelNode to root : RelRoot in method private expandView(preparingStmt RelOptTable.ToRelContext, rowType RelDataType, queryString String) : RelRoot from class org.apache.calcite.schema.impl.ViewTable
Rename Variable	rel : RelNode to root : RelRoot in method private expandView(preparingStmt RelOptTable.ToRelContext, rowType RelDataType, queryString String) : RelRoot from class org.apache.calcite.schema.impl.ViewTable
Change Return Type	RelNode to RelRoot in method private expandView(preparingStmt RelOptTable.ToRelContext, rowType RelDataType, queryString String) : RelRoot from class org.apache.calcite.schema.impl.ViewTable
Add Attribute Modifier	final in attribute package cursors : List<RelNode> from class org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard
Add Parameter	top : boolean in method protected Blackboard(scope SqlValidatorScope, nameToNodeMap Map<String,RexNode>, top boolean) from class org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard
Rename Method	public isUnordered(query SqlNode) : boolean renamed to public isOrdered(query SqlNode) : boolean in class org.apache.calcite.sql2rel.SqlToRelConverter
Inline Method	protected checkConvertedRowType(query SqlNode, convertedRowType RelDataType) : boolean inlined to private checkConvertedType(query SqlNode, result RelNode) : void in class org.apache.calcite.sql2rel.SqlToRelConverter
Inline Method	protected uniquifyFields(rowType RelDataType) : RelDataType inlined to private checkConvertedType(query SqlNode, result RelNode) : void in class org.apache.calcite.sql2rel.SqlToRelConverter
Invert Condition	return RelOptUtil.equal("validated row type",validatedRowType,"converted row type",convertedRowType,false); to !RelOptUtil.equal("validated row type",validatedRowType,"converted row type",convertedRowType,false) in method private checkConvertedType(query SqlNode, result RelNode) : void from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Variable Modifier	final in variable convertedRowType : RelDataType in method private checkConvertedType(query SqlNode, result RelNode) : void from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Variable Modifier	final in variable validatedRowType : RelDataType in method private checkConvertedType(query SqlNode, result RelNode) : void from class org.apache.calcite.sql2rel.SqlToRelConverter
Extract Variable	scope : ParameterScope in method public convertExpression(node SqlNode) : RexNode from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Variable Modifier	final in variable bb : Blackboard in method public convertExpression(node SqlNode) : RexNode from class org.apache.calcite.sql2rel.SqlToRelConverter
Extract Variable	scope : ParameterScope in method public convertExpression(node SqlNode, nameToNodeMap Map<String,RexNode>) : RexNode from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Variable Modifier	final in variable bb : Blackboard in method public convertExpression(node SqlNode, nameToNodeMap Map<String,RexNode>) : RexNode from class org.apache.calcite.sql2rel.SqlToRelConverter
Extract Variable	scope : SqlValidatorScope in method protected convertFrom(bb Blackboard, from SqlNode) : void from class org.apache.calcite.sql2rel.SqlToRelConverter
Extract Variable	leftScope : SqlValidatorScope in method protected convertFrom(bb Blackboard, from SqlNode) : void from class org.apache.calcite.sql2rel.SqlToRelConverter
Extract Variable	rightScope : SqlValidatorScope in method protected convertFrom(bb Blackboard, from SqlNode) : void from class org.apache.calcite.sql2rel.SqlToRelConverter
Change Return Type	RelNode to RelRoot in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>) : RelRoot from class org.apache.calcite.sql2rel.SqlToRelConverter.createToRelContext.new RelOptTable.ToRelContext
Split Conditional	if(top && isStream(query)) to [if(top), if(isStream(query))] in method public convertQuery(query SqlNode, needsValidation boolean, top boolean) : RelRoot from class org.apache.calcite.sql2rel.SqlToRelConverter
Change Return Type	RelNode to RelRoot in method public convertQuery(query SqlNode, needsValidation boolean, top boolean) : RelRoot from class org.apache.calcite.sql2rel.SqlToRelConverter
Extract Variable	kind : SqlKind in method protected convertQueryRecursive(query SqlNode, top boolean, targetRowType RelDataType) : RelRoot from class org.apache.calcite.sql2rel.SqlToRelConverter
Change Return Type	RelNode to RelRoot in method protected convertQueryRecursive(query SqlNode, top boolean, targetRowType RelDataType) : RelRoot from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Parameter	top : boolean in method public convertSelect(select SqlSelect, top boolean) : RelNode from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Parameter	top : boolean in method protected createBlackboard(scope SqlValidatorScope, nameToNodeMap Map<String,RexNode>, top boolean) : Blackboard from class org.apache.calcite.sql2rel.SqlToRelConverter
Change Return Type	RelNode to RelRoot in method public convertWith(with SqlWith, top boolean) : RelRoot from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Parameter	top : boolean in method public convertWith(with SqlWith, top boolean) : RelRoot from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Method Annotation	@Deprecated in method public convert(sql SqlNode) : RelNode from class org.apache.calcite.tools.Planner
Change Parameter Type	rules : Collection<RelOptRule> to rules : Iterable<? extends RelOptRule> in method public ofRules(rules Iterable<? extends RelOptRule>) : Program from class org.apache.calcite.tools.Programs
Change Parameter Type	rules : ImmutableList<RelOptRule> to rules : Iterable<? extends RelOptRule> in method public hep(rules Iterable<? extends RelOptRule>, noDag boolean, metadataProvider RelMetadataProvider) : Program from class org.apache.calcite.tools.Programs
Change Parameter Type	rules : Collection<RelOptRule> to rules : Iterable<? extends RelOptRule> in method public heuristicJoinOrder(rules Iterable<? extends RelOptRule>, bushy boolean, minJoinCount int) : Program from class org.apache.calcite.tools.Programs
Change Parameter Type	rules : Collection<RelOptRule> to rules : Iterable<? extends RelOptRule> in method public ofList(rules Iterable<? extends RelOptRule>) : RuleSet from class org.apache.calcite.tools.RuleSets
Change Variable Type	rel : RelNode to root : RelRoot in method private convertSql(sql String) : RelNode from class org.apache.calcite.test.RelMetadataTest
Add Variable Modifier	final in variable root : RelRoot in method private convertSql(sql String) : RelNode from class org.apache.calcite.test.RelMetadataTest
Rename Variable	rel : RelNode to root : RelRoot in method private convertSql(sql String) : RelNode from class org.apache.calcite.test.RelMetadataTest
Change Variable Type	rel : RelNode to root : RelRoot in method protected semiJoinTrim() : void from class org.apache.calcite.test.RelOptRulesTest
Rename Variable	rel : RelNode to root : RelRoot in method protected semiJoinTrim() : void from class org.apache.calcite.test.RelOptRulesTest
Add Variable Modifier	final in variable relInitial : RelNode in method public transitiveInference(extraRules RelOptRule...) : void from class org.apache.calcite.test.RelOptRulesTest
Rename Variable	relAfter : RelNode to relBefore : RelNode in method public transitiveInference(extraRules RelOptRule...) : void from class org.apache.calcite.test.RelOptRulesTest
Add Variable Modifier	final in variable relInitial : RelNode in method protected checkPlanning(tester Tester, preProgram HepProgram, planner RelOptPlanner, sql String) : void from class org.apache.calcite.test.RelOptTestBase
Change Return Type	RelNode to RelRoot in method public convertSqlToRel(sql String) : RelRoot from class org.apache.calcite.test.SqlToRelTestBase.Tester
Change Variable Type	rel : RelNode to root : RelRoot in method public convertSqlToRel(sql String) : RelRoot from class org.apache.calcite.test.SqlToRelTestBase.TesterImpl
Rename Variable	rel : RelNode to root : RelRoot in method public convertSqlToRel(sql String) : RelRoot from class org.apache.calcite.test.SqlToRelTestBase.TesterImpl
Change Return Type	RelNode to RelRoot in method public convertSqlToRel(sql String) : RelRoot from class org.apache.calcite.test.SqlToRelTestBase.TesterImpl
Replace Variable With Attribute	rel : RelNode to root : RelNode in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>) : RelRoot from class org.apache.calcite.prepare.PlannerImpl.ViewExpanderImpl
Extract Class	org.apache.calcite.rel.RelRoot from class org.apache.calcite.prepare.PlannerImpl
Extract Class	org.apache.calcite.rel.RelRoot from class org.apache.calcite.prepare.Prepare.PreparedExplain
Move Attribute	private rel : RelNode from class org.apache.calcite.prepare.PlannerImpl to public rel : RelNode from class org.apache.calcite.rel.RelRoot
Change Attribute Access Modifier	private to public in attribute public rel : RelNode from class org.apache.calcite.rel.RelRoot
Change Attribute Access Modifier	private to public in attribute public rel : RelNode from class org.apache.calcite.rel.RelRoot
Add Attribute Modifier	final in attribute public rel : RelNode from class org.apache.calcite.rel.RelRoot
Move Attribute	private rel : RelNode from class org.apache.calcite.prepare.Prepare.PreparedExplain to public rel : RelNode from class org.apache.calcite.rel.RelRoot
Rename Parameter	rootRel : RelNode to root : RelRoot in method protected abstract createPreparedExplanation(resultType RelDataType, parameterRowType RelDataType, root RelRoot, explainAsXml boolean, detailLevel SqlExplainLevel) : PreparedResult from class org.apache.calcite.prepare.Prepare
Change Parameter Type	rootRel : RelNode to root : RelRoot in method protected abstract createPreparedExplanation(resultType RelDataType, parameterRowType RelDataType, root RelRoot, explainAsXml boolean, detailLevel SqlExplainLevel) : PreparedResult from class org.apache.calcite.prepare.Prepare
Developers have reported that 10708 commits involve refactoring but only 333 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 333 commits.

No refactorings detected at 538a7df8636e7e76ef3a7ae8964065efbbefa634

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b36ec26b42f23be17f05a
Issue Title: : Match nullability when reducing expressions in a Project
Refactorings at 9adf259763a9c52a6db8d4a19425722fbedcaa6c
Extract Method	public makeCast(type RelDataType, exp RexNode, matchNullability boolean) : RexNode extracted from public makeCast(type RelDataType, exp RexNode) : RexNode in class org.apache.calcite.rex.RexBuilder
Rename Method	public testReduceORCaseWhen() : void renamed to public testReduceOrCaseWhen() : void in class org.apache.calcite.test.RelOptRulesTest
Developers have reported that 10708 commits involve refactoring but only 334 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 334 commits.

No refactorings detected at 39487512e04cc89ae4f0e6909bf91c552f933659

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b370d26b42f23be17f0c9
Issue Title: : AssertionError extracting value from an INTERVAL literal
Refactorings at c5f2599f493ecdd12494e6cb0bb36ee0f09fe857
Extract Variable	sqlIntervalQualifier : SqlIntervalQualifier in method public convertLiteral(cx SqlRexContext, literal SqlLiteral) : RexNode from class org.apache.calcite.sql2rel.SqlNodeToRexConverterImpl
Developers have reported that 10708 commits involve refactoring but only 335 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 335 commits.

No refactorings detected at a67b4a976bef6c104212732c6a8f8ce364c372ba

No refactorings detected at 8c2bc8f16b7b26fed7a53aa06f940341dea18219

No refactorings detected at 60b2825c8a49c62ea3caf2212521809ebc545bd8

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b374626b42f23be17f248
Issue Title: : Add RelMetadataProvider parameter to standard planner Programs
Refactorings at af77ec861989c50229c55be1889efcb0031cfd32
Extract Method	public standard(metadataProvider RelMetadataProvider) : Program extracted from public standard() : Program in class org.apache.calcite.tools.Programs
Developers have reported that 10708 commits involve refactoring but only 336 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 336 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b374d26b42f23be17f283
Issue Title: : Replace Closeable with AutoCloseable
Refactorings at 9c86556ff397f2548bffe90e7e338774d329211d
Change Variable Type	e : IOException to e : Exception in method public close() : void from class org.apache.calcite.avatica.util.IteratorCursor
Remove Thrown Exception Type	IOException in method public close() : void from class org.apache.calcite.linq4j.Linq4j.EnumeratorIterator
Developers have reported that 10708 commits involve refactoring but only 337 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 337 commits.

No refactorings detected at bb333e20519ae6299a8adf235dc1bcc82a1cb9a2

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b376926b42f23be17f2d8
Issue Title: : Add description to SortProjectTransposeRule's constructor
Refactorings at f22ecfa54958c7d812c50720dd1ef1bfb7f943b5
Add Method Annotation	@Deprecated in method public SortProjectTransposeRule(sortClass Class<? extends Sort>, projectClass Class<? extends Project>) from class org.apache.calcite.rel.rules.SortProjectTransposeRule
Developers have reported that 10708 commits involve refactoring but only 338 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 338 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b377826b42f23be17f308
Issue Title: : Predicate Pull up above Project enhancement
Refactorings at 9be2bdb96a0f40de463ab867ab8232712c544ed8
Change Method Access Modifier	public to package in method package JoinConditionBasedPredicateInference(joinRel Join, lPreds RexNode, rPreds RexNode) from class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Developers have reported that 10708 commits involve refactoring but only 339 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 339 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b378326b42f23be17f322
Issue Title: : Planner rule that removes Aggregate keys that are constant
Refactorings at 5197a714705c7bfaa6a46a0907267b47870b18d1
Extract Method	private foo(left RexNode, right RexLiteral, map Map<RexNode,RexLiteral>, excludeSet Set<RexNode>, rexBuilder RexBuilder) : void extracted from private gatherConstraints(map Map<RexNode,RexLiteral>, predicate RexNode, excludeSet Set<RexNode>) : void in class org.apache.calcite.rel.rules.ReduceExpressionsRule
Extract Method	private foo(left RexNode, right RexLiteral, map Map<RexNode,RexLiteral>, excludeSet Set<RexNode>, rexBuilder RexBuilder) : void extracted from private gatherConstraints(map Map<RexNode,RexLiteral>, predicate RexNode, excludeSet Set<RexNode>) : void in class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Variable Modifier	final in variable existedValue : RexLiteral in method private foo(left RexNode, right RexLiteral, map Map<RexNode,RexLiteral>, excludeSet Set<RexNode>, rexBuilder RexBuilder) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Variable Modifier	final in variable existedValue : RexLiteral in method private foo(left RexNode, right RexLiteral, map Map<RexNode,RexLiteral>, excludeSet Set<RexNode>, rexBuilder RexBuilder) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Remove Variable Modifier	final in variable right : RexNode in method private gatherConstraints(map Map<RexNode,RexLiteral>, predicate RexNode, excludeSet Set<RexNode>) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Parameterize Variable	right : RexNode to left : RexNode in method private foo(left RexNode, right RexLiteral, map Map<RexNode,RexLiteral>, excludeSet Set<RexNode>, rexBuilder RexBuilder) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Parameter	rexBuilder : RexBuilder in method protected predicateConstants(rexBuilder RexBuilder, predicates RelOptPredicateList) : ImmutableMap<RexNode,RexLiteral> from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Parameter	rexBuilder : RexBuilder in method private gatherConstraints(predicate RexNode, map Map<RexNode,RexLiteral>, excludeSet Set<RexNode>, rexBuilder RexBuilder) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Reorder Parameter	[map : Map<RexNode,RexLiteral>, predicate : RexNode, excludeSet : Set<RexNode>] to [predicate : RexNode, map : Map<RexNode,RexLiteral>, excludeSet : Set<RexNode>, rexBuilder : RexBuilder] in method private gatherConstraints(predicate RexNode, map Map<RexNode,RexLiteral>, excludeSet Set<RexNode>, rexBuilder RexBuilder) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Developers have reported that 10708 commits involve refactoring but only 340 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 340 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b379a26b42f23be17f373
Issue Title: : Move populate materializations after sql-to-rel conversion
Refactorings at 05fbd126b469bda718d75a3b3b3e79af819bf8b5
Add Parameter	viewSchemaPath : List<String> in method package Materialization(key MaterializationKey, rootSchema CalciteSchema, materializedTable CalciteSchema.TableEntry, sql String, rowType RelDataType, viewSchemaPath List<String>) from class org.apache.calcite.materialize.MaterializationActor.Materialization
Change Method Access Modifier	private to protected in method protected createSqlValidator(catalogReader CatalogReader) : SqlValidator from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Add Parameter	viewSchemaPath : List<String> in method public Materialization(materializedTable CalciteSchema.TableEntry, sql String, viewSchemaPath List<String>) from class org.apache.calcite.prepare.Prepare.Materialization
Remove Parameter	materializations : List<Materialization> in method public prepareSql(sqlQuery SqlNode, runtimeContextClass Class, validator SqlValidator, needsValidation boolean, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : PreparedResult from class org.apache.calcite.prepare.Prepare
Remove Parameter	lattices : List<CalciteSchema.LatticeEntry> in method public prepareSql(sqlQuery SqlNode, runtimeContextClass Class, validator SqlValidator, needsValidation boolean, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : PreparedResult from class org.apache.calcite.prepare.Prepare
Remove Parameter	materializations : List<Materialization> in method public prepareSql(sqlQuery SqlNode, sqlNodeOriginal SqlNode, runtimeContextClass Class, validator SqlValidator, needsValidation boolean, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : PreparedResult from class org.apache.calcite.prepare.Prepare
Remove Parameter	lattices : List<CalciteSchema.LatticeEntry> in method public prepareSql(sqlQuery SqlNode, sqlNodeOriginal SqlNode, runtimeContextClass Class, validator SqlValidator, needsValidation boolean, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : PreparedResult from class org.apache.calcite.prepare.Prepare
Developers have reported that 10708 commits involve refactoring but only 341 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 341 commits.

No refactorings detected at 10830827e9360b7e181fb20993275927469a7d0d

No refactorings detected at e7bbcec8f451dbc2b02434eba6d17138e1d44e6e

No refactorings detected at 898fdfc2720770ec4752fb702ce0aae1521aa07d

No refactorings detected at 05e099f3986e7e52c6213e26e9e9d8044987e9f6

No refactorings detected at ebcba3b5ca98d8f894000494a3858ba5a4a269a9

No refactorings detected at cecef9d3209cbd092a6e9b578bc063a52007b99f

No refactorings detected at ee283cadf17d8add8e8ea2bf1f8dd5735f05dc1d

No refactorings detected at b30e570fa0f250e0bcaef9cf680af0fa335d3855

No refactorings detected at 39b30bd111154b4b28489a5940e2c88ec4588d3f

No refactorings detected at aecefef8a4420e780737a8f49b72fd146679f2e2

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b382226b42f23be17f623
Issue Title: : Replace AvaticaUtils.readFully(InputStream)'s use of ByteArrayOutputStream
Refactorings at 1d3a26dfac17fea458402a637449007dc095bced
Extract Method	public readFullyToBytes(inputStream InputStream, buffer UnsynchronizedBuffer) : byte[] extracted from public readFullyToBytes(inputStream InputStream) : byte[] in class org.apache.calcite.avatica.AvaticaUtils
Change Variable Type	baos : ByteArrayOutputStream to buffer : UnsynchronizedBuffer in method package _readFully(inputStream InputStream, buffer UnsynchronizedBuffer) : byte[] from class org.apache.calcite.avatica.AvaticaUtils
Remove Variable Modifier	final in variable baos : ByteArrayOutputStream in method package _readFully(inputStream InputStream) : ByteArrayOutputStream from class org.apache.calcite.avatica.AvaticaUtils
Parameterize Variable	baos : ByteArrayOutputStream to buffer : UnsynchronizedBuffer in method package _readFully(inputStream InputStream, buffer UnsynchronizedBuffer) : byte[] from class org.apache.calcite.avatica.AvaticaUtils
Change Return Type	ByteArrayOutputStream to byte[] in method package _readFully(inputStream InputStream, buffer UnsynchronizedBuffer) : byte[] from class org.apache.calcite.avatica.AvaticaUtils
Change Thrown Exception Type	InvalidProtocolBufferException to IOException in method public parseRequest(bytes byte[]) : Request from class org.apache.calcite.avatica.remote.ProtobufTranslation
Change Thrown Exception Type	InvalidProtocolBufferException to IOException in method public parseResponse(bytes byte[]) : Response from class org.apache.calcite.avatica.remote.ProtobufTranslation
Change Variable Type	reqParsers : HashMap<String,RequestTranslator> to reqParsers : Map<String,RequestTranslator> in initializer ProtobufTranslationImpl from class org.apache.calcite.avatica.remote.ProtobufTranslationImpl
Change Variable Type	respParsers : HashMap<String,ResponseTranslator> to respParsers : Map<String,ResponseTranslator> in initializer ProtobufTranslationImpl from class org.apache.calcite.avatica.remote.ProtobufTranslationImpl
Change Variable Type	out : ByteArrayOutputStream to out : UnsynchronizedBuffer in method public serializeResponse(response Response) : byte[] from class org.apache.calcite.avatica.remote.ProtobufTranslationImpl
Change Variable Type	out : ByteArrayOutputStream to out : UnsynchronizedBuffer in method public serializeRequest(request Request) : byte[] from class org.apache.calcite.avatica.remote.ProtobufTranslationImpl
Change Variable Type	baos : ByteArrayOutputStream to buffer : UnsynchronizedBuffer in method package serializeMessage(out OutputStream, msg Message) : void from class org.apache.calcite.avatica.remote.ProtobufTranslationImpl
Rename Variable	baos : ByteArrayOutputStream to buffer : UnsynchronizedBuffer in method package serializeMessage(out OutputStream, msg Message) : void from class org.apache.calcite.avatica.remote.ProtobufTranslationImpl
Change Thrown Exception Type	InvalidProtocolBufferException to IOException in method public parseRequest(bytes byte[]) : Request from class org.apache.calcite.avatica.remote.ProtobufTranslationImpl
Change Thrown Exception Type	InvalidProtocolBufferException to IOException in method public parseResponse(bytes byte[]) : Response from class org.apache.calcite.avatica.remote.ProtobufTranslationImpl
Developers have reported that 10708 commits involve refactoring but only 342 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 342 commits.

No refactorings detected at 6c9c3d66f0bf849096d9cf18e348c7369db07eb3

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b384526b42f23be17f70f
Issue Title: : If ReduceExpressionsRule generates the same plan, the original plan stops triggering other rules
Refactorings at 25d1e42a7fb248d24caaaa949779e06056c9916c
Extract And Move Method	public strings(list List<RexNode>) : List<String> extracted from private commonFactors(nodes List<RexNode>) : Map<String,RexNode> in class org.apache.calcite.rex.RexUtil.CnfHelper & moved to class org.apache.calcite.rex.RexUtil
Developers have reported that 10708 commits involve refactoring but only 343 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 343 commits.

No refactorings detected at 83a8e883a9a50b618d5892aa708f55a5dd1bd169

No refactorings detected at 8c90d862179f43ab8855f4ff50cbc1d5968b21a2

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b385826b42f23be17f79f
Issue Title: : Improve hash functions
Refactorings at ecf4d6dcb4b6fdc40828d0c853ae10abc0550a76
Rename Parameter	obj : Object to o : Object in method public equals(o Object) : boolean from class org.apache.calcite.avatica.ColumnMetaData
Change Class Access Modifier	public to package in class org.apache.calcite.avatica.Meta.Signature
Change Class Access Modifier	public to package in class org.apache.calcite.avatica.Meta.Frame
Remove Class Modifier	static in class org.apache.calcite.avatica.QueryState.StateType
Rename Parameter	obj : Object to o : Object in method public equals(o Object) : boolean from class org.apache.calcite.avatica.QueryState
Rename Parameter	obj : Object to o : Object in method public equals(o Object) : boolean from class org.apache.calcite.rel.RelFieldCollation
Add Method Annotation	@Override in method public equals(o Object) : boolean from class org.apache.calcite.rel.RelFieldCollation
Add Method Annotation	@Override in method public hashCode() : int from class org.apache.calcite.rel.RelFieldCollation
Inline Variable	h : int in method public hashCode() : int from class org.apache.calcite.sql.SqlIntervalLiteral.IntervalValue
Add Method Annotation	@Override in method public hashCode() : int from class org.apache.calcite.sql.SqlOperator
Rename Parameter	obj : Object to o : Object in method public equals(o Object) : boolean from class org.apache.calcite.sql.fun.SqlCastFunction.TypeFamilyCast
Rename Parameter	obj : Object to o : Object in method public equals(o Object) : boolean from class org.apache.calcite.sql.parser.SqlParserPos
Add Method Annotation	@Override in method public hashCode() : int from class org.apache.calcite.util.Pair
Add Parameter Annotation	@Nonnull in parameter that : Pair<T1,T2> in method public compareTo(that Pair<T1,T2>) : int from class org.apache.calcite.util.Pair
Change Parameter Type	pairs : Collection<Pair<K,V>> to pairs : Iterable<Pair<K,V>> in method public toMap(pairs Iterable<Pair<K,V>>) : Map<K,V> from class org.apache.calcite.util.Pair
Change Variable Type	map : HashMap<K,V> to map : Map<K,V> in method public toMap(pairs Iterable<Pair<K,V>>) : Map<K,V> from class org.apache.calcite.util.Pair
Add Variable Modifier	final in variable map : Map<K,V> in method public toMap(pairs Iterable<Pair<K,V>>) : Map<K,V> from class org.apache.calcite.util.Pair
Add Method Annotation	@Deprecated in method public hash(i int, j int) : int from class org.apache.calcite.util.Util
Add Method Annotation	@Deprecated in method public hash(h int, o Object) : int from class org.apache.calcite.util.Util
Add Method Annotation	@Deprecated in method public hashArray(h int, a Object[]) : int from class org.apache.calcite.util.Util
Add Method Annotation	@Deprecated in method public hashCode(v double) : int from class org.apache.calcite.util.Util
Add Parameter Annotation	@Nonnull in parameter key : ConnectionFactory in method public load(key ConnectionFactory) : Connection from class org.apache.calcite.test.CalciteAssert.PoolingConnectionFactory.Pool.POOL.build.new CacheLoader<ConnectionFactory,Connection>
Merge Catch	[catch(IllegalAccessException e), catch(InvocationTargetException e)] to catch(IllegalAccessException|InvocationTargetException e) in method public evaluate(evaluator Evaluator) : Object from class org.apache.calcite.linq4j.tree.MethodCallExpression
Change Variable Type	e : IllegalAccessException to e : IllegalAccessException|InvocationTargetException in method public evaluate(evaluator Evaluator) : Object from class org.apache.calcite.linq4j.tree.MethodCallExpression
Developers have reported that 10708 commits involve refactoring but only 344 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 344 commits.

No refactorings detected at 50c4b0619af94ae82bc461d9598d24b3b5e0ec21

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b385f26b42f23be17f7c9
Issue Title: : Add support for timestampadd / timestampdiff functions
Refactorings at 4ac82a30b8ee7ae1afcd83c6f3ef687761536f2e
Remove Class Modifier	static in class org.apache.calcite.sql.SqlJdbcFunctionCall.MakeCall
Change Type Declaration Kind	class to interface in type org.apache.calcite.sql.SqlJdbcFunctionCall.MakeCall
Change Parameter Type	operands : SqlNode[] to operands : SqlNode... in method public createCall(pos SqlParserPos, operands SqlNode...) : SqlCall from class org.apache.calcite.sql.SqlJdbcFunctionCall.JdbcToInternalLookupTable.JdbcToInternalLookupTable.put.new SimpleMakeCall
Change Parameter Type	operands : SqlNode[] to operands : SqlNode... in method public createCall(pos SqlParserPos, operands SqlNode...) : SqlCall from class org.apache.calcite.sql.SqlJdbcFunctionCall.JdbcToInternalLookupTable.JdbcToInternalLookupTable.put.new SimpleMakeCall
Change Method Access Modifier	package to public in method public createCall(pos SqlParserPos, operands SqlNode...) : SqlCall from class org.apache.calcite.sql.SqlJdbcFunctionCall.JdbcToInternalLookupTable.JdbcToInternalLookupTable.put.new SimpleMakeCall
Extract Variable	newCall : SqlCall in method public inferReturnType(opBinding SqlOperatorBinding) : RelDataType from class org.apache.calcite.sql.SqlJdbcFunctionCall
Extract Variable	newBinding : SqlCallBinding in method public inferReturnType(opBinding SqlOperatorBinding) : RelDataType from class org.apache.calcite.sql.SqlJdbcFunctionCall
Localize Parameter	floor : boolean to floor : boolean in method protected convertFloorCeil(cx SqlRexContext, call SqlCall) : RexNode from class org.apache.calcite.sql2rel.StandardConvertletTable
Add Variable Modifier	final in variable floor : boolean in method protected convertFloorCeil(cx SqlRexContext, call SqlCall) : RexNode from class org.apache.calcite.sql2rel.StandardConvertletTable
Rename Method	public testTimestampAddAdnDiff() : void renamed to public testTimestampDiff() : void in class org.apache.calcite.sql.test.SqlOperatorBaseTest
Remove Variable Modifier	final in variable l : long in method public compareResultSet(resultSet ResultSet, refSet Set<String>) : void from class org.apache.calcite.sql.test.SqlTests
Extract Variable	collection : Collection<String> in method public createChecker(result Object, delta double) : ResultChecker from class org.apache.calcite.sql.test.SqlTests
Push Down Attribute	package operator : SqlOperator from class org.apache.calcite.sql.SqlJdbcFunctionCall.MakeCall to package operator : SqlOperator from class org.apache.calcite.sql.SqlJdbcFunctionCall.SimpleMakeCall
Push Down Attribute	package order : int[] from class org.apache.calcite.sql.SqlJdbcFunctionCall.MakeCall to package order : int[] from class org.apache.calcite.sql.SqlJdbcFunctionCall.PermutingMakeCall
Push Down Method	protected reorder(operands SqlNode[]) : SqlNode[] from class org.apache.calcite.sql.SqlJdbcFunctionCall.MakeCall to protected reorder(operands SqlNode[]) : SqlNode[] from class org.apache.calcite.sql.SqlJdbcFunctionCall.PermutingMakeCall
Parameterize Variable	possible : int[] to possible : int... in method private getArgCountMismatchMsg(possible int...) : String from class org.apache.calcite.sql.SqlJdbcFunctionCall.PermutingMakeCall
Move Method	private getArgCountMismatchMsg() : String from class org.apache.calcite.sql.SqlJdbcFunctionCall to private getArgCountMismatchMsg(possible int...) : String from class org.apache.calcite.sql.SqlJdbcFunctionCall.PermutingMakeCall
Developers have reported that 10708 commits involve refactoring but only 345 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 345 commits.

No refactorings detected at 0b9ea986b847c325da009376d3b9031c9303090e

No refactorings detected at 22aa8a8072bd98d4d81d17aad7db5a972e03478e

No refactorings detected at 9dd4993ad2ae41e0309eb2631af1a91e64f693e7

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b388326b42f23be17f8a5
Issue Title: : Add unary operator support for IS_NULL and IS_NOT_NULL to RexImplicationChecker
Refactorings at 82c3b293b172364058cc29dada5794659db4e389
Rename Method	private updateUsage(call RexCall) : void renamed to private updateBinaryOpUsage(call RexCall) : void in class org.apache.calcite.plan.RexImplicationChecker.InputUsageFinder
Developers have reported that 10708 commits involve refactoring but only 346 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 346 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b388826b42f23be17f8b9
Issue Title: : Add an extension operator table with Oracle-specific operators
Refactorings at 707e72d5c2a03f4ec5994b58109d7421ed938d9f
Extract Variable	opTab0 : SqlOperatorTable in method private createSqlValidator(context Context, catalogReader CalciteCatalogReader) : SqlValidator from class org.apache.calcite.prepare.CalcitePrepareImpl
Localize Parameter	typeFactory : JavaTypeFactory to typeFactory : JavaTypeFactory in method private createSqlValidator(context Context, catalogReader CalciteCatalogReader) : SqlValidator from class org.apache.calcite.prepare.CalcitePrepareImpl
Add Variable Modifier	final in variable typeFactory : JavaTypeFactory in method private createSqlValidator(context Context, catalogReader CalciteCatalogReader) : SqlValidator from class org.apache.calcite.prepare.CalcitePrepareImpl
Add Parameter	context : Context in method private createSqlValidator(context Context, catalogReader CalciteCatalogReader) : SqlValidator from class org.apache.calcite.prepare.CalcitePrepareImpl
Change Variable Type	subtype : SqlAvgAggFunction.Subtype to kind : SqlKind in method private reduceAgg(oldAggRel Aggregate, oldCall AggregateCall, newCalls List<AggregateCall>, aggCallMapping Map<AggregateCall,RexNode>, inputExprs List<RexNode>) : RexNode from class org.apache.calcite.rel.rules.AggregateReduceFunctionsRule
Rename Variable	subtype : SqlAvgAggFunction.Subtype to kind : SqlKind in method private reduceAgg(oldAggRel Aggregate, oldCall AggregateCall, newCalls List<AggregateCall>, aggCallMapping Map<AggregateCall,RexNode>, inputExprs List<RexNode>) : RexNode from class org.apache.calcite.rel.rules.AggregateReduceFunctionsRule
Add Parameter	name : String in method public SqlTrimFunction(name String, kind SqlKind, returnTypeInference SqlTypeTransformCascade, operandTypeChecker SqlSingleOperandTypeChecker) from class org.apache.calcite.sql.fun.SqlTrimFunction
Add Parameter	kind : SqlKind in method public SqlTrimFunction(name String, kind SqlKind, returnTypeInference SqlTypeTransformCascade, operandTypeChecker SqlSingleOperandTypeChecker) from class org.apache.calcite.sql.fun.SqlTrimFunction
Add Parameter	returnTypeInference : SqlTypeTransformCascade in method public SqlTrimFunction(name String, kind SqlKind, returnTypeInference SqlTypeTransformCascade, operandTypeChecker SqlSingleOperandTypeChecker) from class org.apache.calcite.sql.fun.SqlTrimFunction
Add Parameter	operandTypeChecker : SqlSingleOperandTypeChecker in method public SqlTrimFunction(name String, kind SqlKind, returnTypeInference SqlTypeTransformCascade, operandTypeChecker SqlSingleOperandTypeChecker) from class org.apache.calcite.sql.fun.SqlTrimFunction
Change Parameter Type	subtype : SqlAvgAggFunction.Subtype to kind : SqlKind in method public AvgVarianceConvertlet(kind SqlKind) from class org.apache.calcite.sql2rel.StandardConvertletTable.AvgVarianceConvertlet
Rename Parameter	subtype : SqlAvgAggFunction.Subtype to kind : SqlKind in method public AvgVarianceConvertlet(kind SqlKind) from class org.apache.calcite.sql2rel.StandardConvertletTable.AvgVarianceConvertlet
Rename Attribute	subtype : SqlAvgAggFunction.Subtype to kind : SqlKind in class org.apache.calcite.sql2rel.StandardConvertletTable.AvgVarianceConvertlet
Change Attribute Type	subtype : SqlAvgAggFunction.Subtype to kind : SqlKind in class org.apache.calcite.sql2rel.StandardConvertletTable.AvgVarianceConvertlet
Add Variable Modifier	final in variable list : List<Integer> in method private elseArgs(count int) : List<Integer> from class org.apache.calcite.sql2rel.StandardConvertletTable
Add Parameter	factory : SqlTestFactory in method public createOperatorTable(factory SqlTestFactory) : SqlOperatorTable from class org.apache.calcite.sql.test.DefaultSqlTestFactory
Rename Parameter	connection : Connection to testFactory : SqlTestFactory in method public TesterImpl(testFactory SqlTestFactory) from class org.apache.calcite.sql.test.SqlOperatorBaseTest.TesterImpl
Change Parameter Type	connection : Connection to testFactory : SqlTestFactory in method public TesterImpl(testFactory SqlTestFactory) from class org.apache.calcite.sql.test.SqlOperatorBaseTest.TesterImpl
Remove Parameter	connection : Connection in method public tester(connection Connection) : SqlTester from class org.apache.calcite.sql.test.SqlOperatorBaseTest
Change Attribute Access Modifier	private to protected in attribute protected factory : SqlTestFactory from class org.apache.calcite.sql.test.SqlTesterImpl
Change Method Access Modifier	private to protected in method protected with(name2 String, value Object) : SqlTesterImpl from class org.apache.calcite.sql.test.SqlTesterImpl
Change Attribute Access Modifier	private to public in attribute public EMPTY_CONNECTION_FACTORY : ConnectionFactory from class org.apache.calcite.test.CalciteAssert
Add Parameter	factory : SqlTestFactory in method public createOperatorTable(factory SqlTestFactory) : SqlOperatorTable from class org.apache.calcite.sql.test.DelegatingSqlTestFactory
Add Parameter	factory : SqlTestFactory in method public createOperatorTable(factory SqlTestFactory) : SqlOperatorTable from class org.apache.calcite.sql.test.SqlTestFactory
Developers have reported that 10708 commits involve refactoring but only 347 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 347 commits.

No refactorings detected at 48d8ebf57fcb9890854dcdec4c26a4bd8ff26a9c

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b38ba26b42f23be17f98b
Issue Title: : Support addBatch()/executeBatch() in remote driver
Refactorings at 5dfa3f1ece54d2f95057c5b5097dc0f7fae693ee
Modify Class Annotation	@JsonSubTypes({@JsonSubTypes.Type(value=CatalogsRequest.class,name="getCatalogs"),@JsonSubTypes.Type(value=SchemasRequest.class,name="getSchemas"),@JsonSubTypes.Type(value=TablesRequest.class,name="getTables"),@JsonSubTypes.Type(value=TableTypesRequest.class,name="getTableTypes"),@JsonSubTypes.Type(value=TypeInfoRequest.class,name="getTypeInfo"),@JsonSubTypes.Type(value=ColumnsRequest.class,name="getColumns"),@JsonSubTypes.Type(value=ExecuteRequest.class,name="execute"),@JsonSubTypes.Type(value=PrepareRequest.class,name="prepare"),@JsonSubTypes.Type(value=PrepareAndExecuteRequest.class,name="prepareAndExecute"),@JsonSubTypes.Type(value=FetchRequest.class,name="fetch"),@JsonSubTypes.Type(value=CreateStatementRequest.class,name="createStatement"),@JsonSubTypes.Type(value=CloseStatementRequest.class,name="closeStatement"),@JsonSubTypes.Type(value=OpenConnectionRequest.class,name="openConnection"),@JsonSubTypes.Type(value=CloseConnectionRequest.class,name="closeConnection"),@JsonSubTypes.Type(value=ConnectionSyncRequest.class,name="connectionSync"),@JsonSubTypes.Type(value=DatabasePropertyRequest.class,name="databaseProperties"),@JsonSubTypes.Type(value=SyncResultsRequest.class,name="syncResults"),@JsonSubTypes.Type(value=CommitRequest.class,name="commit"),@JsonSubTypes.Type(value=RollbackRequest.class,name="rollback")}) to @JsonSubTypes({@JsonSubTypes.Type(value=CatalogsRequest.class,name="getCatalogs"),@JsonSubTypes.Type(value=SchemasRequest.class,name="getSchemas"),@JsonSubTypes.Type(value=TablesRequest.class,name="getTables"),@JsonSubTypes.Type(value=TableTypesRequest.class,name="getTableTypes"),@JsonSubTypes.Type(value=TypeInfoRequest.class,name="getTypeInfo"),@JsonSubTypes.Type(value=ColumnsRequest.class,name="getColumns"),@JsonSubTypes.Type(value=ExecuteRequest.class,name="execute"),@JsonSubTypes.Type(value=PrepareRequest.class,name="prepare"),@JsonSubTypes.Type(value=PrepareAndExecuteRequest.class,name="prepareAndExecute"),@JsonSubTypes.Type(value=FetchRequest.class,name="fetch"),@JsonSubTypes.Type(value=CreateStatementRequest.class,name="createStatement"),@JsonSubTypes.Type(value=CloseStatementRequest.class,name="closeStatement"),@JsonSubTypes.Type(value=OpenConnectionRequest.class,name="openConnection"),@JsonSubTypes.Type(value=CloseConnectionRequest.class,name="closeConnection"),@JsonSubTypes.Type(value=ConnectionSyncRequest.class,name="connectionSync"),@JsonSubTypes.Type(value=DatabasePropertyRequest.class,name="databaseProperties"),@JsonSubTypes.Type(value=SyncResultsRequest.class,name="syncResults"),@JsonSubTypes.Type(value=CommitRequest.class,name="commit"),@JsonSubTypes.Type(value=RollbackRequest.class,name="rollback"),@JsonSubTypes.Type(value=PrepareAndExecuteBatchRequest.class,name="prepareAndExecuteBatch"),@JsonSubTypes.Type(value=ExecuteBatchRequest.class,name="executeBatch")}) in class org.apache.calcite.avatica.remote.Service.Request
Modify Class Annotation	@JsonSubTypes({@JsonSubTypes.Type(value=OpenConnectionResponse.class,name="openConnection"),@JsonSubTypes.Type(value=ResultSetResponse.class,name="resultSet"),@JsonSubTypes.Type(value=PrepareResponse.class,name="prepare"),@JsonSubTypes.Type(value=FetchResponse.class,name="fetch"),@JsonSubTypes.Type(value=CreateStatementResponse.class,name="createStatement"),@JsonSubTypes.Type(value=CloseStatementResponse.class,name="closeStatement"),@JsonSubTypes.Type(value=CloseConnectionResponse.class,name="closeConnection"),@JsonSubTypes.Type(value=ConnectionSyncResponse.class,name="connectionSync"),@JsonSubTypes.Type(value=DatabasePropertyResponse.class,name="databaseProperties"),@JsonSubTypes.Type(value=ExecuteResponse.class,name="executeResults"),@JsonSubTypes.Type(value=ErrorResponse.class,name="error"),@JsonSubTypes.Type(value=SyncResultsResponse.class,name="syncResults"),@JsonSubTypes.Type(value=RpcMetadataResponse.class,name="rpcMetadata"),@JsonSubTypes.Type(value=CommitResponse.class,name="commit"),@JsonSubTypes.Type(value=RollbackResponse.class,name="rollback")}) to @JsonSubTypes({@JsonSubTypes.Type(value=OpenConnectionResponse.class,name="openConnection"),@JsonSubTypes.Type(value=ResultSetResponse.class,name="resultSet"),@JsonSubTypes.Type(value=PrepareResponse.class,name="prepare"),@JsonSubTypes.Type(value=FetchResponse.class,name="fetch"),@JsonSubTypes.Type(value=CreateStatementResponse.class,name="createStatement"),@JsonSubTypes.Type(value=CloseStatementResponse.class,name="closeStatement"),@JsonSubTypes.Type(value=CloseConnectionResponse.class,name="closeConnection"),@JsonSubTypes.Type(value=ConnectionSyncResponse.class,name="connectionSync"),@JsonSubTypes.Type(value=DatabasePropertyResponse.class,name="databaseProperties"),@JsonSubTypes.Type(value=ExecuteResponse.class,name="executeResults"),@JsonSubTypes.Type(value=ErrorResponse.class,name="error"),@JsonSubTypes.Type(value=SyncResultsResponse.class,name="syncResults"),@JsonSubTypes.Type(value=RpcMetadataResponse.class,name="rpcMetadata"),@JsonSubTypes.Type(value=CommitResponse.class,name="commit"),@JsonSubTypes.Type(value=RollbackResponse.class,name="rollback"),@JsonSubTypes.Type(value=ExecuteBatchResponse.class,name="executeBatch")}) in class org.apache.calcite.avatica.remote.Service.Response
Extract Method	public getValue(protoValue Common.TypedValue) : Object extracted from public fromProto(proto Common.TypedValue) : TypedValue in class org.apache.calcite.avatica.remote.TypedValue
Rename Parameter	proto : Common.TypedValue to protoValue : Common.TypedValue in method public getValue(protoValue Common.TypedValue) : Object from class org.apache.calcite.avatica.remote.TypedValue
Developers have reported that 10708 commits involve refactoring but only 348 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 348 commits.

No refactorings detected at 26a6458903cd13d2a541b59042d178e8177705a9

No refactorings detected at 97945652197cbc80ce5c4ed05d3fc18ee0061e75

No refactorings detected at 26a6458903cd13d2a541b59042d178e8177705a9

No refactorings detected at 6bc34d03158168d4d8910e04fa33e5189cfc245e

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b38ed26b42f23be17fae2
Issue Title: : Add streaming CSV table
Refactorings at 65c1cec22d93a83b73bbdb8c73d08d8642db46e1
Extract Method	public convertNormalRow(strings String[]) : Object[] extracted from public convertRow(strings String[]) : Object[] in class org.apache.calcite.adapter.csv.CsvEnumerator.ArrayRowConverter
Extract Method	package deduceRowType(typeFactory JavaTypeFactory, file File, fieldTypes List<CsvFieldType>, stream Boolean) : RelDataType extracted from package deduceRowType(typeFactory JavaTypeFactory, file File, fieldTypes List<CsvFieldType>) : RelDataType in class org.apache.calcite.adapter.csv.CsvEnumerator
Change Method Access Modifier	private to public in method public openCsv(file File) : CSVReader from class org.apache.calcite.adapter.csv.CsvEnumerator
Change Attribute Access Modifier	private to protected in attribute protected protoRowType : RelProtoDataType from class org.apache.calcite.adapter.csv.CsvTable
Developers have reported that 10708 commits involve refactoring but only 349 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 349 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b38f326b42f23be17fb08
Issue Title: : Replace IntList with Guava Ints
Refactorings at 7fe475a8b135d4c91f521d6f519b13188e28a8bb
Change Variable Type	targetGroupList : IntList to targetGroupList : List<Integer> in method public unifyAggregates(query MutableAggregate, target MutableAggregate) : MutableRel from class org.apache.calcite.plan.SubstitutionVisitor
Change Variable Type	groupList : IntList to groupList : List<Integer> in method public deriveRowType(typeFactory RelDataTypeFactory, inputRowType RelDataType, indicator boolean, groupSet ImmutableBitSet, groupSets List<ImmutableBitSet>, aggCalls List<AggregateCall>) : RelDataType from class org.apache.calcite.rel.core.Aggregate
Change Variable Type	projectExprOrdinalList : IntList to projectExprOrdinalList : List<Integer> in method package execute() : RelNode from class org.apache.calcite.rel.rules.CalcRelSplitter
Change Variable Type	list : IntList to list : List<Integer> in method public setFactorWeights() : void from class org.apache.calcite.rel.rules.LoptMultiJoin
Change Variable Type	aggregateKeys : IntList to aggregateKeys : List<Integer> in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.SemiJoinRule
Change Variable Type	list : IntList to list : List<Integer> in method public toList(bitSet BitSet) : List<Integer> from class org.apache.calcite.util.BitSets
Change Return Type	IntList to List<Integer> in method public toList(bitSet BitSet) : List<Integer> from class org.apache.calcite.util.BitSets
Change Variable Type	list : IntList to list : List<Integer> in method public toList() : List<Integer> from class org.apache.calcite.util.ImmutableBitSet
Change Return Type	IntList to List<Integer> in method public toList() : List<Integer> from class org.apache.calcite.util.ImmutableBitSet
Add Class Annotation	@Deprecated in class org.apache.calcite.util.IntList
Add Method Annotation	@Deprecated in method public toArray(integers List<Integer>) : int[] from class org.apache.calcite.util.IntList
Add Method Annotation	@Deprecated in method public asList(args int[]) : List<Integer> from class org.apache.calcite.util.IntList
Change Variable Type	list1 : IntList to list1 : List<Integer> in method public testAsList() : void from class org.apache.calcite.util.ImmutableBitSetTest
Developers have reported that 10708 commits involve refactoring but only 350 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 350 commits.

No refactorings detected at 5e1cc5464413904466c357766843cd491b23f646

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b38f526b42f23be17fb0f
Issue Title: : Add ProjectRemoveRule to pre-processing program of materialization substitution
Refactorings at 576c1a1eeb138726387e55680f4a1bd2aa7ed023
Add Method Modifier	static in method private transformRex(node RexNode, oldFields List<RelDataTypeField>, newFields List<RelDataTypeField>) : RexNode from class org.apache.calcite.plan.MaterializedViewSubstitutionVisitor
Move Method	private transformRex(node RexNode, oldFields List<RelDataTypeField>, newFields List<RelDataTypeField>) : RexNode from class org.apache.calcite.plan.MaterializedViewSubstitutionVisitor.ProjectToProjectUnifyRule1 to private transformRex(node RexNode, oldFields List<RelDataTypeField>, newFields List<RelDataTypeField>) : RexNode from class org.apache.calcite.plan.MaterializedViewSubstitutionVisitor
Add Method Modifier	static in method private transformRex(nodes List<RexNode>, oldFields List<RelDataTypeField>, newFields List<RelDataTypeField>) : List<RexNode> from class org.apache.calcite.plan.MaterializedViewSubstitutionVisitor
Move Method	private transformRex(nodes List<RexNode>, oldFields List<RelDataTypeField>, newFields List<RelDataTypeField>) : List<RexNode> from class org.apache.calcite.plan.MaterializedViewSubstitutionVisitor.ProjectToProjectUnifyRule1 to private transformRex(nodes List<RexNode>, oldFields List<RelDataTypeField>, newFields List<RelDataTypeField>) : List<RexNode> from class org.apache.calcite.plan.MaterializedViewSubstitutionVisitor
Extract And Move Method	protected isWeaker(rel0 MutableRel, rel MutableRel) : boolean extracted from public isWeaker(visitor SubstitutionVisitor, rel MutableRel) : boolean in class org.apache.calcite.plan.SubstitutionVisitor.TargetOperand & moved to class org.apache.calcite.plan.SubstitutionVisitor
Developers have reported that 10708 commits involve refactoring but only 351 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 351 commits.

No refactorings detected at 825acf1e4f728e906ced0b17c4d53d71a121c3e6

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b390026b42f23be17fb60
Issue Title: : Create the a new DynamicRecordType, avoiding star expansion when working with this type
Refactorings at 9bd7d7550cfe31b76e3970a532014a8186e1ff5a
Extract Variable	expandedExpr : SqlNode in method public visit(id SqlIdentifier) : SqlNode from class org.apache.calcite.sql.validate.SqlValidatorImpl.Expander
Rename Variable	starPosition : SqlParserPos to startPosition : SqlParserPos in method private expandStar(selectItems List<SqlNode>, aliases Set<String>, types List<Map.Entry<String,RelDataType>>, includeSystemVars boolean, scope SelectScope, node SqlNode) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Extract Variable	expandedWhere : SqlNode in method protected validateWhereClause(select SqlSelect) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Encapsulate Attribute	private name : String from class org.apache.calcite.test.MockCatalogReader.MockSchema
Change Attribute Access Modifier	private to protected in attribute protected columnList : List<Map.Entry<String,RelDataType>> from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Attribute Access Modifier	private to protected in attribute protected rowType : RelDataType from class org.apache.calcite.test.MockCatalogReader.MockTable
Developers have reported that 10708 commits involve refactoring but only 352 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 352 commits.

No refactorings detected at 20ba43461564c983557e9d9fd1b3e04d75ef7b18

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b390426b42f23be17fb8e
Issue Title: : Add a freemarker variable for adding non reserved keywords to Parser.jj template
Refactorings at 5a697eedf1a6d32fe4b6e504dc0454429949d423
Change Variable Type	reservedKeywords : List<String> to reservedKeywords : SortedSet<String> in method public testNoUnintendedNewReservedKeywords() : void from class org.apache.calcite.sql.parser.SqlParserTest
Change Return Type	List<String> to SortedSet<String> in method protected getReservedKeywords() : SortedSet<String> from class org.apache.calcite.sql.parser.SqlParserTest
Developers have reported that 10708 commits involve refactoring but only 353 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 353 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b390b26b42f23be17fbce
Issue Title: : Fix SqlSetOption to correctly handle SqlOperator.createCall
Refactorings at fa76779106ce975e9893c7cd38678f0ce98d3f27
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Developers have reported that 10708 commits involve refactoring but only 354 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 354 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b391026b42f23be17fbff
Issue Title: : Add support for translate (expession, from_string, to_string)
Refactorings at 1be4056b4b5ff4c75bf8f05bd2bc45e5cf01fa10
Add Method Annotation	@Override in method public unparse(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int) : void from class org.apache.calcite.sql.fun.SqlTranslate3Function
Add Method Annotation	@Override in method public getSignatureTemplate(operandsCount int) : String from class org.apache.calcite.sql.fun.SqlTranslate3Function
Replace Attribute With Variable	tester : SqlTester to tester1 : SqlTester in method public testTranslate3Func() : void from class org.apache.calcite.sql.test.SqlOperatorBaseTest
Remove Attribute Modifier	final in attribute protected tester : SqlTester from class org.apache.calcite.test.SqlValidatorTestCase
Move Attribute	public TRANSLATE3 : SqlFunction from class org.apache.calcite.sql.fun.SqlStdOperatorTable to public TRANSLATE3 : SqlFunction from class org.apache.calcite.sql.fun.OracleSqlOperatorTable
Developers have reported that 10708 commits involve refactoring but only 355 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 355 commits.

No refactorings detected at 4e33eedc2412085a475110101d92c9910930f897

No refactorings detected at b6f0e1021b8d8e0dc08e6da49391a76cdb6cfb14

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b391c26b42f23be17fc3e
Issue Title: : Push down LIMIT in unfiltered Cassandra queries
Refactorings at 4c89dce303f8760e10bde3ab2b387780ae059e31
Remove Parameter	implicitCollation : RelCollation in method public CassandraSort(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, collation RelCollation, implicitCollation RelCollation, fetch RexNode) from class org.apache.calcite.adapter.cassandra.CassandraSort
Remove Parameter	fetch : RexNode in method public CassandraSort(cluster RelOptCluster, traitSet RelTraitSet, child RelNode, collation RelCollation, implicitCollation RelCollation, fetch RexNode) from class org.apache.calcite.adapter.cassandra.CassandraSort
Change Parameter Type	limit : String to offset : Integer in method public query(fields List<Map.Entry<String,Class>>, selectFields List<Map.Entry<String,String>>, predicates List<String>, order List<String>, offset Integer, fetch Integer) : Enumerable<Object> from class org.apache.calcite.adapter.cassandra.CassandraTable.CassandraQueryable
Rename Parameter	limit : String to offset : Integer in method public query(fields List<Map.Entry<String,Class>>, selectFields List<Map.Entry<String,String>>, predicates List<String>, order List<String>, offset Integer, fetch Integer) : Enumerable<Object> from class org.apache.calcite.adapter.cassandra.CassandraTable.CassandraQueryable
Localize Parameter	limit : String to limit : int in method public query(session Session, fields List<Map.Entry<String,Class>>, selectFields List<Map.Entry<String,String>>, predicates List<String>, order List<String>, offset Integer, fetch Integer) : Enumerable<Object> from class org.apache.calcite.adapter.cassandra.CassandraTable
Change Variable Type	limit : String to limit : int in method public query(session Session, fields List<Map.Entry<String,Class>>, selectFields List<Map.Entry<String,String>>, predicates List<String>, order List<String>, offset Integer, fetch Integer) : Enumerable<Object> from class org.apache.calcite.adapter.cassandra.CassandraTable
Add Parameter	offset : Integer in method public query(session Session, fields List<Map.Entry<String,Class>>, selectFields List<Map.Entry<String,String>>, predicates List<String>, order List<String>, offset Integer, fetch Integer) : Enumerable<Object> from class org.apache.calcite.adapter.cassandra.CassandraTable
Add Parameter	fetch : Integer in method public query(session Session, fields List<Map.Entry<String,Class>>, selectFields List<Map.Entry<String,String>>, predicates List<String>, order List<String>, offset Integer, fetch Integer) : Enumerable<Object> from class org.apache.calcite.adapter.cassandra.CassandraTable
Rename Variable	limit : Expression to fetch : Expression in method public implement(implementor EnumerableRelImplementor, pref Prefer) : Result from class org.apache.calcite.adapter.cassandra.CassandraToEnumerableConverter
Developers have reported that 10708 commits involve refactoring but only 356 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 356 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b391f26b42f23be17fc58
Issue Title: : Add a method to SqlOperatorBinding to determine whether operand is a literal
Refactorings at 44a6ba67b92c193468f0de9dc3417c218624e69f
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Extract Class	org.apache.calcite.test.SqlOperatorBindingTest from class org.apache.calcite.util.UtilTest
Move Method	public testSqlNodeLiteral() : void from class org.apache.calcite.util.UtilTest to public testSqlNodeLiteral() : void from class org.apache.calcite.test.SqlOperatorBindingTest
Move Method	public testRexNodeLiteral() : void from class org.apache.calcite.util.UtilTest to public testRexNodeLiteral() : void from class org.apache.calcite.test.SqlOperatorBindingTest
Developers have reported that 10708 commits involve refactoring but only 357 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 357 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b391f26b42f23be17fc58
Issue Title: : Add a method to SqlOperatorBinding to determine whether operand is a literal
Refactorings at 1b4209ec973b8b86749fb3cc14262cdd17df0999
Extract Method	public isLiteral(node SqlNode, allowCast boolean) : boolean extracted from public isLiteral(node SqlNode) : boolean in class org.apache.calcite.sql.SqlUtil
Developers have reported that 10708 commits involve refactoring but only 358 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 358 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b392626b42f23be17fc9c
Issue Title: : Handle null equality join condition as IS NOT DISTINCT FROM in RelOptUtil.splitJoinCondition
Refactorings at 3599cebbcfe52a2ee1c146fe97f75b168800e4f9
Add Parameter	filterNulls : List<Boolean> in method public splitJoinCondition(left RelNode, right RelNode, condition RexNode, leftKeys List<Integer>, rightKeys List<Integer>, filterNulls List<Boolean>) : RexNode from class org.apache.calcite.plan.RelOptUtil
Change Variable Type	operator : SqlOperator to kind : SqlKind in method private splitJoinCondition(rexBuilder RexBuilder, leftFieldCount int, condition RexNode, leftKeys List<Integer>, rightKeys List<Integer>, filterNulls List<Boolean>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Remove Variable Modifier	final in variable operator : SqlOperator in method private splitJoinCondition(leftFieldCount int, condition RexNode, leftKeys List<Integer>, rightKeys List<Integer>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Rename Variable	operator : SqlOperator to kind : SqlKind in method private splitJoinCondition(rexBuilder RexBuilder, leftFieldCount int, condition RexNode, leftKeys List<Integer>, rightKeys List<Integer>, filterNulls List<Boolean>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Add Parameter	rexBuilder : RexBuilder in method private splitJoinCondition(rexBuilder RexBuilder, leftFieldCount int, condition RexNode, leftKeys List<Integer>, rightKeys List<Integer>, filterNulls List<Boolean>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Add Parameter	filterNulls : List<Boolean> in method private splitJoinCondition(rexBuilder RexBuilder, leftFieldCount int, condition RexNode, leftKeys List<Integer>, rightKeys List<Integer>, filterNulls List<Boolean>, nonEquiList List<RexNode>) : void from class org.apache.calcite.plan.RelOptUtil
Developers have reported that 10708 commits involve refactoring but only 359 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 359 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b392f26b42f23be17fcd5
Issue Title: : Add cancel flag to AvaticaResultSet
Refactorings at b22733c7c52def566abf84dd020258ae0194b21d
Add Method Annotation	@Override in method public getCancelFlag(handle Meta.StatementHandle) : AtomicBoolean from class org.apache.calcite.jdbc.CalciteConnectionImpl
Change Method Access Modifier	package to public in method public getCancelFlag(handle Meta.StatementHandle) : AtomicBoolean from class org.apache.calcite.jdbc.CalciteConnectionImpl
Developers have reported that 10708 commits involve refactoring but only 360 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 360 commits.

No refactorings detected at 92e6494b1b5e781c58e5a99a86c1566418774ca4

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b393726b42f23be17fd0b
Issue Title: : Changing AvaticaDatabaseMetaData from class to interface breaks compatibility
Refactorings at 26fddf2a641aebf943f18b7da8f81397955f4e59
Change Attribute Type	metaData : AvaticaDatabaseMetaData to metaData : AvaticaSpecificDatabaseMetaData in class org.apache.calcite.avatica.AvaticaConnection
Change Type Declaration Kind	interface to class in type org.apache.calcite.avatica.AvaticaDatabaseMetaData
Add Method Annotation	@Override in method public getRemoteAvaticaProperties() : Properties from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Add Method Annotation	@Override in method public getAvaticaServerVersion() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Change Return Type	AvaticaDatabaseMetaData to AvaticaSpecificDatabaseMetaData in method public newDatabaseMetaData(connection AvaticaConnection) : AvaticaSpecificDatabaseMetaData from class org.apache.calcite.avatica.AvaticaFactory
Change Return Type	AvaticaDatabaseMetaData to AvaticaSpecificDatabaseMetaData in method public newDatabaseMetaData(connection AvaticaConnection) : AvaticaSpecificDatabaseMetaData from class org.apache.calcite.avatica.AvaticaJdbc41Factory
Change Variable Type	avaticaMetadata : AvaticaDatabaseMetaData to avaticaMetadata : AvaticaSpecificDatabaseMetaData in method public getAvaticaVersion() : void from class org.apache.calcite.avatica.remote.RemoteMetaTest
Extract Interface	org.apache.calcite.avatica.AvaticaSpecificDatabaseMetaData from classes [org.apache.calcite.avatica.AvaticaDatabaseMetaData]
Collapse Hierarchy	org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	private nullSorting() : NullSorting from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to private nullSorting() : NullSorting from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	private quoting() : Quoting from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to private quoting() : Quoting from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	private unquotedCasing() : Casing from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to private unquotedCasing() : Casing from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	private quotedCasing() : Casing from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to private quotedCasing() : Casing from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	private caseSensitive() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to private caseSensitive() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public allProceduresAreCallable() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public allProceduresAreCallable() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public allTablesAreSelectable() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public allTablesAreSelectable() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getURL() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getURL() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getUserName() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getUserName() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public isReadOnly() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public isReadOnly() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public nullsAreSortedHigh() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public nullsAreSortedHigh() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public nullsAreSortedLow() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public nullsAreSortedLow() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public nullsAreSortedAtStart() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public nullsAreSortedAtStart() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public nullsAreSortedAtEnd() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public nullsAreSortedAtEnd() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getDatabaseProductName() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getDatabaseProductName() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getDatabaseProductVersion() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getDatabaseProductVersion() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getDriverName() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getDriverName() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getDriverVersion() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getDriverVersion() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getDriverMajorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getDriverMajorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getDriverMinorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getDriverMinorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public usesLocalFiles() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public usesLocalFiles() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public usesLocalFilePerTable() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public usesLocalFilePerTable() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public storesMixedCaseIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public storesMixedCaseIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsMixedCaseIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsMixedCaseIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public storesUpperCaseIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public storesUpperCaseIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public storesLowerCaseIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public storesLowerCaseIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public storesMixedCaseQuotedIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public storesMixedCaseQuotedIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsMixedCaseQuotedIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsMixedCaseQuotedIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public storesUpperCaseQuotedIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public storesUpperCaseQuotedIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public storesLowerCaseQuotedIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public storesLowerCaseQuotedIdentifiers() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getIdentifierQuoteString() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getIdentifierQuoteString() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	private getProperties() : Map<InternalProperty,Object> from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to private getProperties() : Map<InternalProperty,Object> from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getSQLKeywords() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getSQLKeywords() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getNumericFunctions() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getNumericFunctions() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getStringFunctions() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getStringFunctions() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getSystemFunctions() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getSystemFunctions() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getTimeDateFunctions() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getTimeDateFunctions() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getSearchStringEscape() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getSearchStringEscape() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getExtraNameCharacters() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getExtraNameCharacters() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsAlterTableWithAddColumn() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsAlterTableWithAddColumn() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsAlterTableWithDropColumn() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsAlterTableWithDropColumn() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsColumnAliasing() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsColumnAliasing() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public nullPlusNonNullIsNull() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public nullPlusNonNullIsNull() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsConvert() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsConvert() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsConvert(fromType int, toType int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsConvert(fromType int, toType int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsTableCorrelationNames() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsTableCorrelationNames() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsDifferentTableCorrelationNames() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsDifferentTableCorrelationNames() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsExpressionsInOrderBy() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsExpressionsInOrderBy() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsOrderByUnrelated() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsOrderByUnrelated() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsGroupBy() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsGroupBy() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsGroupByUnrelated() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsGroupByUnrelated() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsGroupByBeyondSelect() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsGroupByBeyondSelect() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsLikeEscapeClause() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsLikeEscapeClause() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsMultipleResultSets() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsMultipleResultSets() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsMultipleTransactions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsMultipleTransactions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsNonNullableColumns() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsNonNullableColumns() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsMinimumSQLGrammar() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsMinimumSQLGrammar() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsCoreSQLGrammar() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsCoreSQLGrammar() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsExtendedSQLGrammar() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsExtendedSQLGrammar() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsANSI92EntryLevelSQL() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsANSI92EntryLevelSQL() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsANSI92IntermediateSQL() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsANSI92IntermediateSQL() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsANSI92FullSQL() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsANSI92FullSQL() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsIntegrityEnhancementFacility() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsIntegrityEnhancementFacility() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsOuterJoins() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsOuterJoins() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsFullOuterJoins() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsFullOuterJoins() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsLimitedOuterJoins() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsLimitedOuterJoins() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getSchemaTerm() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getSchemaTerm() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getProcedureTerm() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getProcedureTerm() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getCatalogTerm() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getCatalogTerm() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public isCatalogAtStart() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public isCatalogAtStart() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getCatalogSeparator() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getCatalogSeparator() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsSchemasInDataManipulation() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsSchemasInDataManipulation() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsSchemasInProcedureCalls() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsSchemasInProcedureCalls() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsSchemasInTableDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsSchemasInTableDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsSchemasInIndexDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsSchemasInIndexDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsSchemasInPrivilegeDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsSchemasInPrivilegeDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsCatalogsInDataManipulation() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsCatalogsInDataManipulation() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsCatalogsInProcedureCalls() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsCatalogsInProcedureCalls() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsCatalogsInTableDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsCatalogsInTableDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsCatalogsInIndexDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsCatalogsInIndexDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsCatalogsInPrivilegeDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsCatalogsInPrivilegeDefinitions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsPositionedDelete() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsPositionedDelete() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsPositionedUpdate() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsPositionedUpdate() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsSelectForUpdate() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsSelectForUpdate() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsStoredProcedures() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsStoredProcedures() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsSubqueriesInComparisons() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsSubqueriesInComparisons() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsSubqueriesInExists() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsSubqueriesInExists() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsSubqueriesInIns() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsSubqueriesInIns() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsSubqueriesInQuantifieds() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsSubqueriesInQuantifieds() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsCorrelatedSubqueries() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsCorrelatedSubqueries() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsUnion() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsUnion() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsUnionAll() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsUnionAll() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsOpenCursorsAcrossCommit() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsOpenCursorsAcrossCommit() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsOpenCursorsAcrossRollback() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsOpenCursorsAcrossRollback() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsOpenStatementsAcrossCommit() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsOpenStatementsAcrossCommit() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsOpenStatementsAcrossRollback() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsOpenStatementsAcrossRollback() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxBinaryLiteralLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxBinaryLiteralLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxCharLiteralLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxCharLiteralLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxColumnNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxColumnNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxColumnsInGroupBy() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxColumnsInGroupBy() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxColumnsInIndex() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxColumnsInIndex() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxColumnsInOrderBy() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxColumnsInOrderBy() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxColumnsInSelect() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxColumnsInSelect() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxColumnsInTable() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxColumnsInTable() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxConnections() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxConnections() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxCursorNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxCursorNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxIndexLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxIndexLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxSchemaNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxSchemaNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxProcedureNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxProcedureNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxCatalogNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxCatalogNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxRowSize() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxRowSize() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public doesMaxRowSizeIncludeBlobs() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public doesMaxRowSizeIncludeBlobs() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxStatementLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxStatementLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxStatements() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxStatements() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxTableNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxTableNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxTablesInSelect() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxTablesInSelect() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getMaxUserNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getMaxUserNameLength() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getDefaultTransactionIsolation() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getDefaultTransactionIsolation() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsTransactions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsTransactions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsTransactionIsolationLevel(level int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsTransactionIsolationLevel(level int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsDataDefinitionAndDataManipulationTransactions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsDataDefinitionAndDataManipulationTransactions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsDataManipulationTransactionsOnly() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsDataManipulationTransactionsOnly() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public dataDefinitionCausesTransactionCommit() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public dataDefinitionCausesTransactionCommit() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public dataDefinitionIgnoredInTransactions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public dataDefinitionIgnoredInTransactions() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getProcedures(catalog String, schemaPattern String, procedureNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getProcedures(catalog String, schemaPattern String, procedureNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getProcedureColumns(catalog String, schemaPattern String, procedureNamePattern String, columnNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getProcedureColumns(catalog String, schemaPattern String, procedureNamePattern String, columnNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getTables(catalog String, schemaPattern String, tableNamePattern String, types String[]) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getTables(catalog String, schemaPattern String, tableNamePattern String, types String[]) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	private pat(schemaPattern String) : Meta.Pat from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to private pat(schemaPattern String) : Meta.Pat from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getSchemas(catalog String, schemaPattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getSchemas(catalog String, schemaPattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getSchemas() : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getSchemas() : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getCatalogs() : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getCatalogs() : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getTableTypes() : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getTableTypes() : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getColumns(catalog String, schemaPattern String, tableNamePattern String, columnNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getColumns(catalog String, schemaPattern String, tableNamePattern String, columnNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getColumnPrivileges(catalog String, schema String, table String, columnNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getColumnPrivileges(catalog String, schema String, table String, columnNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getTablePrivileges(catalog String, schemaPattern String, tableNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getTablePrivileges(catalog String, schemaPattern String, tableNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getBestRowIdentifier(catalog String, schema String, table String, scope int, nullable boolean) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getBestRowIdentifier(catalog String, schema String, table String, scope int, nullable boolean) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getVersionColumns(catalog String, schema String, table String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getVersionColumns(catalog String, schema String, table String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getPrimaryKeys(catalog String, schema String, table String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getPrimaryKeys(catalog String, schema String, table String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getImportedKeys(catalog String, schema String, table String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getImportedKeys(catalog String, schema String, table String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getExportedKeys(catalog String, schema String, table String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getExportedKeys(catalog String, schema String, table String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getCrossReference(parentCatalog String, parentSchema String, parentTable String, foreignCatalog String, foreignSchema String, foreignTable String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getCrossReference(parentCatalog String, parentSchema String, parentTable String, foreignCatalog String, foreignSchema String, foreignTable String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getTypeInfo() : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getTypeInfo() : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getIndexInfo(catalog String, schema String, table String, unique boolean, approximate boolean) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getIndexInfo(catalog String, schema String, table String, unique boolean, approximate boolean) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsResultSetType(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsResultSetType(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsResultSetConcurrency(type int, concurrency int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsResultSetConcurrency(type int, concurrency int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public ownUpdatesAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public ownUpdatesAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public ownDeletesAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public ownDeletesAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public ownInsertsAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public ownInsertsAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public othersUpdatesAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public othersUpdatesAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public othersDeletesAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public othersDeletesAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public othersInsertsAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public othersInsertsAreVisible(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public updatesAreDetected(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public updatesAreDetected(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public deletesAreDetected(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public deletesAreDetected(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public insertsAreDetected(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public insertsAreDetected(type int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsBatchUpdates() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsBatchUpdates() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getUDTs(catalog String, schemaPattern String, typeNamePattern String, types int[]) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getUDTs(catalog String, schemaPattern String, typeNamePattern String, types int[]) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getConnection() : Connection from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getConnection() : Connection from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsSavepoints() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsSavepoints() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsNamedParameters() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsNamedParameters() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsMultipleOpenResults() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsMultipleOpenResults() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsGetGeneratedKeys() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsGetGeneratedKeys() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getSuperTypes(catalog String, schemaPattern String, typeNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getSuperTypes(catalog String, schemaPattern String, typeNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getSuperTables(catalog String, schemaPattern String, tableNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getSuperTables(catalog String, schemaPattern String, tableNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getAttributes(catalog String, schemaPattern String, typeNamePattern String, attributeNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getAttributes(catalog String, schemaPattern String, typeNamePattern String, attributeNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsResultSetHoldability(holdability int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsResultSetHoldability(holdability int) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getResultSetHoldability() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getResultSetHoldability() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getDatabaseMajorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getDatabaseMajorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getDatabaseMinorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getDatabaseMinorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getJDBCMajorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getJDBCMajorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getJDBCMinorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getJDBCMinorVersion() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getSQLStateType() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getSQLStateType() : int from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public locatorsUpdateCopy() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public locatorsUpdateCopy() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsStatementPooling() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsStatementPooling() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getRowIdLifetime() : RowIdLifetime from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getRowIdLifetime() : RowIdLifetime from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public supportsStoredFunctionsUsingCallSyntax() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public supportsStoredFunctionsUsingCallSyntax() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public autoCommitFailureClosesAllResultSets() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public autoCommitFailureClosesAllResultSets() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getClientInfoProperties() : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getClientInfoProperties() : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getFunctions(catalog String, schemaPattern String, functionNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getFunctions(catalog String, schemaPattern String, functionNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getFunctionColumns(catalog String, schemaPattern String, functionNamePattern String, columnNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getFunctionColumns(catalog String, schemaPattern String, functionNamePattern String, columnNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getPseudoColumns(catalog String, schemaPattern String, tableNamePattern String, columnNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getPseudoColumns(catalog String, schemaPattern String, tableNamePattern String, columnNamePattern String) : ResultSet from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public generatedKeyAlwaysReturned() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public generatedKeyAlwaysReturned() : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public unwrap(iface Class<T>) : T from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public unwrap(iface Class<T>) : T from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public isWrapperFor(iface Class<?>) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public isWrapperFor(iface Class<?>) : boolean from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getRemoteAvaticaProperties() : Properties from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getRemoteAvaticaProperties() : Properties from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getAvaticaServerVersion() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to public getAvaticaServerVersion() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Attribute	private connection : AvaticaConnection from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to private connection : AvaticaConnection from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	protected AvaticaDatabaseMetaDataImpl(connection AvaticaConnection) from class org.apache.calcite.avatica.AvaticaDatabaseMetaDataImpl to protected AvaticaDatabaseMetaData(connection AvaticaConnection) from class org.apache.calcite.avatica.AvaticaDatabaseMetaData
Pull Up Method	public getRemoteAvaticaProperties() : Properties from class org.apache.calcite.avatica.AvaticaDatabaseMetaData to public getRemoteAvaticaProperties() : Properties from class org.apache.calcite.avatica.AvaticaSpecificDatabaseMetaData
Pull Up Method	public getAvaticaServerVersion() : String from class org.apache.calcite.avatica.AvaticaDatabaseMetaData to public getAvaticaServerVersion() : String from class org.apache.calcite.avatica.AvaticaSpecificDatabaseMetaData
Developers have reported that 10708 commits involve refactoring but only 361 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 361 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b394a26b42f23be17fd92
Issue Title: : Improve two-level column structure handling
Refactorings at a859f93ff2fc800e3e4a481274e3daf19f72e8b2
Change Parameter Type	type : RelDataTypeImpl to type : RelDataType in method private getFieldRecurse(slots List<Slot>, type RelDataType, depth int, fieldName String, caseSensitive boolean) : void from class org.apache.calcite.rel.type.RelDataTypeImpl
Developers have reported that 10708 commits involve refactoring but only 362 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 362 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b394a26b42f23be17fd92
Issue Title: : Improve two-level column structure handling
Refactorings at 0938c7b6d767e3242874d87a30d9112512d9243a
Move Class	org.apache.calcite.rel.type.RelDataType.StructKind moved to org.apache.calcite.rel.type.StructKind
Add Method Annotation	@Override in method public getFieldList() : List<RelDataTypeField> from class org.apache.calcite.rel.type.DynamicRecordTypeImpl
Add Method Annotation	@Override in method public getFieldCount() : int from class org.apache.calcite.rel.type.DynamicRecordTypeImpl
Add Variable Modifier	final in variable pair : Pair<RelDataTypeField,Boolean> in method public getField(fieldName String, caseSensitive boolean, elideRecord boolean) : RelDataTypeField from class org.apache.calcite.rel.type.DynamicRecordTypeImpl
Add Method Annotation	@Override in method public getField(fieldName String, caseSensitive boolean, elideRecord boolean) : RelDataTypeField from class org.apache.calcite.rel.type.DynamicRecordTypeImpl
Add Method Annotation	@Override in method public getFieldNames() : List<String> from class org.apache.calcite.rel.type.DynamicRecordTypeImpl
Add Method Annotation	@Override in method public getSqlTypeName() : SqlTypeName from class org.apache.calcite.rel.type.DynamicRecordTypeImpl
Add Method Annotation	@Override in method public getPrecedenceList() : RelDataTypePrecedenceList from class org.apache.calcite.rel.type.DynamicRecordTypeImpl
Add Method Annotation	@Override in method public isStruct() : boolean from class org.apache.calcite.rel.type.DynamicRecordTypeImpl
Add Method Annotation	@Override in method public getFamily() : RelDataTypeFamily from class org.apache.calcite.rel.type.DynamicRecordTypeImpl
Add Class Annotation	@Deprecated in class org.apache.calcite.rel.type.RelDataTypeFactory.FieldInfo
Add Class Annotation	@SuppressWarnings("deprecation") in class org.apache.calcite.rel.type.RelDataTypeFactory.FieldInfoBuilder
Add Method Annotation	@Deprecated in method public createStructType(fieldInfo FieldInfo) : RelDataType from class org.apache.calcite.rel.type.RelDataTypeFactory
Add Parameter Annotation	@Nonnull in parameter k : Object in method public load(k Object) : RelDataType from class org.apache.calcite.rel.type.RelDataTypeFactoryImpl.CACHE.build.new CacheLoader<Object,RelDataType>
Change Variable Type	pair : Pair<List<String>,List<RelDataType>> to key : Key in method public load(k Object) : RelDataType from class org.apache.calcite.rel.type.RelDataTypeFactoryImpl.CACHE.build.new CacheLoader<Object,RelDataType>
Rename Parameter	key : Object to k : Object in method public load(k Object) : RelDataType from class org.apache.calcite.rel.type.RelDataTypeFactoryImpl.CACHE.build.new CacheLoader<Object,RelDataType>
Rename Variable	pair : Pair<List<String>,List<RelDataType>> to key : Key in method public load(k Object) : RelDataType from class org.apache.calcite.rel.type.RelDataTypeFactoryImpl.CACHE.build.new CacheLoader<Object,RelDataType>
Extract Method	public createStructType(kind StructKind, typeList List<RelDataType>, fieldNameList List<String>) : RelDataType extracted from public createStructType(typeList List<RelDataType>, fieldNameList List<String>) : RelDataType in class org.apache.calcite.rel.type.RelDataTypeFactoryImpl
Add Parameter	kind : StructKind in method protected canonize(kind StructKind, names List<String>, types List<RelDataType>) : RelDataType from class org.apache.calcite.rel.type.RelDataTypeFactoryImpl
Change Class Access Modifier	public to package in class org.apache.calcite.rel.type.RelDataTypeHolder
Rename Method	public setRelDataTypeFactory(typeFactory RelDataTypeFactory) : void renamed to package RelDataTypeHolder(typeFactory RelDataTypeFactory) in class org.apache.calcite.rel.type.RelDataTypeHolder
Add Attribute Modifier	final in attribute private typeFactory : RelDataTypeFactory from class org.apache.calcite.rel.type.RelDataTypeHolder
Change Attribute Access Modifier	package to private in attribute private fields : List<RelDataTypeField> from class org.apache.calcite.rel.type.RelDataTypeHolder
Add Attribute Modifier	final in attribute private fields : List<RelDataTypeField> from class org.apache.calcite.rel.type.RelDataTypeHolder
Remove Parameter	typeFactory : RelDataTypeFactory in method public getFieldList(typeFactory RelDataTypeFactory) : List<RelDataTypeField> from class org.apache.calcite.rel.type.RelDataTypeHolder
Remove Parameter	typeFactory : RelDataTypeFactory in method public getFieldOrInsert(typeFactory RelDataTypeFactory, fieldName String, caseSensitive boolean) : Pair<RelDataTypeField,Boolean> from class org.apache.calcite.rel.type.RelDataTypeHolder
Change Method Access Modifier	public to package in method package getFieldOrInsert(fieldName String, caseSensitive boolean) : Pair<RelDataTypeField,Boolean> from class org.apache.calcite.rel.type.RelDataTypeHolder
Change Method Access Modifier	public to package in method package RelDataTypeHolder(typeFactory RelDataTypeFactory) from class org.apache.calcite.rel.type.RelDataTypeHolder
Add Method Annotation	@Override in method public equals(obj Object) : boolean from class org.apache.calcite.rel.type.RelDataTypeImpl
Add Method Annotation	@Override in method public hashCode() : int from class org.apache.calcite.rel.type.RelDataTypeImpl
Add Method Annotation	@Override in method public toString() : String from class org.apache.calcite.rel.type.RelDataTypeImpl
Add Method Annotation	@Override in method public getSqlTypeName() : SqlTypeName from class org.apache.calcite.rel.type.RelRecordType
Add Method Annotation	@Override in method public isNullable() : boolean from class org.apache.calcite.rel.type.RelRecordType
Add Method Annotation	@Override in method public getPrecision() : int from class org.apache.calcite.rel.type.RelRecordType
Rename Method	private checkAmbiguousUnresolvedStar(fromRowType RelDataType, field RelDataTypeField, identifier SqlIdentifier, columnName String) : void renamed to private hasAmbiguousUnresolvedStar(rowType RelDataType, field RelDataTypeField, columnName String) : boolean in class org.apache.calcite.sql.validate.DelegatingScope
Extract Variable	fieldName : String in method public fullyQualify(identifier SqlIdentifier) : SqlQualified from class org.apache.calcite.sql.validate.DelegatingScope
Change Parameter Type	ancestorOut : SqlValidatorScope[] to deep : boolean in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.DelegatingScope
Change Parameter Type	offsetOut : int[] to resolved : Resolved in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.DelegatingScope
Rename Parameter	ancestorOut : SqlValidatorScope[] to deep : boolean in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.DelegatingScope
Rename Parameter	offsetOut : int[] to resolved : Resolved in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.DelegatingScope
Change Return Type	SqlValidatorNamespace to void in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.DelegatingScope
Rename Parameter	fromRowType : RelDataType to rowType : RelDataType in method private hasAmbiguousUnresolvedStar(rowType RelDataType, field RelDataTypeField, columnName String) : boolean from class org.apache.calcite.sql.validate.DelegatingScope
Change Return Type	void to boolean in method private hasAmbiguousUnresolvedStar(rowType RelDataType, field RelDataTypeField, columnName String) : boolean from class org.apache.calcite.sql.validate.DelegatingScope
Remove Parameter	identifier : SqlIdentifier in method private checkAmbiguousUnresolvedStar(fromRowType RelDataType, field RelDataTypeField, identifier SqlIdentifier, columnName String) : void from class org.apache.calcite.sql.validate.DelegatingScope
Extract Method	public findQualifyingTables(columnName String) : Map<String,SqlValidatorNamespace> extracted from public findQualifyingTableName(columnName String, ctx SqlNode) : Pair<String,SqlValidatorNamespace> in class org.apache.calcite.sql.validate.ListScope
Add Method Annotation	@Override in method public findQualifyingTableName(columnName String, ctx SqlNode) : Pair<String,SqlValidatorNamespace> from class org.apache.calcite.sql.validate.ListScope
Change Method Access Modifier	protected to private in method private findChild(names List<String>) : int from class org.apache.calcite.sql.validate.ListScope
Change Method Access Modifier	public to package in method package Expander(validator SqlValidatorImpl, scope SqlValidatorScope) from class org.apache.calcite.sql.validate.SqlValidatorImpl.Expander
Add Variable Modifier	final in variable foundNs : SqlValidatorNamespace in method private analyzeGroupExpr(scope SqlValidatorScope, groupExprs List<SqlNode>, groupExprProjection Map<Integer,Integer>, groupExpr SqlNode) : ImmutableBitSet from class org.apache.calcite.sql.validate.SqlValidatorUtil
Add Variable Modifier	final in variable childNamespaceIndex : int in method private analyzeGroupExpr(scope SqlValidatorScope, groupExprs List<SqlNode>, groupExprProjection Map<Integer,Integer>, groupExpr SqlNode) : ImmutableBitSet from class org.apache.calcite.sql.validate.SqlValidatorUtil
Remove Parameter	elideRecord : boolean in method public lookupField(caseSensitive boolean, elideRecord boolean, rowType RelDataType, columnName String) : RelDataTypeField from class org.apache.calcite.sql.validate.SqlValidatorUtil
Remove Parameter	elideRecord : boolean in method public createTypeFromProjection(type RelDataType, columnNameList List<String>, typeFactory RelDataTypeFactory, caseSensitive boolean, elideRecord boolean) : RelDataType from class org.apache.calcite.sql.validate.SqlValidatorUtil
Change Parameter Type	ancestorOut : SqlValidatorScope[] to deep : boolean in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.WithScope
Change Parameter Type	offsetOut : int[] to resolved : Resolved in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.WithScope
Rename Parameter	ancestorOut : SqlValidatorScope[] to deep : boolean in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.WithScope
Rename Parameter	offsetOut : int[] to resolved : Resolved in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.WithScope
Change Return Type	SqlValidatorNamespace to void in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.WithScope
Add Variable Modifier	final in variable foundNs : SqlValidatorNamespace in method package lookupExp(qualified SqlQualified) : Pair<RexNode,Map<String,Integer>> from class org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard
Add Variable Modifier	final in variable ancestorScope : SqlValidatorScope in method package lookupExp(qualified SqlQualified) : Pair<RexNode,Map<String,Integer>> from class org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard
Add Variable Modifier	final in variable foundNs : SqlValidatorNamespace in method private getCorrelationUse(bb Blackboard, r0 RelNode) : CorrelationUse from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Variable Modifier	final in variable childNamespaceIndex : int in method private getCorrelationUse(bb Blackboard, r0 RelNode) : CorrelationUse from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Variable Modifier	final in variable ancestorScope : SqlValidatorScope in method private getCorrelationUse(bb Blackboard, r0 RelNode) : CorrelationUse from class org.apache.calcite.sql2rel.SqlToRelConverter
Rename Method	public add(element int) : ImmutableIntList renamed to public append(element int) : ImmutableIntList in class org.apache.calcite.util.ImmutableIntList
Change Method Access Modifier	public to package in method package MockDynamicTable(catalogReader MockCatalogReader, catalogName String, schemaName String, name String, stream boolean, rowCount double) from class org.apache.calcite.test.MockCatalogReader.MockDynamicTable
Remove Method Annotation	@Override in method public isStruct() : boolean from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public isDynamicStruct() : boolean from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getFieldList() : List<RelDataTypeField> from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getFieldNames() : List<String> from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getFieldCount() : int from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getStructKind() : StructKind from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getField(fieldName String, caseSensitive boolean, elideRecord boolean) : RelDataTypeField from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public isNullable() : boolean from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getComponentType() : RelDataType from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getKeyType() : RelDataType from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getValueType() : RelDataType from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getCharset() : Charset from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getCollation() : SqlCollation from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getIntervalQualifier() : SqlIntervalQualifier from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getPrecision() : int from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getScale() : int from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getSqlTypeName() : SqlTypeName from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getSqlIdentifier() : SqlIdentifier from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getFullTypeString() : String from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getFamily() : RelDataTypeFamily from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getPrecedenceList() : RelDataTypePrecedenceList from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Remove Method Annotation	@Override in method public getComparability() : RelDataTypeComparability from class org.apache.calcite.test.MockCatalogReader.DelegateStructType
Add Variable Modifier	final in variable f0Type : RelDataType in method public init() : MockCatalogReader from class org.apache.calcite.test.MockCatalogReader
Add Variable Modifier	final in variable f1Type : RelDataType in method public init() : MockCatalogReader from class org.apache.calcite.test.MockCatalogReader
Add Variable Modifier	final in variable f2Type : RelDataType in method public init() : MockCatalogReader from class org.apache.calcite.test.MockCatalogReader
Extract Variable	cluster : RelOptCluster in method protected appendSearchString(toAppend String, splunkRel SplunkTableScan, topProj LogicalProject, bottomProj LogicalProject, topRow RelDataType, bottomRow RelDataType) : RelNode from class org.apache.calcite.adapter.splunk.SplunkPushDownRule
Change Class Access Modifier	package to public in class org.apache.calcite.rel.type.StructKind
Change Return Type	SqlValidatorNamespace to void in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.EmptyScope
Change Return Type	SqlValidatorNamespace to void in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.ListScope
Add Method Annotation	@Override in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.ListScope
Change Return Type	SqlValidatorNamespace to void in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.SqlValidatorScope
Developers have reported that 10708 commits involve refactoring but only 363 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 363 commits.

No refactorings detected at 216035f890c298a631137fa98d83478b6c00ab3b

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b394d26b42f23be17fda4
Issue Title: : Further extend simplify for reducing expressions
Refactorings at e872959797de16ef856d76526da484e094ef0a10
Change Attribute Type	constants : ImmutableMap<RexNode,? extends RexNode> to constants : ImmutableMap<RexNode,RexNode> in class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Change Parameter Type	constants : ImmutableMap<RexNode,? extends RexNode> to constants : ImmutableMap<RexNode,RexNode> in method package ReducibleExprLocator(typeFactory RelDataTypeFactory, constants ImmutableMap<RexNode,RexNode>, constExprs List<RexNode>, addCasts List<Boolean>, removableCasts List<RexNode>) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Rename Variable	newExp : RexNode to expr2 : RexNode in method protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Variable Type	constants : ImmutableMap<RexNode,RexLiteral> to constants : ImmutableMap<RexNode,RexNode> in method protected reduceExpressionsInternal(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Method Access Modifier	protected to public in method public predicateConstants(clazz Class<C>, rexBuilder RexBuilder, predicates RelOptPredicateList) : ImmutableMap<RexNode,C> from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Parameter Type	constants : ImmutableMap<RexNode,? extends RexNode> to constants : ImmutableMap<RexNode,RexNode> in method protected findReducibleExps(typeFactory RelDataTypeFactory, exps List<RexNode>, constants ImmutableMap<RexNode,RexNode>, constExps List<RexNode>, addCasts List<Boolean>, removableCasts List<RexNode>) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Remove Variable Modifier	final in variable term : RexNode in method public simplifyAnd2ForUnknownAsFalse(rexBuilder RexBuilder, terms List<RexNode>, notTerms List<RexNode>) : RexNode from class org.apache.calcite.rex.RexUtil
Add Variable Modifier	final in variable disjunction : RexNode in method private simplifyCase(rexBuilder RexBuilder, call RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Add Parameter	unknownAsFalse : boolean in method private simplifyCase(rexBuilder RexBuilder, call RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Developers have reported that 10708 commits involve refactoring but only 364 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 364 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b394d26b42f23be17fda5
Issue Title: : Extend simplify for reducing expressions
Refactorings at 3a54e54fadfcf383693555ac753e88edb8f3f5d6
Extract Method	protected reduceExpressionsInternal(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean extracted from protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean in class org.apache.calcite.rel.rules.ReduceExpressionsRule
Extract Method	protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean) : boolean extracted from protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean in class org.apache.calcite.rel.rules.ReduceExpressionsRule
Extract Method	public simplify(rexBuilder RexBuilder, e RexNode, unknownAsFalse boolean) : RexNode extracted from public simplify(rexBuilder RexBuilder, e RexNode) : RexNode in class org.apache.calcite.rex.RexUtil
Extract Method	public simplifyAnds(rexBuilder RexBuilder, nodes Iterable<? extends RexNode>, unknownAsFalse boolean) : RexNode extracted from public simplifyAnds(rexBuilder RexBuilder, nodes Iterable<? extends RexNode>) : RexNode in class org.apache.calcite.rex.RexUtil
Add Parameter	unknownAsFalse : boolean in method public simplifyAnd(rexBuilder RexBuilder, e RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Developers have reported that 10708 commits involve refactoring but only 365 involve refactoring operations
There are 6 duplicate commits with refactoring out of the 365 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b394d26b42f23be17fda5
Issue Title: : Extend simplify for reducing expressions
Refactorings at e872959797de16ef856d76526da484e094ef0a10
Change Attribute Type	constants : ImmutableMap<RexNode,? extends RexNode> to constants : ImmutableMap<RexNode,RexNode> in class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Change Parameter Type	constants : ImmutableMap<RexNode,? extends RexNode> to constants : ImmutableMap<RexNode,RexNode> in method package ReducibleExprLocator(typeFactory RelDataTypeFactory, constants ImmutableMap<RexNode,RexNode>, constExprs List<RexNode>, addCasts List<Boolean>, removableCasts List<RexNode>) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Rename Variable	newExp : RexNode to expr2 : RexNode in method protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Variable Type	constants : ImmutableMap<RexNode,RexLiteral> to constants : ImmutableMap<RexNode,RexNode> in method protected reduceExpressionsInternal(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Method Access Modifier	protected to public in method public predicateConstants(clazz Class<C>, rexBuilder RexBuilder, predicates RelOptPredicateList) : ImmutableMap<RexNode,C> from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Parameter Type	constants : ImmutableMap<RexNode,? extends RexNode> to constants : ImmutableMap<RexNode,RexNode> in method protected findReducibleExps(typeFactory RelDataTypeFactory, exps List<RexNode>, constants ImmutableMap<RexNode,RexNode>, constExps List<RexNode>, addCasts List<Boolean>, removableCasts List<RexNode>) : void from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Remove Variable Modifier	final in variable term : RexNode in method public simplifyAnd2ForUnknownAsFalse(rexBuilder RexBuilder, terms List<RexNode>, notTerms List<RexNode>) : RexNode from class org.apache.calcite.rex.RexUtil
Add Variable Modifier	final in variable disjunction : RexNode in method private simplifyCase(rexBuilder RexBuilder, call RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Add Parameter	unknownAsFalse : boolean in method private simplifyCase(rexBuilder RexBuilder, call RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Developers have reported that 10708 commits involve refactoring but only 366 involve refactoring operations
There are 7 duplicate commits with refactoring out of the 366 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b395d26b42f23be17fe22
Issue Title: : In SqlKind, add OTHER_DDL to DDL enum set
Refactorings at 547aa67c208933739197ffbd0d5f9c9d142ea593
Add Method Annotation	@Override in method public check(sql String, expected String) : void from class org.apache.calcite.sql.parser.SqlParserTest.UnparsingTesterImpl
Add Method Annotation	@Override in method public checkExp(sql String, expected String) : void from class org.apache.calcite.sql.parser.SqlParserTest.UnparsingTesterImpl
Add Method Annotation	@Override in method public checkFails(sql String, expectedMsgPattern String) : void from class org.apache.calcite.sql.parser.SqlParserTest.UnparsingTesterImpl
Add Method Annotation	@Override in method public checkExpFails(sql String, expectedMsgPattern String) : void from class org.apache.calcite.sql.parser.SqlParserTest.UnparsingTesterImpl
Change Return Type	void to Sql in method public ok(expected String) : Sql from class org.apache.calcite.sql.parser.SqlParserTest.Sql
Change Return Type	void to Sql in method public fails(expectedMsgPattern String) : Sql from class org.apache.calcite.sql.parser.SqlParserTest.Sql
Extract Variable	expected : String in method public testUpsertValues() : void from class org.apache.calcite.sql.parser.SqlParserTest
Developers have reported that 10708 commits involve refactoring but only 367 involve refactoring operations
There are 7 duplicate commits with refactoring out of the 367 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b396026b42f23be17fe3f
Issue Title: : Convert predicates on EXTRACT function calls into date ranges
Refactorings at 87435a9b86e0d44a6c9123c028e5c5180fe3da88
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,DateRangeRulesTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Change Class Access Modifier	private to public in class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Add Class Annotation	@SuppressWarnings("WeakerAccess") in class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public rexBuilder : RexBuilder from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public bl : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public i : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public dec : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public lg : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public sh : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public by : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public fl : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public dt : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public ch : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public ts : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public t : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public str : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public boolRelDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public intRelDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public decRelDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public longRelDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public shortDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public byteDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public floatDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public charDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public dateDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public timeStampDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public timeDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public stringDataType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public typeFactory : RelDataTypeFactory from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public checker : RexImplicationChecker from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public rowType : RelDataType from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Attribute Access Modifier	private to public in attribute public executor : RexExecutorImpl from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public ref(i int, type RelDataType) : RexInputRef from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public literal(i int) : RexLiteral from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public gt(node1 RexNode, node2 RexNode) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public ge(node1 RexNode, node2 RexNode) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public eq(node1 RexNode, node2 RexNode) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public ne(node1 RexNode, node2 RexNode) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public lt(node1 RexNode, node2 RexNode) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public le(node1 RexNode, node2 RexNode) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public notNull(node1 RexNode) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public isNull(node2 RexNode) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public longLiteral(value long) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public shortLiteral(value short) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public floatLiteral(value double) : RexLiteral from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public charLiteral(z String) : RexLiteral from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public timestampLiteral(calendar Calendar) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public timeLiteral(calendar Calendar) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Merge Parameter	[node1 : RexNode, node2 : RexNode] to nodes : RexNode... in method public and(nodes RexNode...) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Method Access Modifier	package to public in method public and(nodes RexNode...) : RexNode from class org.apache.calcite.test.RexImplicationCheckerTest.Fixture
Change Variable Type	fieldTypes : List<Primitive> to fieldTypes : List<ColumnMetaData.Rep> in method public run() : void from class org.apache.calcite.adapter.druid.DruidConnectionImpl.enumerable.new AbstractEnumerable<Row>.enumerator.sink.new RunnableQueueSink
Change Parameter Type	fieldTypes : List<Primitive> to fieldTypes : List<ColumnMetaData.Rep> in method public request(queryType QueryType, data String, sink Sink, fieldNames List<String>, fieldTypes List<ColumnMetaData.Rep>, page Page) : void from class org.apache.calcite.adapter.druid.DruidConnectionImpl
Change Parameter Type	fieldTypes : List<Primitive> to fieldTypes : List<ColumnMetaData.Rep> in method private parse(queryType QueryType, in InputStream, sink Sink, fieldNames List<String>, fieldTypes List<ColumnMetaData.Rep>, page Page) : void from class org.apache.calcite.adapter.druid.DruidConnectionImpl
Change Parameter Type	fieldTypes : List<Primitive> to fieldTypes : List<ColumnMetaData.Rep> in method private parseFields(fieldNames List<String>, fieldTypes List<ColumnMetaData.Rep>, rowBuilder Row.RowBuilder, parser JsonParser) : void from class org.apache.calcite.adapter.druid.DruidConnectionImpl
Change Variable Type	type : Primitive to type : ColumnMetaData.Rep in method private parseField(fieldNames List<String>, fieldTypes List<ColumnMetaData.Rep>, rowBuilder Row.RowBuilder, parser JsonParser) : void from class org.apache.calcite.adapter.druid.DruidConnectionImpl
Change Parameter Type	fieldTypes : List<Primitive> to fieldTypes : List<ColumnMetaData.Rep> in method private parseField(fieldNames List<String>, fieldTypes List<ColumnMetaData.Rep>, rowBuilder Row.RowBuilder, parser JsonParser) : void from class org.apache.calcite.adapter.druid.DruidConnectionImpl
Change Variable Type	fieldTypes : List<Primitive> to fieldTypes : List<ColumnMetaData.Rep> in method public run() : void from class org.apache.calcite.adapter.druid.DruidQuery.DruidQueryNode
Change Return Type	Primitive to ColumnMetaData.Rep in method private getPrimitive(field RelDataTypeField) : ColumnMetaData.Rep from class org.apache.calcite.adapter.druid.DruidQuery.DruidQueryNode
Developers have reported that 10708 commits involve refactoring but only 368 involve refactoring operations
There are 7 duplicate commits with refactoring out of the 368 commits.

No refactorings detected at 63a7a1a96856d3f900d2a6997da859aa06cb54ad

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b396926b42f23be17fe84
Issue Title: : Metadata provider should not pull predicates up through GROUP BY ()
Refactorings at 29daa4513f19c82a410ea3c36a6116260caa0216
Rename Method	private checkMetadataUnionPredicates(sql String, expectedPredicates String) : void renamed to private checkMetadataPredicates(sql String, expectedPredicates String) : void in class org.apache.calcite.tools.PlannerTest
Developers have reported that 10708 commits involve refactoring but only 369 involve refactoring operations
There are 7 duplicate commits with refactoring out of the 369 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b396b26b42f23be17fe9c
Issue Title: : Creating output row type of a Join does not obey case-sensitivity flags
Refactorings at acd27fdea5fb54375a999a9221b79a6df166660c
Extract Variable	cluster : RelOptCluster in method public projectJoinInputs(inputRels RelNode[], leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, systemColCount int, leftKeys List<Integer>, rightKeys List<Integer>, outputProj List<Integer>) : void from class org.apache.calcite.plan.RelOptUtil
Add Variable Modifier	final in variable rexBuilder : RexBuilder in method public projectJoinInputs(inputRels RelNode[], leftJoinKeys List<RexNode>, rightJoinKeys List<RexNode>, systemColCount int, leftKeys List<Integer>, rightKeys List<Integer>, outputProj List<Integer>) : void from class org.apache.calcite.plan.RelOptUtil
Add Method Annotation	@Deprecated in method public deriveJoinRowType(leftType RelDataType, rightType RelDataType, joinType JoinRelType, typeFactory RelDataTypeFactory, fieldNameList List<String>, systemFieldList List<RelDataTypeField>) : RelDataType from class org.apache.calcite.rel.core.Join
Add Method Annotation	@Deprecated in method public createJoinType(typeFactory RelDataTypeFactory, leftType RelDataType, rightType RelDataType, fieldNameList List<String>, systemFieldList List<RelDataTypeField>) : RelDataType from class org.apache.calcite.rel.core.Join
Change Class Access Modifier	public to package in class org.apache.calcite.rel.type.RelDataTypeFactory.FieldInfo
Change Class Access Modifier	public to package in class org.apache.calcite.rel.type.RelDataTypeFactory.FieldInfoBuilder
Remove Class Modifier	static in class org.apache.calcite.rel.type.RelDataTypeFactory.FieldInfoBuilder
Add Method Annotation	@Override in method public getDefaultPrecision(typeName SqlTypeName) : int from class org.apache.calcite.rel.type.RelDataTypeSystemImpl
Add Method Annotation	@Override in method public getMaxPrecision(typeName SqlTypeName) : int from class org.apache.calcite.rel.type.RelDataTypeSystemImpl
Add Method Annotation	@Override in method public getMaxNumericScale() : int from class org.apache.calcite.rel.type.RelDataTypeSystemImpl
Add Method Annotation	@Override in method public getMaxNumericPrecision() : int from class org.apache.calcite.rel.type.RelDataTypeSystemImpl
Add Method Annotation	@Override in method public getLiteral(typeName SqlTypeName, isPrefix boolean) : String from class org.apache.calcite.rel.type.RelDataTypeSystemImpl
Add Method Annotation	@Override in method public isCaseSensitive(typeName SqlTypeName) : boolean from class org.apache.calcite.rel.type.RelDataTypeSystemImpl
Add Method Annotation	@Override in method public isAutoincrement(typeName SqlTypeName) : boolean from class org.apache.calcite.rel.type.RelDataTypeSystemImpl
Add Method Annotation	@Override in method public getNumTypeRadix(typeName SqlTypeName) : int from class org.apache.calcite.rel.type.RelDataTypeSystemImpl
Add Method Annotation	@Override in method public deriveSumType(typeFactory RelDataTypeFactory, argumentType RelDataType) : RelDataType from class org.apache.calcite.rel.type.RelDataTypeSystemImpl
Extract Method	public createStructType(typeFactory RelDataTypeFactory, exprs List<? extends RexNode>, names List<String>, suggester SqlValidatorUtil.Suggester) : RelDataType extracted from public createStructType(typeFactory RelDataTypeFactory, exprs List<? extends RexNode>, names List<String>) : RelDataType in class org.apache.calcite.rex.RexUtil
Remove Parameter Modifier	final in parameter names : List<String> in method public createStructType(typeFactory RelDataTypeFactory, exprs List<? extends RexNode>, names List<String>) : RelDataType from class org.apache.calcite.rex.RexUtil
Add Method Annotation	@Deprecated in method public createStructType(typeFactory RelDataTypeFactory, exprs List<? extends RexNode>, names List<String>) : RelDataType from class org.apache.calcite.rex.RexUtil
Change Class Access Modifier	package to public in class org.apache.calcite.sql.validate.SqlValidatorUtil.Suggester
Extract Method	public uniquify(nameList List<String>, suggester Suggester, caseSensitive boolean) : List<String> extracted from public uniquify(nameList List<String>, suggester Suggester) : List<String> in class org.apache.calcite.sql.validate.SqlValidatorUtil
Add Method Annotation	@Deprecated in method public uniquify(nameList List<String>) : List<String> from class org.apache.calcite.sql.validate.SqlValidatorUtil
Add Method Annotation	@Deprecated in method public uniquify(nameList List<String>, suggester Suggester) : List<String> from class org.apache.calcite.sql.validate.SqlValidatorUtil
Rename Parameter	nameList : Set<String> to usedNames : Set<String> in method public uniquify(name String, usedNames Set<String>, suggester Suggester) : String from class org.apache.calcite.sql.validate.SqlValidatorUtil
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Change Parameter Type	uniqueNameList : HashSet<String> to uniqueNames : Set<String> in method private addFields(fieldList List<RelDataTypeField>, typeList List<RelDataType>, nameList List<String>, uniqueNames Set<String>) : void from class org.apache.calcite.sql.validate.SqlValidatorUtil
Rename Parameter	uniqueNameList : HashSet<String> to uniqueNames : Set<String> in method private addFields(fieldList List<RelDataTypeField>, typeList List<RelDataType>, nameList List<String>, uniqueNames Set<String>) : void from class org.apache.calcite.sql.validate.SqlValidatorUtil
Move Method	private addFields(fieldList List<RelDataTypeField>, typeList List<RelDataType>, nameList List<String>, uniqueNameList HashSet<String>) : void from class org.apache.calcite.rel.core.Join to private addFields(fieldList List<RelDataTypeField>, typeList List<RelDataType>, nameList List<String>, uniqueNames Set<String>) : void from class org.apache.calcite.sql.validate.SqlValidatorUtil
Extract And Move Method	public deriveJoinRowType(leftType RelDataType, rightType RelDataType, joinType JoinRelType, typeFactory RelDataTypeFactory, fieldNameList List<String>, systemFieldList List<RelDataTypeField>) : RelDataType extracted from public deriveJoinRowType(leftType RelDataType, rightType RelDataType, joinType JoinRelType, typeFactory RelDataTypeFactory, fieldNameList List<String>, systemFieldList List<RelDataTypeField>) : RelDataType in class org.apache.calcite.rel.core.Join & moved to class org.apache.calcite.sql.validate.SqlValidatorUtil
Extract And Move Method	public createJoinType(typeFactory RelDataTypeFactory, leftType RelDataType, rightType RelDataType, fieldNameList List<String>, systemFieldList List<RelDataTypeField>) : RelDataType extracted from public createJoinType(typeFactory RelDataTypeFactory, leftType RelDataType, rightType RelDataType, fieldNameList List<String>, systemFieldList List<RelDataTypeField>) : RelDataType in class org.apache.calcite.rel.core.Join & moved to class org.apache.calcite.sql.validate.SqlValidatorUtil
Developers have reported that 10708 commits involve refactoring but only 370 involve refactoring operations
There are 7 duplicate commits with refactoring out of the 370 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b399126b42f23be17ffa4
Issue Title: : Create separate SqlFunctionCategory values for table functions and macros
Refactorings at 0599cdde009d6e08f0cb973f914b526f9518dc47
Add Method Annotation	@Nonnull in method public getFunctionType() : SqlFunctionCategory from class org.apache.calcite.sql.SqlFunction
Add Parameter	properties : Property... in method package SqlFunctionCategory(abbrev String, description String, properties Property...) from class org.apache.calcite.sql.SqlFunctionCategory
Extract Method	protected category(operator SqlOperator) : SqlFunctionCategory extracted from public lookupOperatorOverloads(opName SqlIdentifier, category SqlFunctionCategory, syntax SqlSyntax, operatorList List<SqlOperator>) : void in class org.apache.calcite.sql.util.ListSqlOperatorTable
Add Method Annotation	@Override in method public visit(p RelNode, ordinal int, parent RelNode) : void from class org.apache.calcite.sql2rel.RelStructuredTypeFlattener.RewriteRelVisitor
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Developers have reported that 10708 commits involve refactoring but only 371 involve refactoring operations
There are 7 duplicate commits with refactoring out of the 371 commits.

No refactorings detected at 317802d7333a2efea35b6449645f948723d1814c

No refactorings detected at 9b1624a88a506a3ceb1c5ccada1522d2a665aec6

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b399626b42f23be17ffcb
Issue Title: : Introduce UnionPullUpConstantsRule 
Refactorings at 29daa4513f19c82a410ea3c36a6116260caa0216
Rename Method	private checkMetadataUnionPredicates(sql String, expectedPredicates String) : void renamed to private checkMetadataPredicates(sql String, expectedPredicates String) : void in class org.apache.calcite.tools.PlannerTest
Developers have reported that 10708 commits involve refactoring but only 372 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 372 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b399926b42f23be17ffe0
Issue Title: : Add view name to the ViewExpander
Refactorings at 7936185e55e3243c9fec6bb6461a934d2539e32f
Add Parameter	viewPath : List<String> in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>, viewPath List<String>) : RelRoot from class org.apache.calcite.plan.RelOptUtil.getContext.new RelOptTable.ToRelContext
Add Parameter	viewPath : List<String> in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>, viewPath List<String>) : RelRoot from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Add Parameter	viewPath : List<String> in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>, viewPath List<String>) : RelRoot from class org.apache.calcite.prepare.LixToRelTranslator
Add Parameter	viewPath : List<String> in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>, viewPath List<String>) : RelRoot from class org.apache.calcite.prepare.PlannerImpl.ViewExpanderImpl
Add Method Annotation	@Override in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>, viewPath List<String>) : RelRoot from class org.apache.calcite.prepare.PlannerImpl.ViewExpanderImpl
Add Parameter	viewPath : List<String> in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>, viewPath List<String>) : RelRoot from class org.apache.calcite.prepare.Prepare
Add Parameter	viewPath : List<String> in method private MaterializedViewTableMacro(schema CalciteSchema, viewSql String, viewSchemaPath List<String>, viewPath List<String>, suggestedTableName String, existing boolean) from class org.apache.calcite.schema.impl.MaterializedViewTable.MaterializedViewTableMacro
Add Parameter	viewPath : List<String> in method public MaterializedViewTable(elementType Type, relDataType RelProtoDataType, viewSql String, viewSchemaPath List<String>, viewPath List<String>, key MaterializationKey) from class org.apache.calcite.schema.impl.MaterializedViewTable
Add Parameter	viewPath : List<String> in method public create(schema CalciteSchema, viewSql String, viewSchemaPath List<String>, viewPath List<String>, suggestedTableName String, existing boolean) : MaterializedViewTableMacro from class org.apache.calcite.schema.impl.MaterializedViewTable
Add Parameter	viewPath : List<String> in method package ViewTableMacro(schema CalciteSchema, viewSql String, schemaPath List<String>, viewPath List<String>, modifiable Boolean) from class org.apache.calcite.schema.impl.ViewTable.ViewTableMacro
Add Parameter	viewPath : List<String> in method public ModifiableViewTable(elementType Type, rowType RelProtoDataType, viewSql String, schemaPath List<String>, viewPath List<String>, table Table, tablePath Path, constraint RexNode, columnMapping ImmutableIntList) from class org.apache.calcite.schema.impl.ViewTable.ModifiableViewTable
Extract Method	public viewMacro(schema SchemaPlus, viewSql String, schemaPath List<String>, viewPath List<String>, modifiable Boolean) : ViewTableMacro extracted from public viewMacro(schema SchemaPlus, viewSql String, schemaPath List<String>, modifiable Boolean) : ViewTableMacro in class org.apache.calcite.schema.impl.ViewTable
Add Method Annotation	@Deprecated in method public viewMacro(schema SchemaPlus, viewSql String, schemaPath List<String>, modifiable Boolean) : ViewTableMacro from class org.apache.calcite.schema.impl.ViewTable
Add Parameter	viewPath : List<String> in method public ViewTable(elementType Type, rowType RelProtoDataType, viewSql String, schemaPath List<String>, viewPath List<String>) from class org.apache.calcite.schema.impl.ViewTable
Add Parameter	viewPath : List<String> in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>, viewPath List<String>) : RelRoot from class org.apache.calcite.sql2rel.SqlToRelConverter.createToRelContext.new RelOptTable.ToRelContext
Add Method Annotation	@Override in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>, viewPath List<String>) : RelRoot from class org.apache.calcite.sql2rel.SqlToRelConverter.createToRelContext.new RelOptTable.ToRelContext
Extract And Move Method	public viewMacro(schema SchemaPlus, viewSql String, schemaPath List<String>, viewPath List<String>, modifiable Boolean) : ViewTableMacro extracted from public addSchema(rootSchema SchemaPlus, schema SchemaSpec) : SchemaPlus in class org.apache.calcite.test.CalciteAssert & moved to class org.apache.calcite.schema.impl.ViewTable
Add Parameter	viewPath : List<String> in method public expandView(rowType RelDataType, queryString String, schemaPath List<String>, viewPath List<String>) : RelRoot from class org.apache.calcite.plan.RelOptTable.ViewExpander
Developers have reported that 10708 commits involve refactoring but only 373 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 373 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b399a26b42f23be17ffed
Issue Title: : Move Quidem tests from JdbcTest into their own class
Refactorings at a2d7165f360e450889ba8b8d051810ddb45e3b62
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Move Method	private checkRun(path String) : void from class org.apache.calcite.test.JdbcTest to private checkRun(path String) : void from class org.apache.calcite.test.QuidemTest
Extract Method	private env() : Function<String,Object> extracted from private checkRun(path String) : void in class org.apache.calcite.test.QuidemTest
Developers have reported that 10708 commits involve refactoring but only 374 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 374 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b399d26b42f23be17fffd
Issue Title: : Create SqlTypeName values for each interval range, e.g. YEAR_MONTH
Refactorings at ac9c8c7af020a0532e3e7e31b4216f69d9f0b39f
Change Attribute Access Modifier	public to private in attribute private TO_INPUT_REF : Function<RelDataTypeField,RexInputRef> from class org.apache.calcite.rex.RexBuilder
Inline Variable	intervalType : IntervalSqlType in method private makeCastIntervalToExact(toType RelDataType, exp RexNode) : RexNode from class org.apache.calcite.rex.RexBuilder
Change Method Access Modifier	private to public in method public multiplyDivide(e RexNode, multiplier BigDecimal, divider BigDecimal) : RexNode from class org.apache.calcite.rex.RexBuilder
Change Parameter Type	unit : TimeUnit to unit : SqlTypeName in method protected baseUnit(unit SqlTypeName) : TimeUnit from class org.apache.calcite.rex.RexBuilder
Add Variable Modifier	final in variable thatStart : TimeUnit in method public combine(typeFactory RelDataTypeFactoryImpl, that IntervalSqlType) : IntervalSqlType from class org.apache.calcite.sql.type.IntervalSqlType
Add Variable Modifier	final in variable thatEnd : TimeUnit in method public combine(typeFactory RelDataTypeFactoryImpl, that IntervalSqlType) : IntervalSqlType from class org.apache.calcite.sql.type.IntervalSqlType
Add Variable Modifier	final in variable fracPrec : int in method public combine(typeFactory RelDataTypeFactoryImpl, that IntervalSqlType) : IntervalSqlType from class org.apache.calcite.sql.type.IntervalSqlType
Extract Method	private list(typeNames Iterable<SqlTypeName>) : SqlTypeExplicitPrecedenceList extracted from private list(array SqlTypeName...) : SqlTypeExplicitPrecedenceList in class org.apache.calcite.sql.type.SqlTypeExplicitPrecedenceList
Rename Parameter	array : SqlTypeName... to typeNames : SqlTypeName... in method private list(typeNames SqlTypeName...) : SqlTypeExplicitPrecedenceList from class org.apache.calcite.sql.type.SqlTypeExplicitPrecedenceList
Change Parameter Type	typeNames : List<SqlTypeName> to typeNames : Iterable<SqlTypeName> in method public SqlTypeExplicitPrecedenceList(typeNames Iterable<SqlTypeName>) from class org.apache.calcite.sql.type.SqlTypeExplicitPrecedenceList
Change Return Type	List<SqlTypeName> to Collection<SqlTypeName> in method public getTypeNames() : Collection<SqlTypeName> from class org.apache.calcite.sql.type.SqlTypeFamily
Change Attribute Type	INTERVAL_TYPES : List<SqlTypeName> to INTERVAL_TYPES : Set<SqlTypeName> in class org.apache.calcite.sql.type.SqlTypeName
Change Method Access Modifier	private to package in method package SqlTypeName(signatures int, special boolean, jdbcType int, family SqlTypeFamily) from class org.apache.calcite.sql.type.SqlTypeName
Rename Attribute	INTERVAL_DAY_TIME : SqlTypeName to INTERVAL_DAY_MINUTE : SqlTypeName in class org.apache.calcite.sql.type.SqlTypeName
Change Parameter Type	typeNames : List<SqlTypeName> to typeNames : Collection<SqlTypeName> in method public isOfSameTypeName(typeNames Collection<SqlTypeName>, type RelDataType) : boolean from class org.apache.calcite.sql.type.SqlTypeUtil
Remove Variable Modifier	final in variable unit : TimeUnit in method public convertCall(cx SqlRexContext, call SqlCall) : RexNode from class org.apache.calcite.sql2rel.StandardConvertletTable.TimestampDiffConvertlet
Change Parameter Type	expected : int to expected : Matcher<Integer> in method public checkResultCount(expected Matcher<Integer>) : Function<ResultSet,Void> from class org.apache.calcite.test.CalciteAssert
Developers have reported that 10708 commits involve refactoring but only 375 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 375 commits.

No refactorings detected at b5b9e53ace83397175baa0d7546c03f1cf85b17d

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b39ad26b42f23be18005d
Issue Title: : ProjectPusher should use rel factories when creating new rels, e.g. project/filter
Refactorings at cb356d8af3453b3407af8695693127e740cd06af
Rename Parameter	projectFactory : RelFactories.ProjectFactory to relBuilder : RelBuilder in method public createProject(child RelNode, exprs List<? extends RexNode>, fieldNames List<String>, optimize boolean, relBuilder RelBuilder) : RelNode from class org.apache.calcite.plan.RelOptUtil
Change Parameter Type	projectFactory : RelFactories.ProjectFactory to relBuilder : RelBuilder in method public createProject(child RelNode, exprs List<? extends RexNode>, fieldNames List<String>, optimize boolean, relBuilder RelBuilder) : RelNode from class org.apache.calcite.plan.RelOptUtil
Change Variable Type	origProj : LogicalProject to origProj : Project in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ProjectFilterTransposeRule
Change Variable Type	filter : LogicalFilter to filter : Filter in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ProjectFilterTransposeRule
Change Variable Type	origProj : LogicalProject to origProj : Project in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ProjectJoinTransposeRule
Add Parameter	relFactory : RelBuilderFactory in method public ProjectJoinTransposeRule(preserveExprCondition PushProjector.ExprCondition, relFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.ProjectJoinTransposeRule
Change Variable Type	p : LogicalProject to p : Project in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.ProjectSetOpTransposeRule
Add Parameter	relBuilderFactory : RelBuilderFactory in method public ProjectSetOpTransposeRule(preserveExprCondition PushProjector.ExprCondition, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.ProjectSetOpTransposeRule
Change Attribute Type	origProj : LogicalProject to origProj : Project in class org.apache.calcite.rel.rules.PushProjector
Change Return Type	LogicalProject to Project in method public createProjectRefsAndExprs(projChild RelNode, adjust boolean, rightSide boolean) : Project from class org.apache.calcite.rel.rules.PushProjector
Change Parameter Type	origProj : LogicalProject to origProj : Project in method public PushProjector(origProj Project, origFilter RexNode, childRel RelNode, preserveExprCondition ExprCondition, relBuilder RelBuilder) from class org.apache.calcite.rel.rules.PushProjector
Add Parameter	relBuilder : RelBuilder in method public PushProjector(origProj Project, origFilter RexNode, childRel RelNode, preserveExprCondition ExprCondition, relBuilder RelBuilder) from class org.apache.calcite.rel.rules.PushProjector
Extract Method	public project(nodes Iterable<? extends RexNode>, fieldNames Iterable<String>, force boolean) : RelBuilder extracted from public project(nodes Iterable<? extends RexNode>, fieldNames Iterable<String>) : RelBuilder in class org.apache.calcite.tools.RelBuilder
Developers have reported that 10708 commits involve refactoring but only 376 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 376 commits.

No refactorings detected at a28378237fdaeef66a74476d30b10bcb5999f2b2

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b39cb26b42f23be18013d
Issue Title: : Change visibility of RelFieldTrimmer utility methods
Refactorings at 14ac78229989d416290573a1a8641747df7dd9c8
Change Method Access Modifier	private to protected in method protected result(r RelNode, mapping Mapping) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Method Access Modifier	private to protected in method protected dummyProject(fieldCount int, input RelNode) : TrimResult from class org.apache.calcite.sql2rel.RelFieldTrimmer
Change Method Access Modifier	private to protected in method protected createMapping(fieldsUsed ImmutableBitSet, fieldCount int) : Mapping from class org.apache.calcite.sql2rel.RelFieldTrimmer
Developers have reported that 10708 commits involve refactoring but only 377 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 377 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a0226b42f23be1802a5
Issue Title: : Remove entry from AvaticaConnection.flagMap when session closed
Refactorings at fb6c24adcc49ca83ee92af325a2664475cc00ebc
Change Attribute Access Modifier	private to package in attribute package flagMap : Map<Integer,AtomicBoolean> from class org.apache.calcite.avatica.AvaticaConnection
Developers have reported that 10708 commits involve refactoring but only 378 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 378 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a0e26b42f23be18031b
Issue Title: : Add method ByteString.indexOf(ByteString, int)
Refactorings at 68b78f06233dc0cc7ee98066201e12c46da609a5
Extract Method	public indexOf(seek ByteString, start int) : int extracted from public indexOf(seek ByteString) : int in class org.apache.calcite.avatica.util.ByteString
Developers have reported that 10708 commits involve refactoring but only 379 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 379 commits.

No refactorings detected at 483b9f92359421675a673561c5c317960b6deefb

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a1d26b42f23be1803b4
Issue Title: : Add freemarker templates to parser for "ALTER SYSTEM ..." calls
Refactorings at fea541163cb609b4622972e7b25faa6ac9d60dd0
Rename Method	public unparse(writer SqlWriter, leftPrec int, rightPrec int) : void renamed to protected unparseAlterOperation(writer SqlWriter, leftPrec int, rightPrec int) : void in class org.apache.calcite.sql.SqlSetOption
Change Method Access Modifier	public to protected in method protected unparseAlterOperation(writer SqlWriter, leftPrec int, rightPrec int) : void from class org.apache.calcite.sql.SqlSetOption
Change Method Access Modifier	private to protected in method protected getSqlParser(sql String) : SqlParser from class org.apache.calcite.sql.parser.SqlParserTest
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,PrecedenceClimbingParserTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,DateRangeRulesTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,CollectionTypeTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,PrecedenceClimbingParserTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,ExtensionSqlParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,DateRangeRulesTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,CollectionTypeTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Extract Superclass	org.apache.calcite.sql.SqlAlter from classes [org.apache.calcite.sql.SqlSetOption]
Pull Up Method	public getScope() : String from class org.apache.calcite.sql.SqlSetOption to public getScope() : String from class org.apache.calcite.sql.SqlAlter
Pull Up Method	public setScope(scope String) : void from class org.apache.calcite.sql.SqlSetOption to public setScope(scope String) : void from class org.apache.calcite.sql.SqlAlter
Pull Up Attribute	package scope : String from class org.apache.calcite.sql.SqlSetOption to package scope : String from class org.apache.calcite.sql.SqlAlter
Developers have reported that 10708 commits involve refactoring but only 380 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 380 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a4926b42f23be18048b
Issue Title: : Add a project to the planner root so that rules know which output fields are used
Refactorings at 751e2b0c6d6e19bef7f07b1e0acf1ce491b59311
Remove Parameter Modifier	final in parameter root : RelRoot in method protected optimize(root RelRoot, materializations List<Materialization>, lattices List<CalciteSchema.LatticeEntry>) : RelRoot from class org.apache.calcite.prepare.Prepare
Extract Method	public project(force boolean) : RelNode extracted from public project() : RelNode in class org.apache.calcite.rel.RelRoot
Developers have reported that 10708 commits involve refactoring but only 381 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 381 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a4b26b42f23be18049e
Issue Title: : Add RelBuilder field() method to reference aliased relations not on top of stack
Refactorings at ffe1a68d7d3cc4e382f8f6ce7ce1beb02860f61a
Extract Method	public field(inputCount int, alias String, fieldName String) : RexNode extracted from public field(alias String, fieldName String) : RexNode in class org.apache.calcite.tools.RelBuilder
Developers have reported that 10708 commits involve refactoring but only 382 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 382 commits.

No refactorings detected at d4557f1d775ceb2fa2e3aba9bce3ba880d293d93

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a5626b42f23be180514
Issue Title: : Add RAND function, returning DOUBLE values in the range 0..1
Refactorings at 6f761d367feb1819664f145b9f7732bff5e9c602
Rename Class	org.apache.calcite.sql.fun.SqlRandInteger renamed to org.apache.calcite.sql.fun.SqlRandIntegerFunction
Rename Variable	unit : RelDataType to leftType : RelDataType in method public inferReturnType(opBinding SqlOperatorBinding) : RelDataType from class org.apache.calcite.sql.fun.SqlStdOperatorTable.DATETIME_PLUS.new SqlSpecialOperator
Change Attribute Type	RAND_INTEGER : SqlRandInteger to RAND_INTEGER : SqlRandIntegerFunction in class org.apache.calcite.sql.fun.SqlStdOperatorTable
Rename Method	public testRandomFunc() : void renamed to public testRandIntegerFunc() : void in class org.apache.calcite.sql.test.SqlOperatorBaseTest
Developers have reported that 10708 commits involve refactoring but only 383 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 383 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a5b26b42f23be180537
Issue Title: : Add support for EXPLAIN PLAN AS JSON
Refactorings at accc059c72d7b364b9857eb51c2b384465ebd73c
Extract Method	public dumpPlan(header String, rel RelNode, format SqlExplainFormat, detailLevel SqlExplainLevel) : String extracted from public dumpPlan(header String, rel RelNode, asXml boolean, detailLevel SqlExplainLevel) : String in class org.apache.calcite.plan.RelOptUtil
Add Method Annotation	@Deprecated in method public dumpPlan(header String, rel RelNode, asXml boolean, detailLevel SqlExplainLevel) : String from class org.apache.calcite.plan.RelOptUtil
Change Parameter Type	explainAsXml : boolean to format : SqlExplainFormat in method protected createPreparedExplanation(resultType RelDataType, parameterRowType RelDataType, root RelRoot, format SqlExplainFormat, detailLevel SqlExplainLevel) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Rename Parameter	explainAsXml : boolean to format : SqlExplainFormat in method protected createPreparedExplanation(resultType RelDataType, parameterRowType RelDataType, root RelRoot, format SqlExplainFormat, detailLevel SqlExplainLevel) : PreparedResult from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparingStmt
Change Parameter Type	explainAsXml : boolean to format : SqlExplainFormat in method public CalcitePreparedExplain(resultType RelDataType, parameterRowType RelDataType, root RelRoot, format SqlExplainFormat, detailLevel SqlExplainLevel) from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparedExplain
Rename Parameter	explainAsXml : boolean to format : SqlExplainFormat in method public CalcitePreparedExplain(resultType RelDataType, parameterRowType RelDataType, root RelRoot, format SqlExplainFormat, detailLevel SqlExplainLevel) from class org.apache.calcite.prepare.CalcitePrepareImpl.CalcitePreparedExplain
Change Parameter Type	asXml : boolean to format : SqlExplainFormat in method public PreparedExplain(rowType RelDataType, parameterRowType RelDataType, root RelRoot, format SqlExplainFormat, detailLevel SqlExplainLevel) from class org.apache.calcite.prepare.Prepare.PreparedExplain
Rename Parameter	asXml : boolean to format : SqlExplainFormat in method public PreparedExplain(rowType RelDataType, parameterRowType RelDataType, root RelRoot, format SqlExplainFormat, detailLevel SqlExplainLevel) from class org.apache.calcite.prepare.Prepare.PreparedExplain
Rename Attribute	asXml : boolean to format : SqlExplainFormat in class org.apache.calcite.prepare.Prepare.PreparedExplain
Change Attribute Type	asXml : boolean to format : SqlExplainFormat in class org.apache.calcite.prepare.Prepare.PreparedExplain
Inline Variable	detailLevel : SqlExplainLevel in method public prepareSql(sqlQuery SqlNode, sqlNodeOriginal SqlNode, runtimeContextClass Class, validator SqlValidator, needsValidation boolean) : PreparedResult from class org.apache.calcite.prepare.Prepare
Rename Parameter	asXml : SqlLiteral to format : SqlLiteral in method public SqlExplain(pos SqlParserPos, explicandum SqlNode, detailLevel SqlLiteral, depth SqlLiteral, format SqlLiteral, dynamicParameterCount int) from class org.apache.calcite.sql.SqlExplain
Add Method Annotation	@Deprecated in method public isXml() : boolean from class org.apache.calcite.sql.SqlExplain
Rename Attribute	asXml : SqlLiteral to format : SqlLiteral in class org.apache.calcite.sql.SqlExplain
Rename Parameter	explainAsXml : boolean to format : SqlExplainFormat in method protected abstract createPreparedExplanation(resultType RelDataType, parameterRowType RelDataType, root RelRoot, format SqlExplainFormat, detailLevel SqlExplainLevel) : PreparedResult from class org.apache.calcite.prepare.Prepare
Change Parameter Type	explainAsXml : boolean to format : SqlExplainFormat in method protected abstract createPreparedExplanation(resultType RelDataType, parameterRowType RelDataType, root RelRoot, format SqlExplainFormat, detailLevel SqlExplainLevel) : PreparedResult from class org.apache.calcite.prepare.Prepare
Developers have reported that 10708 commits involve refactoring but only 384 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 384 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a6626b42f23be180587
Issue Title: : Add rules to flatten and prune Intersect and Minus
Refactorings at 9f44aea5b3168f8372717daa29021aca2030cd65
Add Variable Modifier	final in variable union : LogicalUnion in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.PruneEmptyRules.UNION_INSTANCE.new RelOptRule
Change Variable Type	topUnion : Union to topOp : SetOp in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.UnionMergeRule
Change Variable Type	bottomUnion : Union to bottomOp : SetOp in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.UnionMergeRule
Rename Variable	topUnion : Union to topOp : SetOp in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.UnionMergeRule
Rename Variable	bottomUnion : Union to bottomOp : SetOp in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.UnionMergeRule
Change Parameter Type	unionClazz : Class<? extends Union> to unionClazz : Class<? extends SetOp> in method public UnionMergeRule(unionClazz Class<? extends SetOp>, description String, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.UnionMergeRule
Add Parameter	description : String in method public UnionMergeRule(unionClazz Class<? extends SetOp>, description String, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.UnionMergeRule
Extract Method	public minus(all boolean, n int) : RelBuilder extracted from public minus(all boolean) : RelBuilder in class org.apache.calcite.tools.RelBuilder
Developers have reported that 10708 commits involve refactoring but only 385 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 385 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a7426b42f23be1805f5
Issue Title: : AssertionError in ReduceExpressionsRule on multi-column IN sub-query
Refactorings at 03d6b00cdadb1b7dd4e4ae6de370c7f4bf5e2207
Add Method Annotation	@Override in method public visitInputRef(inputRef RexInputRef) : Void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Add Method Annotation	@Override in method public visitLiteral(literal RexLiteral) : Void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Add Method Annotation	@Override in method public visitOver(over RexOver) : Void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Rename Parameter	correlVariable : RexCorrelVariable to variable : RexCorrelVariable in method public visitCorrelVariable(variable RexCorrelVariable) : Void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Add Method Annotation	@Override in method public visitCorrelVariable(variable RexCorrelVariable) : Void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Add Method Annotation	@Override in method public visitCall(call RexCall) : Void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Add Method Annotation	@Override in method public visitDynamicParam(dynamicParam RexDynamicParam) : Void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Add Method Annotation	@Override in method public visitRangeRef(rangeRef RexRangeRef) : Void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Add Method Annotation	@Override in method public visitFieldAccess(fieldAccess RexFieldAccess) : Void from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ReducibleExprLocator
Developers have reported that 10708 commits involve refactoring but only 386 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 386 commits.

No refactorings detected at 9266d8ee224cac6013ca799dbb8cdc5a2054b657

No refactorings detected at f28b6235998689efdcd746f47cf55dff620ffb15

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a8826b42f23be1806c2
Issue Title: : Implement INTERSECT DISTINCT by rewriting to UNION ALL and counting
Refactorings at 76fef36cb6464c2790ed0385359a7f9db70457c6
Remove Method Annotation	@Ignore in method public testIntersect() : void from class org.apache.calcite.test.JdbcFrontLinqBackTest
Developers have reported that 10708 commits involve refactoring but only 387 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 387 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a8926b42f23be1806db
Issue Title: : Support CREATE TABLE in tests (and only in tests)
Refactorings at e641211fd72a4f4a24f0f4644034c4b2f3c040ca
Extract Variable	parserConfig : SqlParser.ConfigBuilder in method package prepare2_(context Context, query Query<T>, elementType Type, maxRowCount long, catalogReader CalciteCatalogReader, planner RelOptPlanner) : CalciteSignature<T> from class org.apache.calcite.prepare.CalcitePrepareImpl
Encapsulate Attribute	private nullable : Boolean from class org.apache.calcite.sql.SqlDataTypeSpec
Extract Method	public deriveType(typeFactory RelDataTypeFactory, nullable boolean) : RelDataType extracted from public deriveType(typeFactory RelDataTypeFactory) : RelDataType in class org.apache.calcite.sql.SqlDataTypeSpec
Add Variable Modifier	final in variable name : String in method public deriveType(typeFactory RelDataTypeFactory, nullable boolean) : RelDataType from class org.apache.calcite.sql.SqlDataTypeSpec
Add Variable Modifier	final in variable sqlTypeName : SqlTypeName in method public deriveType(typeFactory RelDataTypeFactory, nullable boolean) : RelDataType from class org.apache.calcite.sql.SqlDataTypeSpec
Add Variable Modifier	final in variable collectionsSqlTypeName : SqlTypeName in method public deriveType(typeFactory RelDataTypeFactory, nullable boolean) : RelDataType from class org.apache.calcite.sql.SqlDataTypeSpec
Change Class Access Modifier	private to protected in class org.apache.calcite.sql.parser.SqlParserTest.Sql
Developers have reported that 10708 commits involve refactoring but only 388 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 388 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a8f26b42f23be180711
Issue Title: : Improve RelNode validation
Refactorings at 70b8325130bc6be953e5a9a0ce99f9e0c383268b
Rename Method	public isValid_(litmus Litmus, context Context) : boolean renamed to public isValid(litmus Litmus, context Context) : boolean in class org.apache.calcite.rel.core.Join
Add Method Annotation	@Override in method public isValid(litmus Litmus, context Context) : boolean from class org.apache.calcite.rel.core.Join
Change Variable Type	map : Map<String,SqlValidatorNamespace> to map : Map<String,ScopeChild> in method public fullyQualify(identifier SqlIdentifier) : SqlQualified from class org.apache.calcite.sql.validate.DelegatingScope
Change Variable Type	entry : Map.Entry<String,SqlValidatorNamespace> to entry : Map.Entry<String,ScopeChild> in method public fullyQualify(identifier SqlIdentifier) : SqlQualified from class org.apache.calcite.sql.validate.DelegatingScope
Change Return Type	Map<String,SqlValidatorNamespace> to Map<String,ScopeChild> in method protected findQualifyingTables(columnName String) : Map<String,ScopeChild> from class org.apache.calcite.sql.validate.DelegatingScope
Add Parameter	nullable : boolean in method public addChild(ns SqlValidatorNamespace, alias String, nullable boolean) : void from class org.apache.calcite.sql.validate.DelegatingScope
Add Method Annotation	@Override in method public addChild(ns SqlValidatorNamespace, alias String, nullable boolean) : void from class org.apache.calcite.sql.validate.DelegatingScope
Add Parameter	nullable : boolean in method package resolveInNamespace(ns SqlValidatorNamespace, nullable boolean, names List<String>, path Path, resolved Resolved) : void from class org.apache.calcite.sql.validate.DelegatingScope
Add Parameter	nullable : boolean in method public addChild(ns SqlValidatorNamespace, alias String, nullable boolean) : void from class org.apache.calcite.sql.validate.EmptyScope
Add Parameter	nullable : boolean in method public addChild(ns SqlValidatorNamespace, alias String, nullable boolean) : void from class org.apache.calcite.sql.validate.JoinScope
Change Attribute Type	children : List<Pair<String,SqlValidatorNamespace>> to children : List<ScopeChild> in class org.apache.calcite.sql.validate.ListScope
Change Attribute Access Modifier	protected to public in attribute public children : List<ScopeChild> from class org.apache.calcite.sql.validate.ListScope
Change Variable Type	child : Ord<Pair<String,SqlValidatorNamespace>> to child : ScopeChild in method private findChild(names List<String>) : int from class org.apache.calcite.sql.validate.ListScope
Change Variable Type	pair : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public findAllColumnNames(result List<SqlMoniker>) : void from class org.apache.calcite.sql.validate.ListScope
Rename Variable	pair : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public findAllColumnNames(result List<SqlMoniker>) : void from class org.apache.calcite.sql.validate.ListScope
Change Variable Type	pair : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public findAliases(result Collection<SqlMoniker>) : void from class org.apache.calcite.sql.validate.ListScope
Rename Variable	pair : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public findAliases(result Collection<SqlMoniker>) : void from class org.apache.calcite.sql.validate.ListScope
Extract Variable	entry : Map.Entry<String,ScopeChild> in method public findQualifyingTableName(columnName String, ctx SqlNode) : Pair<String,SqlValidatorNamespace> from class org.apache.calcite.sql.validate.ListScope
Change Variable Type	map : Map<String,SqlValidatorNamespace> to map : Map<String,ScopeChild> in method public findQualifyingTableName(columnName String, ctx SqlNode) : Pair<String,SqlValidatorNamespace> from class org.apache.calcite.sql.validate.ListScope
Change Variable Type	child : Ord<Pair<String,SqlValidatorNamespace>> to child : ScopeChild in method public resolve(names List<String>, deep boolean, resolved Resolved) : void from class org.apache.calcite.sql.validate.ListScope
Change Variable Type	pair : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public resolveColumn(columnName String, ctx SqlNode) : RelDataType from class org.apache.calcite.sql.validate.ListScope
Rename Variable	pair : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public resolveColumn(columnName String, ctx SqlNode) : RelDataType from class org.apache.calcite.sql.validate.ListScope
Change Variable Type	map : Map<String,SqlValidatorNamespace> to map : Map<String,ScopeChild> in method public findQualifyingTables(columnName String) : Map<String,ScopeChild> from class org.apache.calcite.sql.validate.ListScope
Change Variable Type	child : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public findQualifyingTables(columnName String) : Map<String,ScopeChild> from class org.apache.calcite.sql.validate.ListScope
Change Return Type	Map<String,SqlValidatorNamespace> to Map<String,ScopeChild> in method public findQualifyingTables(columnName String) : Map<String,ScopeChild> from class org.apache.calcite.sql.validate.ListScope
Change Variable Type	p : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method private expandStar(selectItems List<SqlNode>, aliases Set<String>, types List<Map.Entry<String,RelDataType>>, includeSystemVars boolean, scope SelectScope, node SqlNode) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Rename Variable	p : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method private expandStar(selectItems List<SqlNode>, aliases Set<String>, types List<Map.Entry<String,RelDataType>>, includeSystemVars boolean, scope SelectScope, node SqlNode) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Variable Type	p : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method private registerFrom(parentScope SqlValidatorScope, usingScope SqlValidatorScope, node SqlNode, enclosingNode SqlNode, alias String, extendList SqlNodeList, forceNullable boolean) : SqlNode from class org.apache.calcite.sql.validate.SqlValidatorImpl
Rename Variable	p : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method private registerFrom(parentScope SqlValidatorScope, usingScope SqlValidatorScope, node SqlNode, enclosingNode SqlNode, alias String, extendList SqlNodeList, forceNullable boolean) : SqlNode from class org.apache.calcite.sql.validate.SqlValidatorImpl
Inline Variable	children : List<Pair<String,SqlValidatorNamespace>> in method protected validateSelect(select SqlSelect, targetRowType RelDataType) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Variable Type	fromScope : SqlValidatorScope to fromScope : SelectScope in method protected validateSelect(select SqlSelect, targetRowType RelDataType) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Variable Type	child : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method protected validateSelect(select SqlSelect, targetRowType RelDataType) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Variable Type	namespace : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public validateModality(select SqlSelect, modality SqlModality, fail boolean) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Variable Type	namespace : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public validateModality(select SqlSelect, modality SqlModality, fail boolean) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Variable Type	namespace : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public validateModality(select SqlSelect, modality SqlModality, fail boolean) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Variable Type	namespace : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public validateModality(select SqlSelect, modality SqlModality, fail boolean) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Variable Type	namespace : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public validateModality(select SqlSelect, modality SqlModality, fail boolean) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Rename Variable	namespace : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public validateModality(select SqlSelect, modality SqlModality, fail boolean) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Rename Variable	namespace : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public validateModality(select SqlSelect, modality SqlModality, fail boolean) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Rename Variable	namespace : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public validateModality(select SqlSelect, modality SqlModality, fail boolean) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Rename Variable	namespace : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public validateModality(select SqlSelect, modality SqlModality, fail boolean) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Rename Variable	namespace : Pair<String,SqlValidatorNamespace> to child : ScopeChild in method public validateModality(select SqlSelect, modality SqlModality, fail boolean) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Method Annotation	@Deprecated in method public makeNullable() : void from class org.apache.calcite.sql.validate.SqlValidatorNamespace
Add Parameter	nullable : boolean in method public found(namespace SqlValidatorNamespace, nullable boolean, scope SqlValidatorScope, path Path) : void from class org.apache.calcite.sql.validate.SqlValidatorScope.ResolvedImpl
Add Parameter	nullable : boolean in method package Resolve(namespace SqlValidatorNamespace, nullable boolean, scope SqlValidatorScope, path Path) from class org.apache.calcite.sql.validate.SqlValidatorScope.Resolve
Add Parameter	nullable : boolean in method public addChild(ns SqlValidatorNamespace, alias String, nullable boolean) : void from class org.apache.calcite.sql.validate.TableScope
Add Method Annotation	@Ignore("[CALCITE-1045]") in method public testExpandJoinIn() : void from class org.apache.calcite.test.RelOptRulesTest
Add Method Annotation	@Ignore("[CALCITE-1045]") in method public testExpandJoinInComposite() : void from class org.apache.calcite.test.RelOptRulesTest
Add Parameter	nullable : boolean in method public addChild(ns SqlValidatorNamespace, alias String, nullable boolean) : void from class org.apache.calcite.sql.validate.ListScope
Add Method Annotation	@Override in method public addChild(ns SqlValidatorNamespace, alias String, nullable boolean) : void from class org.apache.calcite.sql.validate.ListScope
Add Parameter	nullable : boolean in method public found(namespace SqlValidatorNamespace, nullable boolean, scope SqlValidatorScope, path Path) : void from class org.apache.calcite.sql.validate.SqlValidatorScope.Resolved
Add Parameter	nullable : boolean in method public addChild(ns SqlValidatorNamespace, alias String, nullable boolean) : void from class org.apache.calcite.sql.validate.SqlValidatorScope
Developers have reported that 10708 commits involve refactoring but only 389 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 389 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a8f26b42f23be180711
Issue Title: : Improve RelNode validation
Refactorings at 3f261072c96a3c5042b2987c35880826f0a47a00
Add Parameter	context : Context in method public isValid(litmus Litmus, context Context) : boolean from class org.apache.calcite.rel.AbstractRelNode
Add Parameter	context : Context in method public isValid(litmus Litmus, context Context) : boolean from class org.apache.calcite.rel.core.Aggregate
Add Parameter	context : Context in method public isValid(litmus Litmus, context Context) : boolean from class org.apache.calcite.rel.core.Calc
Add Parameter	context : Context in method public isValid(litmus Litmus, context Context) : boolean from class org.apache.calcite.rel.core.Correlate
Add Parameter	context : Context in method public isValid(litmus Litmus, context Context) : boolean from class org.apache.calcite.rel.core.Filter
Add Parameter	context : Context in method public isValid_(litmus Litmus, context Context) : boolean from class org.apache.calcite.rel.core.Join
Add Parameter	context : Context in method public isValid(litmus Litmus, context Context) : boolean from class org.apache.calcite.rel.core.Project
Add Parameter	context : Context in method public isValid(litmus Litmus, context Context) : boolean from class org.apache.calcite.rel.core.Window
Add Method Annotation	@Override in method public visitInputRef(ref RexInputRef) : Boolean from class org.apache.calcite.rex.RexChecker
Add Method Annotation	@Override in method public visitLocalRef(ref RexLocalRef) : Boolean from class org.apache.calcite.rex.RexChecker
Add Method Annotation	@Override in method public visitCall(call RexCall) : Boolean from class org.apache.calcite.rex.RexChecker
Add Method Annotation	@Override in method public visitFieldAccess(fieldAccess RexFieldAccess) : Boolean from class org.apache.calcite.rex.RexChecker
Add Parameter	context : RelNode.Context in method public RexChecker(inputRowType RelDataType, context RelNode.Context, litmus Litmus) from class org.apache.calcite.rex.RexChecker
Add Parameter	context : RelNode.Context in method public RexChecker(inputTypeList List<RelDataType>, context RelNode.Context, litmus Litmus) from class org.apache.calcite.rex.RexChecker
Add Method Annotation	@Override in method public visitLocalRef(localRef RexLocalRef) : Boolean from class org.apache.calcite.rex.RexProgram.Checker
Add Parameter	context : RelNode.Context in method public Checker(inputRowType RelDataType, internalExprTypeList List<RelDataType>, context RelNode.Context, litmus Litmus) from class org.apache.calcite.rex.RexProgram.Checker
Reorder Parameter	[litmus : Litmus, inputRowType : RelDataType, internalExprTypeList : List<RelDataType>] to [inputRowType : RelDataType, internalExprTypeList : List<RelDataType>, context : RelNode.Context, litmus : Litmus] in method public Checker(inputRowType RelDataType, internalExprTypeList List<RelDataType>, context RelNode.Context, litmus Litmus) from class org.apache.calcite.rex.RexProgram.Checker
Add Parameter	context : RelNode.Context in method public isValid(litmus Litmus, context RelNode.Context) : boolean from class org.apache.calcite.rex.RexProgram
Add Parameter	context : Context in method public isValid(litmus Litmus, context Context) : boolean from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	context : Context in method public isValid(litmus Litmus, context Context) : boolean from class org.apache.calcite.rel.RelNode
Developers have reported that 10708 commits involve refactoring but only 390 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 390 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a9926b42f23be18076e
Issue Title: : Create a Shuttle for visiting linq4j expressions without mutating them
Refactorings at 267e2f3e1db71e678f80bb69015164c0d45bcfe4
Rename Class	org.apache.calcite.linq4j.tree.OptimizeVisitor renamed to org.apache.calcite.linq4j.tree.OptimizeShuttle
Change Return Type	Expression to Void in method public visit(newExpression NewExpression) : Void from class org.apache.calcite.adapter.enumerable.EnumerableRelImplementor.TypeFinder
Remove Parameter	arguments : List<Expression> in method public visit(newExpression NewExpression, arguments List<Expression>, memberDeclarations List<MemberDeclaration>) : Expression from class org.apache.calcite.adapter.enumerable.EnumerableRelImplementor.TypeFinder
Remove Parameter	memberDeclarations : List<MemberDeclaration> in method public visit(newExpression NewExpression, arguments List<Expression>, memberDeclarations List<MemberDeclaration>) : Expression from class org.apache.calcite.adapter.enumerable.EnumerableRelImplementor.TypeFinder
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Node from class org.apache.calcite.linq4j.tree.AbstractNode
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Node from class org.apache.calcite.linq4j.tree.AbstractNode
Change Parameter Type	visitor : Visitor to visitor : Shuttle in method public accept(visitor Shuttle) : Expression from class org.apache.calcite.linq4j.tree.BinaryExpression
Change Return Type	Expression to Void in method public visit(parameter ParameterExpression) : Void from class org.apache.calcite.linq4j.tree.BlockBuilder.UseCounter
Rename Method	protected createFinishingOptimizeVisitor() : Visitor renamed to protected createFinishingOptimizeShuttle() : Shuttle in class org.apache.calcite.linq4j.tree.BlockBuilder
Change Variable Type	visitor : Visitor to shuttle : Shuttle in method public append(name String, block BlockStatement, optimize boolean) : Expression from class org.apache.calcite.linq4j.tree.BlockBuilder
Rename Variable	visitor : Visitor to shuttle : Shuttle in method public append(name String, block BlockStatement, optimize boolean) : Expression from class org.apache.calcite.linq4j.tree.BlockBuilder
Change Parameter Type	optimizer : Visitor to optimizer : Shuttle in method private optimize(optimizer Shuttle, performInline boolean) : boolean from class org.apache.calcite.linq4j.tree.BlockBuilder
Change Return Type	Visitor to Shuttle in method protected createFinishingOptimizeShuttle() : Shuttle from class org.apache.calcite.linq4j.tree.BlockBuilder
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : BlockStatement from class org.apache.calcite.linq4j.tree.BlockStatement
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : BlockStatement from class org.apache.calcite.linq4j.tree.BlockStatement
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : ClassDeclaration from class org.apache.calcite.linq4j.tree.ClassDeclaration
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : ClassDeclaration from class org.apache.calcite.linq4j.tree.ClassDeclaration
Change Return Type	Visitor to Shuttle in method public preVisit(newExpression NewExpression) : Shuttle from class org.apache.calcite.linq4j.tree.ClassDeclarationFinder
Change Return Type	Visitor to Shuttle in method public preVisit(classDeclaration ClassDeclaration) : Shuttle from class org.apache.calcite.linq4j.tree.ClassDeclarationFinder
Change Attribute Access Modifier	private to package in attribute package expressionList : List<Node> from class org.apache.calcite.linq4j.tree.ConditionalExpression
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.ConditionalStatement
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.ConditionalStatement
Change Parameter Type	visitor : Visitor to visitor : Visitor<R> in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.ConstantExpression
Change Return Type	Expression to R in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.ConstantExpression
Remove Method Annotation	@Override in method public accept(visitor Visitor) : Expression from class org.apache.calcite.linq4j.tree.ConstantExpression
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : MemberDeclaration from class org.apache.calcite.linq4j.tree.ConstructorDeclaration
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : MemberDeclaration from class org.apache.calcite.linq4j.tree.ConstructorDeclaration
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : DeclarationStatement from class org.apache.calcite.linq4j.tree.DeclarationStatement
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : DeclarationStatement from class org.apache.calcite.linq4j.tree.DeclarationStatement
Change Parameter Type	visitor : Visitor to visitor : Visitor<R> in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.DefaultExpression
Change Return Type	Expression to R in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.DefaultExpression
Remove Method Annotation	@Override in method public accept(visitor Visitor) : Expression from class org.apache.calcite.linq4j.tree.DefaultExpression
Change Parameter Type	visitor : Visitor to visitor : Visitor<R> in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.DynamicExpression
Change Return Type	Expression to R in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.DynamicExpression
Remove Method Annotation	@Override in method public accept(visitor Visitor) : Expression from class org.apache.calcite.linq4j.tree.DynamicExpression
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method package accept(node T, shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.Expressions
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method package accept(node T, shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.Expressions
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method package accept(node T, shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.Expressions
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method package accept(node T, shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.Expressions
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method package acceptStatements(statements List<Statement>, shuttle Shuttle) : List<Statement> from class org.apache.calcite.linq4j.tree.Expressions
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method package acceptStatements(statements List<Statement>, shuttle Shuttle) : List<Statement> from class org.apache.calcite.linq4j.tree.Expressions
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method package acceptNodes(nodes List<Node>, shuttle Shuttle) : List<Node> from class org.apache.calcite.linq4j.tree.Expressions
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method package acceptNodes(nodes List<Node>, shuttle Shuttle) : List<Node> from class org.apache.calcite.linq4j.tree.Expressions
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method package acceptParameterExpressions(parameterExpressions List<ParameterExpression>, shuttle Shuttle) : List<Expression> from class org.apache.calcite.linq4j.tree.Expressions
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method package acceptParameterExpressions(parameterExpressions List<ParameterExpression>, shuttle Shuttle) : List<Expression> from class org.apache.calcite.linq4j.tree.Expressions
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method package acceptDeclarations(declarations List<DeclarationStatement>, shuttle Shuttle) : List<DeclarationStatement> from class org.apache.calcite.linq4j.tree.Expressions
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method package acceptDeclarations(declarations List<DeclarationStatement>, shuttle Shuttle) : List<DeclarationStatement> from class org.apache.calcite.linq4j.tree.Expressions
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method package acceptMemberDeclarations(memberDeclarations List<MemberDeclaration>, shuttle Shuttle) : List<MemberDeclaration> from class org.apache.calcite.linq4j.tree.Expressions
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method package acceptMemberDeclarations(memberDeclarations List<MemberDeclaration>, shuttle Shuttle) : List<MemberDeclaration> from class org.apache.calcite.linq4j.tree.Expressions
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method package acceptExpressions(expressions List<Expression>, shuttle Shuttle) : List<Expression> from class org.apache.calcite.linq4j.tree.Expressions
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method package acceptExpressions(expressions List<Expression>, shuttle Shuttle) : List<Expression> from class org.apache.calcite.linq4j.tree.Expressions
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : MemberDeclaration from class org.apache.calcite.linq4j.tree.FieldDeclaration
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : MemberDeclaration from class org.apache.calcite.linq4j.tree.FieldDeclaration
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : ForStatement from class org.apache.calcite.linq4j.tree.ForStatement
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : ForStatement from class org.apache.calcite.linq4j.tree.ForStatement
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.FunctionExpression
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.FunctionExpression
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.GotoStatement
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.GotoStatement
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.IndexExpression
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.IndexExpression
Change Parameter Type	visitor : Visitor to visitor : Visitor<R> in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.InvocationExpression
Change Return Type	Expression to R in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.InvocationExpression
Remove Method Annotation	@Override in method public accept(visitor Visitor) : Expression from class org.apache.calcite.linq4j.tree.InvocationExpression
Change Parameter Type	visitor : Visitor to visitor : Visitor<R> in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.LabelStatement
Change Return Type	LabelStatement to R in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.LabelStatement
Remove Method Annotation	@Override in method public accept(visitor Visitor) : LabelStatement from class org.apache.calcite.linq4j.tree.LabelStatement
Change Parameter Type	visitor : Visitor to visitor : Visitor<R> in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.LambdaExpression
Change Return Type	Expression to R in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.LambdaExpression
Remove Method Annotation	@Override in method public accept(visitor Visitor) : Expression from class org.apache.calcite.linq4j.tree.LambdaExpression
Change Parameter Type	visitor : Visitor to visitor : Visitor<R> in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.ListInitExpression
Change Return Type	Expression to R in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.ListInitExpression
Remove Method Annotation	@Override in method public accept(visitor Visitor) : Expression from class org.apache.calcite.linq4j.tree.ListInitExpression
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.MemberExpression
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.MemberExpression
Change Parameter Type	visitor : Visitor to visitor : Visitor<R> in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.MemberInitExpression
Change Return Type	Expression to R in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.MemberInitExpression
Remove Method Annotation	@Override in method public accept(visitor Visitor) : Expression from class org.apache.calcite.linq4j.tree.MemberInitExpression
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.MethodCallExpression
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.MethodCallExpression
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : MemberDeclaration from class org.apache.calcite.linq4j.tree.MethodDeclaration
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : MemberDeclaration from class org.apache.calcite.linq4j.tree.MethodDeclaration
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.NewArrayExpression
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.NewArrayExpression
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.NewExpression
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.NewExpression
Change Parameter Type	visitor : Visitor to visitor : Visitor<R> in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.ParameterExpression
Change Return Type	Expression to R in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.ParameterExpression
Remove Method Annotation	@Override in method public accept(visitor Visitor) : Expression from class org.apache.calcite.linq4j.tree.ParameterExpression
Change Parameter Type	visitor : Visitor to visitor : Visitor<R> in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.SwitchStatement
Change Return Type	Statement to R in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.SwitchStatement
Remove Method Annotation	@Override in method public accept(visitor Visitor) : Statement from class org.apache.calcite.linq4j.tree.SwitchStatement
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.TernaryExpression
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.TernaryExpression
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.ThrowStatement
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.ThrowStatement
Change Parameter Type	visitor : Visitor to visitor : Visitor<R> in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.TryStatement
Change Return Type	Statement to R in method public accept(visitor Visitor<R>) : R from class org.apache.calcite.linq4j.tree.TryStatement
Remove Method Annotation	@Override in method public accept(visitor Visitor) : Statement from class org.apache.calcite.linq4j.tree.TryStatement
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.TypeBinaryExpression
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.TypeBinaryExpression
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.UnaryExpression
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.UnaryExpression
Change Type Declaration Kind	class to interface in type org.apache.calcite.linq4j.tree.Visitor
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.WhileStatement
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.WhileStatement
Extract Superclass	org.apache.calcite.linq4j.tree.Shuttle from classes [org.apache.calcite.linq4j.tree.BlockBuilder.SubstituteVariableVisitor, org.apache.calcite.linq4j.tree.ClassDeclarationFinder, org.apache.calcite.linq4j.tree.OptimizeVisitor]
Extract Superclass	org.apache.calcite.linq4j.tree.VisitorImpl from classes [org.apache.calcite.adapter.enumerable.EnumerableRelImplementor.TypeFinder, org.apache.calcite.linq4j.tree.BlockBuilder.UseCounter]
Extract Class	org.apache.calcite.linq4j.tree.Shuttle from class org.apache.calcite.linq4j.tree.Visitor
Move Method	public visit(whileStatement WhileStatement, condition Expression, body Statement) : Statement from class org.apache.calcite.linq4j.tree.Visitor to public visit(whileStatement WhileStatement, condition Expression, body Statement) : Statement from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(conditionalStatement ConditionalStatement, list List<Node>) : Statement from class org.apache.calcite.linq4j.tree.Visitor to public visit(conditionalStatement ConditionalStatement, list List<Node>) : Statement from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(blockStatement BlockStatement, statements List<Statement>) : BlockStatement from class org.apache.calcite.linq4j.tree.Visitor to public visit(blockStatement BlockStatement, statements List<Statement>) : BlockStatement from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(gotoStatement GotoStatement, expression Expression) : Statement from class org.apache.calcite.linq4j.tree.Visitor to public visit(gotoStatement GotoStatement, expression Expression) : Statement from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(labelStatement LabelStatement) : LabelStatement from class org.apache.calcite.linq4j.tree.Visitor to public visit(labelStatement LabelStatement) : LabelStatement from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(forStatement ForStatement, declarations List<DeclarationStatement>, condition Expression, post Expression, body Statement) : ForStatement from class org.apache.calcite.linq4j.tree.Visitor to public visit(forStatement ForStatement, declarations List<DeclarationStatement>, condition Expression, post Expression, body Statement) : ForStatement from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(throwStatement ThrowStatement, expression Expression) : Statement from class org.apache.calcite.linq4j.tree.Visitor to public visit(throwStatement ThrowStatement, expression Expression) : Statement from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(declarationStatement DeclarationStatement, initializer Expression) : DeclarationStatement from class org.apache.calcite.linq4j.tree.Visitor to public visit(declarationStatement DeclarationStatement, initializer Expression) : DeclarationStatement from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(lambdaExpression LambdaExpression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(lambdaExpression LambdaExpression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(functionExpression FunctionExpression, body BlockStatement) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(functionExpression FunctionExpression, body BlockStatement) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(binaryExpression BinaryExpression, expression0 Expression, expression1 Expression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(binaryExpression BinaryExpression, expression0 Expression, expression1 Expression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(ternaryExpression TernaryExpression, expression0 Expression, expression1 Expression, expression2 Expression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(ternaryExpression TernaryExpression, expression0 Expression, expression1 Expression, expression2 Expression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(indexExpression IndexExpression, array Expression, indexExpressions List<Expression>) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(indexExpression IndexExpression, array Expression, indexExpressions List<Expression>) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(unaryExpression UnaryExpression, expression Expression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(unaryExpression UnaryExpression, expression Expression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(methodCallExpression MethodCallExpression, targetExpression Expression, expressions List<Expression>) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(methodCallExpression MethodCallExpression, targetExpression Expression, expressions List<Expression>) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(defaultExpression DefaultExpression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(defaultExpression DefaultExpression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(dynamicExpression DynamicExpression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(dynamicExpression DynamicExpression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(memberExpression MemberExpression, expression Expression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(memberExpression MemberExpression, expression Expression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(invocationExpression InvocationExpression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(invocationExpression InvocationExpression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(newArrayExpression NewArrayExpression, dimension int, bound Expression, expressions List<Expression>) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(newArrayExpression NewArrayExpression, dimension int, bound Expression, expressions List<Expression>) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(listInitExpression ListInitExpression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(listInitExpression ListInitExpression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(newExpression NewExpression, arguments List<Expression>, memberDeclarations List<MemberDeclaration>) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(newExpression NewExpression, arguments List<Expression>, memberDeclarations List<MemberDeclaration>) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(switchStatement SwitchStatement) : Statement from class org.apache.calcite.linq4j.tree.Visitor to public visit(switchStatement SwitchStatement) : Statement from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(tryStatement TryStatement) : Statement from class org.apache.calcite.linq4j.tree.Visitor to public visit(tryStatement TryStatement) : Statement from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(memberInitExpression MemberInitExpression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(memberInitExpression MemberInitExpression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(typeBinaryExpression TypeBinaryExpression, expression Expression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(typeBinaryExpression TypeBinaryExpression, expression Expression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(methodDeclaration MethodDeclaration, body BlockStatement) : MemberDeclaration from class org.apache.calcite.linq4j.tree.Visitor to public visit(methodDeclaration MethodDeclaration, body BlockStatement) : MemberDeclaration from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(fieldDeclaration FieldDeclaration, initializer Expression) : MemberDeclaration from class org.apache.calcite.linq4j.tree.Visitor to public visit(fieldDeclaration FieldDeclaration, initializer Expression) : MemberDeclaration from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(parameterExpression ParameterExpression) : Expression from class org.apache.calcite.linq4j.tree.Visitor to public visit(parameterExpression ParameterExpression) : Expression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(constantExpression ConstantExpression) : ConstantExpression from class org.apache.calcite.linq4j.tree.Visitor to public visit(constantExpression ConstantExpression) : ConstantExpression from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(classDeclaration ClassDeclaration, memberDeclarations List<MemberDeclaration>) : ClassDeclaration from class org.apache.calcite.linq4j.tree.Visitor to public visit(classDeclaration ClassDeclaration, memberDeclarations List<MemberDeclaration>) : ClassDeclaration from class org.apache.calcite.linq4j.tree.Shuttle
Move Method	public visit(constructorDeclaration ConstructorDeclaration, body BlockStatement) : MemberDeclaration from class org.apache.calcite.linq4j.tree.Visitor to public visit(constructorDeclaration ConstructorDeclaration, body BlockStatement) : MemberDeclaration from class org.apache.calcite.linq4j.tree.Shuttle
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public abstract accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.Expression
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public abstract accept(shuttle Shuttle) : Expression from class org.apache.calcite.linq4j.tree.Expression
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public abstract accept(shuttle Shuttle) : MemberDeclaration from class org.apache.calcite.linq4j.tree.MemberDeclaration
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public abstract accept(shuttle Shuttle) : MemberDeclaration from class org.apache.calcite.linq4j.tree.MemberDeclaration
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Node from class org.apache.calcite.linq4j.tree.Node
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public accept(shuttle Shuttle) : Node from class org.apache.calcite.linq4j.tree.Node
Rename Parameter	visitor : Visitor to shuttle : Shuttle in method public abstract accept(shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.Statement
Change Parameter Type	visitor : Visitor to shuttle : Shuttle in method public abstract accept(shuttle Shuttle) : Statement from class org.apache.calcite.linq4j.tree.Statement
Developers have reported that 10708 commits involve refactoring but only 391 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 391 commits.

No refactorings detected at d0f7dd35ccecf6f2514276e0106b0e6516922b2b

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3a9f26b42f23be18079f
Issue Title: : Add sub-query support for RelStructuredTypeFlattener
Refactorings at 07e59a268781c24d18273aac301987acdc270a0f
Add Parameter	restructure : boolean in method public RelStructuredTypeFlattener(rexBuilder RexBuilder, toRelContext RelOptTable.ToRelContext, restructure boolean) from class org.apache.calcite.sql2rel.RelStructuredTypeFlattener
Replace Attribute With Variable	visitor : RewriteRelVisitor to visitor : RewriteRelVisitor in method public rewrite(root RelNode) : RelNode from class org.apache.calcite.sql2rel.RelStructuredTypeFlattener
Remove Parameter	restructure : boolean in method public rewrite(root RelNode, restructure boolean) : RelNode from class org.apache.calcite.sql2rel.RelStructuredTypeFlattener
Change Parameter Type	rel : LogicalTableScan to rel : TableScan in method public rewriteRel(rel TableScan) : void from class org.apache.calcite.sql2rel.RelStructuredTypeFlattener
Extract Variable	topLevelFieldAccess : RexFieldAccess in method private getCorrelationUse(bb Blackboard, r0 RelNode) : CorrelationUse from class org.apache.calcite.sql2rel.SqlToRelConverter
Developers have reported that 10708 commits involve refactoring but only 392 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 392 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3aa726b42f23be1807de
Issue Title: : Add rule, AggregateValuesRule, that applies to Aggregate on empty relation
Refactorings at 3f92157d5742dd10f3b828d22d7a753e0a2899cc
Add Parameter	preProgram : HepProgram in method package Sql(sql String, preProgram HepProgram, hepPlanner HepPlanner, expand boolean, hooks ImmutableMap<Hook,Function>) from class org.apache.calcite.test.RelOptTestBase.Sql
Developers have reported that 10708 commits involve refactoring but only 393 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 393 commits.

No refactorings detected at dd3782e73c7ef16abeeb7bb1a06f157a68c5fce7

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3ad726b42f23be180908
Issue Title: : RelBuilder should rename fields without creating an identity Project
Refactorings at 2193c6e6e88873dc4b63d8572eebeaa51c795c6c
Extract Method	private peek_(inputCount int, inputOrdinal int) : Frame extracted from public peek(inputCount int, inputOrdinal int) : RelNode in class org.apache.calcite.tools.RelBuilder
Extract Method	private field(inputCount int, inputOrdinal int, fieldOrdinal int, alias boolean) : RexNode extracted from public field(inputCount int, inputOrdinal int, fieldOrdinal int) : RexInputRef in class org.apache.calcite.tools.RelBuilder
Change Variable Type	fieldType : RelDataType to field : RelDataTypeField in method private field(inputCount int, inputOrdinal int, fieldOrdinal int, alias boolean) : RexNode from class org.apache.calcite.tools.RelBuilder
Rename Variable	fieldType : RelDataType to field : RelDataTypeField in method private field(inputCount int, inputOrdinal int, fieldOrdinal int, alias boolean) : RexNode from class org.apache.calcite.tools.RelBuilder
Change Variable Type	input : RelNode to frame : Frame in method public field(inputCount int, inputOrdinal int, fieldName String) : RexInputRef from class org.apache.calcite.tools.RelBuilder
Remove Variable Modifier	final in variable ordinal : int in method public field(inputCount int, inputOrdinal int, fieldName String) : RexInputRef from class org.apache.calcite.tools.RelBuilder
Rename Variable	input : RelNode to frame : Frame in method public field(inputCount int, inputOrdinal int, fieldName String) : RexInputRef from class org.apache.calcite.tools.RelBuilder
Rename Variable	ordinal : int to i : int in method public field(inputCount int, inputOrdinal int, fieldName String) : RexInputRef from class org.apache.calcite.tools.RelBuilder
Change Attribute Type	lists : ImmutableList<List<? extends T>> to lists : ImmutableList<List<T>> in class org.apache.calcite.util.CompositeList
Add Method Annotation	@SafeVarargs in method public of(lists List<? extends T>...) : CompositeList<T> from class org.apache.calcite.util.CompositeList
Change Parameter Type	lists : ImmutableList<List<? extends T>> to lists : ImmutableList<List<T>> in method private CompositeList(lists ImmutableList<List<T>>) from class org.apache.calcite.util.CompositeList
Developers have reported that 10708 commits involve refactoring but only 394 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 394 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3af026b42f23be180994
Issue Title: : Pass an expression executor to RexUtil.simplify for constant reduction
Refactorings at 88d1d67d98663a760039f9a507e66e23f83ef2bd
Change Attribute Type	executor : Executor to executor : RexExecutor in class org.apache.calcite.plan.AbstractRelOptPlanner
Change Return Type	Executor to RexExecutor in method public getExecutor() : RexExecutor from class org.apache.calcite.plan.AbstractRelOptPlanner
Change Parameter Type	executor : Executor to executor : RexExecutor in method public setExecutor(executor RexExecutor) : void from class org.apache.calcite.plan.AbstractRelOptPlanner
Add Class Annotation	@Deprecated in class org.apache.calcite.plan.RelOptPlanner.Executor
Change Return Type	Executor to RexExecutor in method public getExecutor() : RexExecutor from class org.apache.calcite.plan.RelOptPlanner
Change Parameter Type	executor : Executor to executor : RexExecutor in method public setExecutor(executor RexExecutor) : void from class org.apache.calcite.plan.RelOptPlanner
Change Attribute Type	executor : RelOptPlanner.Executor to executor : RexExecutor in class org.apache.calcite.prepare.PlannerImpl
Change Variable Type	executor : RelOptPlanner.Executor to executor : RexExecutor in method protected reduceExpressionsInternal(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Parameter	executor : RexExecutor in method public ExprSimplifier(rexBuilder RexBuilder, unknownAsFalse boolean, executor RexExecutor) from class org.apache.calcite.rex.RexUtil.ExprSimplifier
Change Attribute Type	EXECUTOR : RelOptPlanner.Executor to EXECUTOR : RexExecutor in class org.apache.calcite.rex.RexUtil
Change Attribute Access Modifier	private to public in attribute public EXECUTOR : RexExecutor from class org.apache.calcite.rex.RexUtil
Extract Method	public simplify(rexBuilder RexBuilder, e RexNode, unknownAsFalse boolean, executor RexExecutor) : RexNode extracted from public simplify(rexBuilder RexBuilder, e RexNode, unknownAsFalse boolean) : RexNode in class org.apache.calcite.rex.RexUtil
Add Parameter	executor : RexExecutor in method public simplifyPreservingType(rexBuilder RexBuilder, e RexNode, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Add Parameter	executor : RexExecutor in method private simplifyCast(rexBuilder RexBuilder, e RexCall, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Parameterize Attribute	EXECUTOR : RelOptPlanner.Executor to executor : RexExecutor in method private simplifyCast(rexBuilder RexBuilder, e RexCall, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Change Return Type	RelOptPlanner.Executor to RexExecutor in method public getExecutor() : RexExecutor from class org.apache.calcite.tools.FrameworkConfig
Change Attribute Type	executor : RelOptPlanner.Executor to executor : RexExecutor in class org.apache.calcite.tools.Frameworks.ConfigBuilder
Change Parameter Type	executor : RelOptPlanner.Executor to executor : RexExecutor in method public executor(executor RexExecutor) : ConfigBuilder from class org.apache.calcite.tools.Frameworks.ConfigBuilder
Change Attribute Type	executor : RelOptPlanner.Executor to executor : RexExecutor in class org.apache.calcite.tools.Frameworks.StdFrameworkConfig
Change Return Type	RelOptPlanner.Executor to RexExecutor in method public getExecutor() : RexExecutor from class org.apache.calcite.tools.Frameworks.StdFrameworkConfig
Change Parameter Type	executor : RelOptPlanner.Executor to executor : RexExecutor in method public StdFrameworkConfig(context Context, convertletTable SqlRexConvertletTable, operatorTable SqlOperatorTable, programs ImmutableList<Program>, traitDefs ImmutableList<RelTraitDef>, parserConfig SqlParser.Config, defaultSchema SchemaPlus, costFactory RelOptCostFactory, typeSystem RelDataTypeSystem, executor RexExecutor) from class org.apache.calcite.tools.Frameworks.StdFrameworkConfig
Extract Interface	org.apache.calcite.rex.RexExecutor from classes [org.apache.calcite.plan.RelOptPlanner.Executor, org.apache.calcite.rex.RexExecutorImpl]
Pull Up Method	public reduce(rexBuilder RexBuilder, constExps List<RexNode>, reducedValues List<RexNode>) : void from class org.apache.calcite.plan.RelOptPlanner.Executor to public reduce(rexBuilder RexBuilder, constExps List<RexNode>, reducedValues List<RexNode>) : void from class org.apache.calcite.rex.RexExecutor
Developers have reported that 10708 commits involve refactoring but only 395 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 395 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b0326b42f23be1809f2
Issue Title: : Handle errors during constant reduction
Refactorings at 0ea976eed7ec6a4368c6002025a1eba0377df509
Add Method Annotation	@Deprecated in method public FilterReduceExpressionsRule(filterClass Class<? extends Filter>, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.FilterReduceExpressionsRule
Add Method Annotation	@Deprecated in method public ProjectReduceExpressionsRule(projectClass Class<? extends Project>, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ProjectReduceExpressionsRule
Add Method Annotation	@Deprecated in method public JoinReduceExpressionsRule(joinClass Class<? extends Join>, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.JoinReduceExpressionsRule
Add Method Annotation	@Deprecated in method public CalcReduceExpressionsRule(calcClass Class<? extends Calc>, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.CalcReduceExpressionsRule
Extract Method	protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean, matchNullability boolean) : boolean extracted from protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean) : boolean in class org.apache.calcite.rel.rules.ReduceExpressionsRule
Rename Parameter	desc : String to description : String in method protected ReduceExpressionsRule(clazz Class<? extends RelNode>, relBuilderFactory RelBuilderFactory, description String) from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Method Annotation	@Deprecated in method protected ReduceExpressionsRule(clazz Class<? extends RelNode>, relBuilderFactory RelBuilderFactory, description String) from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Method Annotation	@Deprecated in method protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Method Annotation	@Deprecated in method public ExprSimplifier(simplify RexSimplify) from class org.apache.calcite.rex.RexUtil.ExprSimplifier
Remove Method Annotation	@Ignore("[CALCITE-1439] Handling errors during constant reduction") in method public testCastInvalid() : void from class org.apache.calcite.sql.test.SqlOperatorBaseTest
Remove Method Annotation	@Ignore in method public testReduceCase() : void from class org.apache.calcite.test.RelOptRulesTest
Rename Variable	dBeforeEpcoh2 : DateString to dBeforeEpoch2 : DateString in method public testSimpleDate() : void from class org.apache.calcite.test.RexImplicationCheckerTest
Developers have reported that 10708 commits involve refactoring but only 396 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 396 commits.

No refactorings detected at 052f854594f92fd52a142c53998b83d70302075b

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b0326b42f23be1809f2
Issue Title: : Handle errors during constant reduction
Refactorings at 54556b82c0599012f2e7fefaae3a9868cb68f879
Change Method Access Modifier	private to package in method package canRemoveCastFromLiteral(toType RelDataType, value Comparable, fromTypeName SqlTypeName) : boolean from class org.apache.calcite.rex.RexBuilder
Add Method Annotation	@Ignore in method public testReduceCase() : void from class org.apache.calcite.test.RelOptRulesTest
Add Parameter	hooks : ImmutableMap<Hook,Function> in method package Sql(sql String, hepPlanner HepPlanner, expand boolean, hooks ImmutableMap<Hook,Function>) from class org.apache.calcite.test.RelOptTestBase.Sql
Change Method Access Modifier	public to package in method package Sql(sql String, hepPlanner HepPlanner, expand boolean, hooks ImmutableMap<Hook,Function>) from class org.apache.calcite.test.RelOptTestBase.Sql
Rename Method	private extractLiteral(node RexNode) : RexLiteral renamed to private literalValue(node RexNode) : Calendar in class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Variable Type	ranges : List<Range> to ranges : List<Range<Calendar>> in method public createInterval(type RelDataType, e RexNode) : List<Interval> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Parameter Type	range : Range to range : Range<Calendar> in method public apply(range Range<Calendar>) : Interval from class org.apache.calcite.adapter.druid.DruidDateTimeUtils.toInterval.intervals.transform.new Function<Range<Calendar>,Interval>
Change Parameter Type	ranges : List<Range> to ranges : List<Range<Calendar>> in method protected toInterval(ranges List<Range<Calendar>>) : List<Interval> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Variable Type	intervals : List<Range> to intervals : List<Range<Calendar>> in method protected extractRanges(node RexNode, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Variable Type	extracted : List<Range> to extracted : List<Range<Calendar>> in method protected extractRanges(node RexNode, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Variable Type	ranges : List<Range> to ranges : List<Range<Calendar>> in method protected extractRanges(node RexNode, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Variable Type	extractedRanges : List<Range> to extractedRanges : List<Range<Calendar>> in method protected extractRanges(node RexNode, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Variable Type	overlapped : List<Range> to overlapped : List<Range<Calendar>> in method protected extractRanges(node RexNode, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Return Type	List<Range> to List<Range<Calendar>> in method protected extractRanges(node RexNode, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Remove Parameter	type : RelDataType in method protected extractRanges(type RelDataType, node RexNode, withNot boolean) : List<Range> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Variable Type	ranges : List<Range> to ranges : ImmutableList.Builder<Range<Calendar>> in method protected leafToRanges(call RexCall, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Variable Type	value : Comparable to value : Calendar in method protected leafToRanges(call RexCall, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Variable Modifier	final in variable value : Calendar in method protected leafToRanges(call RexCall, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Variable Type	value1 : Comparable to value1 : Calendar in method protected leafToRanges(call RexCall, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Variable Modifier	final in variable value1 : Calendar in method protected leafToRanges(call RexCall, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Variable Type	value2 : Comparable to value2 : Calendar in method protected leafToRanges(call RexCall, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Variable Modifier	final in variable value2 : Calendar in method protected leafToRanges(call RexCall, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Variable Type	element : Comparable to element : Calendar in method protected leafToRanges(call RexCall, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Variable Modifier	final in variable element : Calendar in method protected leafToRanges(call RexCall, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Return Type	List<Range> to List<Range<Calendar>> in method protected leafToRanges(call RexCall, withNot boolean) : List<Range<Calendar>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Remove Parameter	type : RelDataType in method protected leafToRanges(type RelDataType, call RexCall, withNot boolean) : List<Range> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Invert Condition	if(!(target instanceof RexLiteral)) to if(node instanceof RexLiteral) in method private literalValue(node RexNode) : Calendar from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Inline Variable	target : RexNode in method private extractLiteral(node RexNode) : RexLiteral from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Return Type	RexLiteral to Calendar in method private literalValue(node RexNode) : Calendar from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Extract Variable	rexBuilder : RexBuilder in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.druid.DruidRules.DruidFilterRule
Extract Variable	cluster : RelOptCluster in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.druid.DruidRules.DruidFilterRule
Extract Variable	rexBuilder : RexBuilder in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.druid.DruidRules.DruidProjectRule
Extract Variable	cluster : RelOptCluster in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.druid.DruidRules.DruidProjectRule
Developers have reported that 10708 commits involve refactoring but only 397 involve refactoring operations
There are 8 duplicate commits with refactoring out of the 397 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b0826b42f23be180a09
Issue Title: : Support for modifiable views with extended columns
Refactorings at e0a1f7d3069f0eefeb8bdd411a250cd1fb0532f3
Move Class	org.apache.calcite.schema.impl.ViewTable.ViewTableMacro moved to org.apache.calcite.schema.impl.ViewTableMacro
Move Class	org.apache.calcite.schema.impl.ViewTable.ModifiableViewTable moved to org.apache.calcite.schema.impl.ModifiableViewTable
Add Parameter	modifiable : boolean in method public AnalyzeViewResult(prepare CalcitePrepareImpl, validator SqlValidator, sql String, sqlNode SqlNode, rowType RelDataType, root RelRoot, table Table, tablePath ImmutableList<String>, constraint RexNode, columnMapping ImmutableIntList, modifiable boolean) from class org.apache.calcite.jdbc.CalcitePrepare.AnalyzeViewResult
Extract Variable	rowType : RelDataType in method private resolve_(rootSchema CalciteSchema, names List<String>, schemaNames List<String>, nameMatcher SqlNameMatcher, path Path, resolved Resolved) : void from class org.apache.calcite.sql.validate.EmptyScope
Extract Method	private getNamespace(id SqlIdentifier, scope DelegatingScope) : SqlValidatorNamespace extracted from private getNamespace(node SqlNode, scope SqlValidatorScope) : SqlValidatorNamespace in class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Attribute Access Modifier	private to protected in attribute protected rexBuilder : RexBuilder from class org.apache.calcite.sql2rel.NullInitializerExpressionFactory
Extract Method	private convertIdentifier(bb Blackboard, id SqlIdentifier, extendedColumns SqlNodeList) : void extracted from protected convertFrom(bb Blackboard, from SqlNode) : void in class org.apache.calcite.sql2rel.SqlToRelConverter
Add Variable Modifier	final in variable usedDataset : boolean[] in method private convertIdentifier(bb Blackboard, id SqlIdentifier, extendedColumns SqlNodeList) : void from class org.apache.calcite.sql2rel.SqlToRelConverter
Change Attribute Access Modifier	private to protected in attribute protected stream : boolean from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Attribute Access Modifier	private to protected in attribute protected rowCount : double from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Attribute Access Modifier	private to protected in attribute protected collationList : List<RelCollation> from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Attribute Access Modifier	private to protected in attribute protected monotonicColumnSet : Set<String> from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Attribute Access Modifier	private to protected in attribute protected kind : StructKind from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Attribute Access Modifier	private to protected in attribute protected initializerFactory : InitializerExpressionFactory from class org.apache.calcite.test.MockCatalogReader.MockTable
Change Class Access Modifier	package to public in class org.apache.calcite.schema.impl.ViewTableMacro
Remove Class Modifier	static in class org.apache.calcite.schema.impl.ViewTable.ViewTableMacro
Extract Method	protected modifiableViewTable(parsed CalcitePrepare.AnalyzeViewResult, viewSql String, schemaPath List<String>, viewPath List<String>, schema CalciteSchema) : ModifiableViewTable extracted from public apply(arguments List<Object>) : TranslatableTable in class org.apache.calcite.schema.impl.ViewTableMacro
Extract Method	protected viewTable(parsed CalcitePrepare.AnalyzeViewResult, viewSql String, schemaPath List<String>, viewPath List<String>) : ViewTable extracted from public apply(arguments List<Object>) : TranslatableTable in class org.apache.calcite.schema.impl.ViewTableMacro
Change Method Access Modifier	package to public in method public ViewTableMacro(schema CalciteSchema, viewSql String, schemaPath List<String>, viewPath List<String>, modifiable Boolean) from class org.apache.calcite.schema.impl.ViewTableMacro
Change Class Access Modifier	package to public in class org.apache.calcite.schema.impl.ModifiableViewTable
Remove Class Modifier	static in class org.apache.calcite.schema.impl.ViewTable.ModifiableViewTable
Add Parameter	typeFactory : RelDataTypeFactory in method public ModifiableViewTable(elementType Type, rowType RelProtoDataType, viewSql String, schemaPath List<String>, viewPath List<String>, table Table, tablePath Path, constraint RexNode, columnMapping ImmutableIntList, typeFactory RelDataTypeFactory) from class org.apache.calcite.schema.impl.ModifiableViewTable
Pull Up Method	public extend(extendedFields List<RelDataTypeField>) : RelOptTable from class org.apache.calcite.prepare.RelOptTableImpl to public extend(extendedFields List<RelDataTypeField>) : RelOptTable from class org.apache.calcite.prepare.Prepare.AbstractPreparingTable
Move Method	public unwrap(aClass Class<C>) : C from class org.apache.calcite.test.MockCatalogReader.MockTable.ModifiableTableWithCustomColumnResolving to public unwrap(aClass Class<C>) : C from class org.apache.calcite.prepare.CalciteCatalogReader
Developers have reported that 10708 commits involve refactoring but only 398 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 398 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b1626b42f23be180a3f
Issue Title: : Change SubstitutionVisitor to use generic RelBuilder instead of Logical instances of the operators when possible
Refactorings at e9d0ca6731b2f5ec33b9270b5ffcaaf9e4eb8537
Add Parameter	relBuilder : RelBuilder in method private reverseSubstitute(relBuilder RelBuilder, query Holder, matches List<List<Replacement>>, sub List<RelNode>, replaceCount int, maxCount int) : void from class org.apache.calcite.plan.SubstitutionVisitor
Extract Method	public fromMutable(node MutableRel, relBuilder RelBuilder) : RelNode extracted from public fromMutable(node MutableRel) : RelNode in class org.apache.calcite.rel.mutable.MutableRels
Add Parameter	relBuilder : RelBuilder in method private fromMutables(nodes List<MutableRel>, relBuilder RelBuilder) : List<RelNode> from class org.apache.calcite.rel.mutable.MutableRels
Developers have reported that 10708 commits involve refactoring but only 399 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 399 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b1726b42f23be180a43
Issue Title: : Add missing support for numerical JDBC functions
Refactorings at 17dc06fe5f4a250475517ddbd8c3f966a3c9d1fe
Extract Superclass	org.apache.calcite.sql.fun.SqlBaseContextVariable from classes [org.apache.calcite.sql.fun.SqlStringContextVariable]
Pull Up Method	public getSyntax() : SqlSyntax from class org.apache.calcite.sql.fun.SqlStringContextVariable to public getSyntax() : SqlSyntax from class org.apache.calcite.sql.fun.SqlBaseContextVariable
Pull Up Method	public getMonotonicity(call SqlOperatorBinding) : SqlMonotonicity from class org.apache.calcite.sql.fun.SqlStringContextVariable to public getMonotonicity(call SqlOperatorBinding) : SqlMonotonicity from class org.apache.calcite.sql.fun.SqlBaseContextVariable
Pull Up Method	public isDynamicFunction() : boolean from class org.apache.calcite.sql.fun.SqlStringContextVariable to public isDynamicFunction() : boolean from class org.apache.calcite.sql.fun.SqlBaseContextVariable
Developers have reported that 10708 commits involve refactoring but only 400 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 400 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b3026b42f23be180ac9
Issue Title: : Remove uses of deprecated APIs
Refactorings at 5181563f9f26d1533a7d98ecca8443077e7b7efa
Add Method Annotation	@SuppressWarnings("deprecation") in method public setUnicodeStream(parameterIndex int, x InputStream, length int) : void from class org.apache.calcite.avatica.AvaticaPreparedStatement
Add Method Annotation	@SuppressWarnings("deprecation") in method public getBigDecimal(columnIndex int, scale int) : BigDecimal from class org.apache.calcite.avatica.AvaticaResultSet
Add Method Annotation	@SuppressWarnings("deprecation") in method public getUnicodeStream(columnIndex int) : InputStream from class org.apache.calcite.avatica.AvaticaResultSet
Add Method Annotation	@SuppressWarnings("deprecation") in method public getBigDecimal(columnLabel String, scale int) : BigDecimal from class org.apache.calcite.avatica.AvaticaResultSet
Add Method Annotation	@SuppressWarnings("deprecation") in method public getUnicodeStream(columnLabel String) : InputStream from class org.apache.calcite.avatica.AvaticaResultSet
Add Method Annotation	@SuppressWarnings("deprecation") in method public prepareAndExecute(h StatementHandle, sql String, maxRowCount long, callback PrepareCallback) : ExecuteResult from class org.apache.calcite.avatica.remote.RemoteMeta
Add Method Annotation	@SuppressWarnings("deprecation") in method public execute(h StatementHandle, parameterValues List<TypedValue>, maxRowCount long) : ExecuteResult from class org.apache.calcite.avatica.remote.RemoteMeta
Add Method Annotation	@SuppressWarnings("deprecation") in method public prepareAndExecute(h StatementHandle, sql String, maxRowCount long, callback PrepareCallback) : ExecuteResult from class org.apache.calcite.avatica.AvaticaResultSetConversionsTest.TestMetaImpl
Add Method Annotation	@SuppressWarnings("deprecation") in method public execute(h StatementHandle, parameterValues List<TypedValue>, maxRowCount long) : ExecuteResult from class org.apache.calcite.avatica.AvaticaResultSetConversionsTest.TestMetaImpl
Add Method Annotation	@SuppressWarnings("deprecation") in method public prepareAndExecute(h StatementHandle, sql String, maxRowCount long, callback PrepareCallback) : ExecuteResult from class org.apache.calcite.avatica.MetaResultSetTest.TestMetaImpl
Add Method Annotation	@SuppressWarnings("deprecation") in method public execute(h StatementHandle, parameterValues List<TypedValue>, maxRowCount long) : ExecuteResult from class org.apache.calcite.avatica.MetaResultSetTest.TestMetaImpl
Add Method Annotation	@SuppressWarnings("deprecation") in method public setUnicodeStream(parameterIndex int, x InputStream, length int) : void from class org.apache.calcite.avatica.noop.AvaticaNoopPreparedStatement
Add Method Annotation	@SuppressWarnings("deprecation") in method public getBigDecimal(columnIndex int, scale int) : BigDecimal from class org.apache.calcite.avatica.noop.AvaticaNoopResultSet
Add Method Annotation	@SuppressWarnings("deprecation") in method public getUnicodeStream(columnIndex int) : InputStream from class org.apache.calcite.avatica.noop.AvaticaNoopResultSet
Add Method Annotation	@SuppressWarnings("deprecation") in method public getBigDecimal(columnLabel String, scale int) : BigDecimal from class org.apache.calcite.avatica.noop.AvaticaNoopResultSet
Add Method Annotation	@SuppressWarnings("deprecation") in method public getUnicodeStream(columnLabel String) : InputStream from class org.apache.calcite.avatica.noop.AvaticaNoopResultSet
Add Method Annotation	@SuppressWarnings("deprecation") in method public prepareAndExecute(h StatementHandle, sql String, maxRowCount long, callback PrepareCallback) : ExecuteResult from class org.apache.calcite.avatica.jdbc.JdbcMeta
Add Method Annotation	@SuppressWarnings("deprecation") in method public execute(h StatementHandle, parameterValues List<TypedValue>, maxRowCount long) : ExecuteResult from class org.apache.calcite.avatica.jdbc.JdbcMeta
Change Method Access Modifier	private to package in method package wrapJettyHandler(handler Handler) : AvaticaHandler from class org.apache.calcite.avatica.server.HttpServer
Add Thrown Exception Type	NoSuchMethodException in method public main(args String[]) : void from class org.apache.calcite.avatica.server.Main
Add Thrown Exception Type	InvocationTargetException in method public main(args String[]) : void from class org.apache.calcite.avatica.server.Main
Add Thrown Exception Type	NoSuchMethodException in method public start(args String[]) : HttpServer from class org.apache.calcite.avatica.server.Main
Add Thrown Exception Type	InvocationTargetException in method public start(args String[]) : HttpServer from class org.apache.calcite.avatica.server.Main
Change Variable Type	factoryClass : Class<?> to factoryClass : Class<Meta.Factory> in method public start(args String[], port int, handlerFactory HandlerFactory) : HttpServer from class org.apache.calcite.avatica.server.Main
Add Variable Annotation	@SuppressWarnings("unchecked") in variable factoryClass : Class<Meta.Factory> in method public start(args String[], port int, handlerFactory HandlerFactory) : HttpServer from class org.apache.calcite.avatica.server.Main
Add Thrown Exception Type	NoSuchMethodException in method public start(args String[], port int, handlerFactory HandlerFactory) : HttpServer from class org.apache.calcite.avatica.server.Main
Add Thrown Exception Type	InvocationTargetException in method public start(args String[], port int, handlerFactory HandlerFactory) : HttpServer from class org.apache.calcite.avatica.server.Main
Change Method Access Modifier	public to package in method package ReflectiveTable(elementType Type, enumerable Enumerable) from class org.apache.calcite.adapter.java.ReflectiveSchema.ReflectiveTable
Extract Variable	constructor : Constructor<?> in method public create(parentSchema SchemaPlus, name String, operand Map<String,Object>) : Schema from class org.apache.calcite.adapter.java.ReflectiveSchema.Factory
Change Variable Type	clazz : Class to clazz : Class<?> in method public create(parentSchema SchemaPlus, name String, operand Map<String,Object>) : Schema from class org.apache.calcite.adapter.java.ReflectiveSchema.Factory
Merge Catch	[catch(IllegalAccessException e), catch(InvocationTargetException e)] to catch(IllegalAccessException|InvocationTargetException e) in method public apply(arguments List<Object>) : TranslatableTable from class org.apache.calcite.adapter.java.ReflectiveSchema.MethodTableMacro
Change Variable Type	e : IllegalAccessException to e : IllegalAccessException|InvocationTargetException in method public apply(arguments List<Object>) : TranslatableTable from class org.apache.calcite.adapter.java.ReflectiveSchema.MethodTableMacro
Change Method Access Modifier	public to package in method package MethodTableMacro(schema ReflectiveSchema, method Method) from class org.apache.calcite.adapter.java.ReflectiveSchema.MethodTableMacro
Change Method Access Modifier	public to package in method package FieldTable(field Field, elementType Type, enumerable Enumerable<T>) from class org.apache.calcite.adapter.java.ReflectiveSchema.FieldTable
Change Method Access Modifier	public to package in method package FieldSelector(elementType Class) from class org.apache.calcite.adapter.java.ReflectiveSchema.FieldSelector
Change Attribute Access Modifier	package to private in attribute private clazz : Class from class org.apache.calcite.adapter.java.ReflectiveSchema
Extract Variable	constructor : Constructor<?> in method package UdaAccumulatorFactory(aggFunction AggregateFunctionImpl, call AggregateCall) from class org.apache.calcite.interpreter.AggregateNode.UdaAccumulatorFactory
Change Variable Type	e : InstantiationException|IllegalAccessException to e : InstantiationException|IllegalAccessException|NoSuchMethodException|InvocationTargetException in method package UdaAccumulatorFactory(aggFunction AggregateFunctionImpl, call AggregateCall) from class org.apache.calcite.interpreter.AggregateNode.UdaAccumulatorFactory
Add Method Annotation	@SuppressWarnings("deprecation") in method public setSourceEnumerable(enumerable Enumerable<Row>) : void from class org.apache.calcite.interpreter.Interpreter.ListSink
Add Method Annotation	@SuppressWarnings("deprecation") in method public prepareAndExecute(h StatementHandle, sql String, maxRowCount long, callback PrepareCallback) : ExecuteResult from class org.apache.calcite.jdbc.CalciteMetaImpl
Add Method Annotation	@SuppressWarnings("deprecation") in method public execute(h StatementHandle, parameterValues List<TypedValue>, maxRowCount long) : ExecuteResult from class org.apache.calcite.jdbc.CalciteMetaImpl
Add Method Annotation	@SuppressWarnings("deprecation") in method public setCancelFlag(cancelFlag CancelFlag) : void from class org.apache.calcite.plan.AbstractRelOptPlanner
Add Method Annotation	@SuppressWarnings("deprecation") in method public getCost(rel RelNode) : RelOptCost from class org.apache.calcite.plan.AbstractRelOptPlanner
Add Method Annotation	@SuppressWarnings("deprecation") in method public field(rowType RelDataType, alias String) : RelDataTypeField from class org.apache.calcite.prepare.CalciteCatalogReader
Add Method Annotation	@SuppressWarnings("deprecation") in method public matches(string String, name String) : boolean from class org.apache.calcite.prepare.CalciteCatalogReader
Add Method Annotation	@SuppressWarnings("deprecation") in method public isCaseSensitive() : boolean from class org.apache.calcite.prepare.CalciteCatalogReader
Add Method Annotation	@SuppressWarnings("deprecation") in method public convert(sql SqlNode) : RelNode from class org.apache.calcite.prepare.PlannerImpl
Add Method Annotation	@SuppressWarnings("deprecation") in method public getChildExps() : List<RexNode> from class org.apache.calcite.rel.AbstractRelNode
Add Method Annotation	@SuppressWarnings("deprecation") in method public isDistinct() : boolean from class org.apache.calcite.rel.AbstractRelNode
Add Method Annotation	@SuppressWarnings("deprecation") in method public isKey(columns ImmutableBitSet) : boolean from class org.apache.calcite.rel.AbstractRelNode
Add Method Annotation	@SuppressWarnings("deprecation") in method public getQuery() : RelOptQuery from class org.apache.calcite.rel.AbstractRelNode
Add Method Annotation	@SuppressWarnings("deprecation") in method public isValid(fail boolean) : boolean from class org.apache.calcite.rel.AbstractRelNode
Add Method Annotation	@SuppressWarnings("deprecation") in method public getRows() : double from class org.apache.calcite.rel.AbstractRelNode
Add Method Annotation	@SuppressWarnings("deprecation") in method public getVariablesStopped() : Set<String> from class org.apache.calcite.rel.AbstractRelNode
Add Method Annotation	@SuppressWarnings("deprecation") in method public computeSelfCost(planner RelOptPlanner) : RelOptCost from class org.apache.calcite.rel.AbstractRelNode
Add Method Annotation	@SuppressWarnings("deprecation") in method public getCollationList() : List<RelCollation> from class org.apache.calcite.rel.core.Sort
Add Method Annotation	@SuppressWarnings("deprecation") in method public getCollationList() : List<RelCollation> from class org.apache.calcite.rel.core.TableScan
Add Method Annotation	@SuppressWarnings("deprecation") in method public createStructType(fieldInfo RelDataTypeFactory.FieldInfo) : RelDataType from class org.apache.calcite.rel.type.RelDataTypeFactoryImpl
Add Method Annotation	@SuppressWarnings("deprecation") in method public getStringLiteralOperand(ordinal int) : String from class org.apache.calcite.rex.RexCallBinding
Add Method Annotation	@SuppressWarnings("deprecation") in method public getIntLiteralOperand(ordinal int) : int from class org.apache.calcite.rex.RexCallBinding
Change Variable Type	e : CompileException|IOException|InstantiationException|IllegalAccessException to e : CompileException|IOException|InstantiationException|IllegalAccessException|InvocationTargetException|NoSuchMethodException in method private compile(code String, reason Object) : Function1<DataContext,Object[]> from class org.apache.calcite.rex.RexExecutable
Extract Variable	constructor : Constructor<?> in method private apply(arguments List<Object>) : Table from class org.apache.calcite.schema.impl.TableFunctionImpl
Change Variable Type	e : IllegalAccessException|InvocationTargetException|InstantiationException to e : IllegalAccessException|InvocationTargetException|InstantiationException|NoSuchMethodException in method private apply(arguments List<Object>) : Table from class org.apache.calcite.schema.impl.TableFunctionImpl
Merge Catch	[catch(IllegalAccessException e), catch(InvocationTargetException e), catch(InstantiationException e)] to catch(IllegalAccessException|InvocationTargetException|NoSuchMethodException|InstantiationException e) in method public apply(arguments List<Object>) : TranslatableTable from class org.apache.calcite.schema.impl.TableMacroImpl
Change Variable Type	e : IllegalAccessException to e : IllegalAccessException|InvocationTargetException|NoSuchMethodException|InstantiationException in method public apply(arguments List<Object>) : TranslatableTable from class org.apache.calcite.schema.impl.TableMacroImpl
Add Method Annotation	@SuppressWarnings("deprecation") in method public getStringLiteralOperand(ordinal int) : String from class org.apache.calcite.sql.SqlCallBinding
Add Method Annotation	@SuppressWarnings("deprecation") in method public getIntLiteralOperand(ordinal int) : int from class org.apache.calcite.sql.SqlCallBinding
Add Method Annotation	@SuppressWarnings("deprecation") in method public signum() : int from class org.apache.calcite.sql.SqlIntervalLiteral
Extract Variable	validator : SqlValidatorImpl in method private inferTypeFromValidator(callBinding SqlCallBinding) : RelDataType from class org.apache.calcite.sql.fun.SqlCaseOperator
Extract Variable	validator : SqlValidatorImpl in method public inferReturnType(opBinding SqlOperatorBinding) : RelDataType from class org.apache.calcite.sql.fun.SqlCastFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getParameterTypes(typeFactory RelDataTypeFactory) : List<RelDataType> from class org.apache.calcite.sql.fun.SqlCountAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getReturnType(typeFactory RelDataTypeFactory) : RelDataType from class org.apache.calcite.sql.fun.SqlCountAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getParameterTypes(typeFactory RelDataTypeFactory) : List<RelDataType> from class org.apache.calcite.sql.fun.SqlFirstLastValueAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getReturnType(typeFactory RelDataTypeFactory) : RelDataType from class org.apache.calcite.sql.fun.SqlFirstLastValueAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getParameterTypes(typeFactory RelDataTypeFactory) : List<RelDataType> from class org.apache.calcite.sql.fun.SqlHistogramAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getReturnType(typeFactory RelDataTypeFactory) : RelDataType from class org.apache.calcite.sql.fun.SqlHistogramAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getParameterTypes(typeFactory RelDataTypeFactory) : List<RelDataType> from class org.apache.calcite.sql.fun.SqlMinMaxAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getReturnType(typeFactory RelDataTypeFactory) : RelDataType from class org.apache.calcite.sql.fun.SqlMinMaxAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getParameterTypes(typeFactory RelDataTypeFactory) : List<RelDataType> from class org.apache.calcite.sql.fun.SqlSingleValueAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getReturnType(typeFactory RelDataTypeFactory) : RelDataType from class org.apache.calcite.sql.fun.SqlSingleValueAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getParameterTypes(typeFactory RelDataTypeFactory) : List<RelDataType> from class org.apache.calcite.sql.fun.SqlSumAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getReturnType(typeFactory RelDataTypeFactory) : RelDataType from class org.apache.calcite.sql.fun.SqlSumAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getParameterTypes(typeFactory RelDataTypeFactory) : List<RelDataType> from class org.apache.calcite.sql.fun.SqlSumEmptyIsZeroAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getReturnType(typeFactory RelDataTypeFactory) : RelDataType from class org.apache.calcite.sql.fun.SqlSumEmptyIsZeroAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public makeNullable() : void from class org.apache.calcite.sql.validate.AbstractNamespace
Add Method Annotation	@SuppressWarnings("deprecation") in method public makeNullable() : void from class org.apache.calcite.sql.validate.DelegatingNamespace
Add Method Annotation	@SuppressWarnings("deprecation") in method public findQualifyingTableName(columnName String, ctx SqlNode) : Pair<String,SqlValidatorNamespace> from class org.apache.calcite.sql.validate.DelegatingScope
Add Method Annotation	@SuppressWarnings("deprecation") in method public getTableNamespace(names List<String>) : SqlValidatorNamespace from class org.apache.calcite.sql.validate.DelegatingScope
Add Method Annotation	@SuppressWarnings("deprecation") in method public getTableNamespace(names List<String>) : SqlValidatorNamespace from class org.apache.calcite.sql.validate.EmptyScope
Add Method Annotation	@SuppressWarnings("deprecation") in method public findQualifyingTableName(columnName String, ctx SqlNode) : Pair<String,SqlValidatorNamespace> from class org.apache.calcite.sql.validate.EmptyScope
Add Method Annotation	@SuppressWarnings("deprecation") in method public findQualifyingTableName(columnName String, ctx SqlNode) : Pair<String,SqlValidatorNamespace> from class org.apache.calcite.sql.validate.ListScope
Add Method Annotation	@SuppressWarnings("deprecation") in method public getParameterTypes(typeFactory RelDataTypeFactory) : List<RelDataType> from class org.apache.calcite.sql.validate.SqlUserDefinedAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getReturnType(typeFactory RelDataTypeFactory) : RelDataType from class org.apache.calcite.sql.validate.SqlUserDefinedAggFunction
Inline Method	package setValidatedNodeTypeImpl(node SqlNode, type RelDataType) : void inlined to public setValidatedNodeType(node SqlNode, type RelDataType) : void in class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Method Annotation	@SuppressWarnings("deprecation") in method public setValidatedNodeType(node SqlNode, type RelDataType) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Method Modifier	final in method public setValidatedNodeType(node SqlNode, type RelDataType) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Method Annotation	@SuppressWarnings("deprecation") in method public isAggregate(selectNode SqlNode) : boolean from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Variable Type	pluginClass : Class<?> to pluginClass : Class<ConcurrentTestPlugin> in method private plugin(pluginName String) : void from class org.apache.calcite.test.concurrent.ConcurrentTestCommandScript.CommandParser
Add Variable Annotation	@SuppressWarnings("unchecked") in variable pluginClass : Class<ConcurrentTestPlugin> in method private plugin(pluginName String) : void from class org.apache.calcite.test.concurrent.ConcurrentTestCommandScript.CommandParser
Add Variable Modifier	final in variable plugin : ConcurrentTestPlugin in method private plugin(pluginName String) : void from class org.apache.calcite.test.concurrent.ConcurrentTestCommandScript.CommandParser
Add Method Annotation	@SuppressWarnings("deprecation") in method public getParameterTypes(typeFactory RelDataTypeFactory) : List<RelDataType> from class org.apache.calcite.tools.PlannerTest.MyCountAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public getReturnType(typeFactory RelDataTypeFactory) : RelDataType from class org.apache.calcite.tools.PlannerTest.MyCountAggFunction
Add Method Annotation	@SuppressWarnings("deprecation") in method public setSourceEnumerable(enumerable Enumerable<Row>) : void from class org.apache.calcite.adapter.druid.DruidConnectionImpl.enumerable.new AbstractEnumerable<Row>.enumerator.sink.new RunnableQueueSink
Merge Catch	[catch(IOException e), catch(ClassNotFoundException e), catch(InstantiationException e), catch(IllegalAccessException e)] to catch(IOException|ClassNotFoundException|InstantiationException|IllegalAccessException|NoSuchMethodException|InvocationTargetException e) in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.adapter.spark.SparkHandlerImpl
Change Variable Type	o : Object to constructor : Constructor<ArrayBindable> in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.adapter.spark.SparkHandlerImpl
Add Variable Modifier	final in variable constructor : Constructor<ArrayBindable> in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.adapter.spark.SparkHandlerImpl
Change Variable Type	clazz : Class<?> to clazz : Class<ArrayBindable> in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.adapter.spark.SparkHandlerImpl
Add Variable Annotation	@SuppressWarnings("unchecked") in variable clazz : Class<ArrayBindable> in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.adapter.spark.SparkHandlerImpl
Add Variable Modifier	final in variable clazz : Class<ArrayBindable> in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.adapter.spark.SparkHandlerImpl
Change Variable Type	e : IOException to e : IOException|ClassNotFoundException|InstantiationException|IllegalAccessException|NoSuchMethodException|InvocationTargetException in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.adapter.spark.SparkHandlerImpl
Rename Variable	o : Object to constructor : Constructor<ArrayBindable> in method public compile(expr ClassDeclaration, s String) : ArrayBindable from class org.apache.calcite.adapter.spark.SparkHandlerImpl
Developers have reported that 10708 commits involve refactoring but only 401 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 401 commits.

No refactorings detected at 9c8b5979754855d06226f6c3879aee04cabcb3af

No refactorings detected at ae12a5dcc47ad1afc9a023a2b498a328196afb44

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b4726b42f23be180ba5
Issue Title: : Change default precision of VARCHAR and VARBINARY from 1 to "unspecified"
Refactorings at 0d996daf5df17fb9b05d62fb143f3478bbaa3c80
Extract Variable	x : long in method public inferReturnType(opBinding SqlOperatorBinding) : RelDataType from class org.apache.calcite.sql.type.ReturnTypes.DYADIC_STRING_SUM_PRECISION.new SqlReturnTypeInference
Extract Variable	typeFactory : RelDataTypeFactory in method public inferReturnType(opBinding SqlOperatorBinding) : RelDataType from class org.apache.calcite.sql.type.ReturnTypes.DYADIC_STRING_SUM_PRECISION.new SqlReturnTypeInference
Add Variable Modifier	final in variable precision : int in method private leastRestrictiveSqlType(types List<RelDataType>) : RelDataType from class org.apache.calcite.sql.type.SqlTypeFactoryImpl
Rename Method	public testImplWithMltipleFilters() : void renamed to public testImplWithMultipleFilters() : void in class org.apache.calcite.test.PigAdapterTest
Rename Method	public testImplWithMltipleFilters() : void renamed to public testImplWithMultipleFilters() : void in class org.apache.calcite.test.PigRelBuilderStyleTest
Developers have reported that 10708 commits involve refactoring but only 402 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 402 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b4726b42f23be180ba5
Issue Title: : Change default precision of VARCHAR and VARBINARY from 1 to "unspecified"
Refactorings at 7f46cd5f070b9f4f4855f7f90cf23f23ab03da8e
Change Method Access Modifier	private to public in method public maxPrecision(p0 int, p1 int) : int from class org.apache.calcite.sql.type.SqlTypeUtil
Add Method Modifier	static in method public maxPrecision(p0 int, p1 int) : int from class org.apache.calcite.sql.type.SqlTypeUtil
Move Method	private maxPrecision(p0 int, p1 int) : int from class org.apache.calcite.sql.type.SqlTypeFactoryImpl to public maxPrecision(p0 int, p1 int) : int from class org.apache.calcite.sql.type.SqlTypeUtil
Developers have reported that 10708 commits involve refactoring but only 403 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 403 commits.

No refactorings detected at 6b54b6ec1718040980ed9ea60faa0e1814ae3ea4

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b5226b42f23be180bed
Issue Title: : Remove PATTERN_DEFINE_AS in SqlStdOperatorTable for match_recognize
Refactorings at 598cf6422510d81d97a6fe7e930e4e2950c3d25f
Rename Variable	isStrictStarts : SqlLiteral to strictStart : SqlLiteral in method public visit(e Match) : Result from class org.apache.calcite.rel.rel2sql.RelToSqlConverter
Rename Variable	isStrictEnds : SqlLiteral to strictEnd : SqlLiteral in method public visit(e Match) : Result from class org.apache.calcite.rel.rel2sql.RelToSqlConverter
Add Variable Modifier	final in variable patternDefFrame : SqlWriter.Frame in method public unparse(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int) : void from class org.apache.calcite.sql.SqlMatchRecognize.SqlMatchRecognizeOperator
Developers have reported that 10708 commits involve refactoring but only 404 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 404 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b6426b42f23be180cc0
Issue Title: : Add mutable equivalents for all relational expressions
Refactorings at 316a05872b358e8388890c04dee48adc45812f71
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableRelType moved to org.apache.calcite.rel.mutable.MutableRelType
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableRelVisitor moved to org.apache.calcite.rel.mutable.MutableRelVisitor
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableLeafRel moved to org.apache.calcite.rel.mutable.MutableLeafRel
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableSingleRel moved to org.apache.calcite.rel.mutable.MutableSingleRel
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableBiRel moved to org.apache.calcite.rel.mutable.MutableBiRel
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableRel moved to org.apache.calcite.rel.mutable.MutableRel
Move Class	org.apache.calcite.plan.SubstitutionVisitor.Holder moved to org.apache.calcite.rel.mutable.Holder
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableScan moved to org.apache.calcite.rel.mutable.MutableScan
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableValues moved to org.apache.calcite.rel.mutable.MutableValues
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableProject moved to org.apache.calcite.rel.mutable.MutableProject
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableFilter moved to org.apache.calcite.rel.mutable.MutableFilter
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableAggregate moved to org.apache.calcite.rel.mutable.MutableAggregate
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableSort moved to org.apache.calcite.rel.mutable.MutableSort
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableJoin moved to org.apache.calcite.rel.mutable.MutableJoin
Move Class	org.apache.calcite.plan.SubstitutionVisitor.MutableRels moved to org.apache.calcite.rel.mutable.MutableRels
Move And Rename Class	org.apache.calcite.plan.SubstitutionVisitor.MutableSetOp moved and renamed to org.apache.calcite.rel.mutable.MutableMultiRel
Change Class Access Modifier	private to package in class org.apache.calcite.plan.SubstitutionVisitor.Replacement
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,PrecedenceClimbingParserTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,ExtensionSqlParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,DateRangeRulesTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,CollectionTypeTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,PrecedenceClimbingParserTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,ExtensionSqlParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlAdvisorTest.class,RelMetadataTest.class,DateRangeRulesTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,MutableRelTest.class,UdfTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,CollectionTypeTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Change Class Access Modifier	private to package in class org.apache.calcite.rel.mutable.MutableRelType
Change Class Access Modifier	private to public in class org.apache.calcite.rel.mutable.MutableRelVisitor
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableRelVisitor
Change Class Access Modifier	protected to package in class org.apache.calcite.rel.mutable.MutableLeafRel
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableLeafRel
Change Method Access Modifier	package to protected in method protected MutableLeafRel(type MutableRelType, rel RelNode) from class org.apache.calcite.rel.mutable.MutableLeafRel
Change Class Access Modifier	protected to package in class org.apache.calcite.rel.mutable.MutableSingleRel
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableSingleRel
Change Method Access Modifier	package to protected in method protected MutableSingleRel(type MutableRelType, rowType RelDataType, input MutableRel) from class org.apache.calcite.rel.mutable.MutableSingleRel
Change Class Access Modifier	private to package in class org.apache.calcite.rel.mutable.MutableBiRel
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableBiRel
Change Method Access Modifier	package to protected in method protected MutableBiRel(type MutableRelType, cluster RelOptCluster, rowType RelDataType, left MutableRel, right MutableRel) from class org.apache.calcite.rel.mutable.MutableBiRel
Change Class Access Modifier	protected to public in class org.apache.calcite.rel.mutable.MutableRel
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableRel
Change Attribute Access Modifier	package to protected in attribute protected parent : MutableRel from class org.apache.calcite.rel.mutable.MutableRel
Change Attribute Access Modifier	package to protected in attribute protected ordinalInParent : int from class org.apache.calcite.rel.mutable.MutableRel
Change Attribute Access Modifier	package to public in attribute public rowType : RelDataType from class org.apache.calcite.rel.mutable.MutableRel
Change Attribute Access Modifier	package to protected in attribute protected type : MutableRelType from class org.apache.calcite.rel.mutable.MutableRel
Change Method Access Modifier	private to protected in method protected MutableRel(cluster RelOptCluster, rowType RelDataType, type MutableRelType) from class org.apache.calcite.rel.mutable.MutableRel
Change Class Access Modifier	private to public in class org.apache.calcite.rel.mutable.Holder
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.Holder
Change Method Access Modifier	package to public in method public of(input MutableRel) : Holder from class org.apache.calcite.rel.mutable.Holder
Remove Parameter	type : MutableRelType in method private Holder(type MutableRelType, rowType RelDataType, input MutableRel) from class org.apache.calcite.plan.SubstitutionVisitor.Holder
Change Class Access Modifier	protected to public in class org.apache.calcite.rel.mutable.MutableScan
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableScan
Rename Parameter	rel : TableScan to scan : TableScan in method public of(scan TableScan) : MutableScan from class org.apache.calcite.rel.mutable.MutableScan
Change Method Access Modifier	package to public in method public of(scan TableScan) : MutableScan from class org.apache.calcite.rel.mutable.MutableScan
Change Class Access Modifier	protected to public in class org.apache.calcite.rel.mutable.MutableValues
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableValues
Rename Parameter	rel : Values to values : Values in method public of(values Values) : MutableValues from class org.apache.calcite.rel.mutable.MutableValues
Change Method Access Modifier	package to public in method public of(values Values) : MutableValues from class org.apache.calcite.rel.mutable.MutableValues
Change Class Access Modifier	protected to public in class org.apache.calcite.rel.mutable.MutableProject
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableProject
Change Attribute Access Modifier	private to public in attribute public projects : List<RexNode> from class org.apache.calcite.rel.mutable.MutableProject
Rename Parameter	child : MutableRel to input : MutableRel in method public of(input MutableRel, exprList List<RexNode>, fieldNameList List<String>) : MutableRel from class org.apache.calcite.rel.mutable.MutableProject
Change Class Access Modifier	protected to public in class org.apache.calcite.rel.mutable.MutableFilter
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableFilter
Change Attribute Access Modifier	private to public in attribute public condition : RexNode from class org.apache.calcite.rel.mutable.MutableFilter
Change Class Access Modifier	protected to public in class org.apache.calcite.rel.mutable.MutableAggregate
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableAggregate
Change Attribute Access Modifier	private to public in attribute public groupSet : ImmutableBitSet from class org.apache.calcite.rel.mutable.MutableAggregate
Change Attribute Access Modifier	private to public in attribute public groupSets : ImmutableList<ImmutableBitSet> from class org.apache.calcite.rel.mutable.MutableAggregate
Change Attribute Access Modifier	private to public in attribute public aggCalls : List<AggregateCall> from class org.apache.calcite.rel.mutable.MutableAggregate
Change Method Access Modifier	package to public in method public of(input MutableRel, indicator boolean, groupSet ImmutableBitSet, groupSets ImmutableList<ImmutableBitSet>, aggCalls List<AggregateCall>) : MutableAggregate from class org.apache.calcite.rel.mutable.MutableAggregate
Change Class Access Modifier	protected to public in class org.apache.calcite.rel.mutable.MutableSort
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableSort
Change Attribute Access Modifier	private to public in attribute public collation : RelCollation from class org.apache.calcite.rel.mutable.MutableSort
Change Attribute Access Modifier	private to public in attribute public offset : RexNode from class org.apache.calcite.rel.mutable.MutableSort
Change Attribute Access Modifier	private to public in attribute public fetch : RexNode from class org.apache.calcite.rel.mutable.MutableSort
Change Method Access Modifier	package to public in method public of(input MutableRel, collation RelCollation, offset RexNode, fetch RexNode) : MutableSort from class org.apache.calcite.rel.mutable.MutableSort
Change Class Access Modifier	private to public in class org.apache.calcite.rel.mutable.MutableJoin
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableJoin
Change Attribute Access Modifier	protected to public in attribute public condition : RexNode from class org.apache.calcite.rel.mutable.MutableJoin
Change Attribute Type	variablesSet : ImmutableSet<CorrelationId> to variablesSet : Set<CorrelationId> in class org.apache.calcite.rel.mutable.MutableJoin
Change Attribute Access Modifier	protected to public in attribute public variablesSet : Set<CorrelationId> from class org.apache.calcite.rel.mutable.MutableJoin
Change Attribute Access Modifier	protected to public in attribute public joinType : JoinRelType from class org.apache.calcite.rel.mutable.MutableJoin
Add Attribute Modifier	final in attribute public joinType : JoinRelType from class org.apache.calcite.rel.mutable.MutableJoin
Change Class Access Modifier	protected to public in class org.apache.calcite.rel.mutable.MutableRels
Add Class Modifier	abstract in class org.apache.calcite.rel.mutable.MutableRels
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableRels
Change Method Access Modifier	private to public in method public descendants(query MutableRel) : List<MutableRel> from class org.apache.calcite.rel.mutable.MutableRels
Change Class Access Modifier	protected to package in class org.apache.calcite.rel.mutable.MutableMultiRel
Remove Class Modifier	static in class org.apache.calcite.plan.SubstitutionVisitor.MutableSetOp
Change Method Access Modifier	private to protected in method protected MutableMultiRel(cluster RelOptCluster, rowType RelDataType, type MutableRelType, inputs List<MutableRel>) from class org.apache.calcite.rel.mutable.MutableMultiRel
Rename Attribute	SCAN : MutableRelType to TABLE_SCAN : MutableRelType in class org.apache.calcite.rel.mutable.MutableRelType
Change Method Access Modifier	private to public in method public toMutable(rel RelNode) : MutableRel from class org.apache.calcite.rel.mutable.MutableRels
Move Method	private toMutable(rel RelNode) : MutableRel from class org.apache.calcite.plan.SubstitutionVisitor to public toMutable(rel RelNode) : MutableRel from class org.apache.calcite.rel.mutable.MutableRels
Move Method	private fromMutables(nodes List<MutableRel>) : List<RelNode> from class org.apache.calcite.plan.SubstitutionVisitor to private fromMutables(nodes List<MutableRel>) : List<RelNode> from class org.apache.calcite.rel.mutable.MutableRels
Change Method Access Modifier	private to public in method public fromMutable(node MutableRel) : RelNode from class org.apache.calcite.rel.mutable.MutableRels
Move Method	private fromMutable(node MutableRel) : RelNode from class org.apache.calcite.plan.SubstitutionVisitor to public fromMutable(node MutableRel) : RelNode from class org.apache.calcite.rel.mutable.MutableRels
Change Return Type	MutableRel to RelNode in method public apply(mutableRel MutableRel) : RelNode from class org.apache.calcite.rel.mutable.MutableRels.fromMutables.transform.new Function<MutableRel,RelNode>
Change Return Type	List<MutableRel> to List<RelNode> in method private fromMutables(nodes List<MutableRel>) : List<RelNode> from class org.apache.calcite.rel.mutable.MutableRels
Move And Rename Method	private copyMutables(nodes List<MutableRel>) : List<MutableRel> from class org.apache.calcite.plan.SubstitutionVisitor to private fromMutables(nodes List<MutableRel>) : List<RelNode> from class org.apache.calcite.rel.mutable.MutableRels
Move Method	public equalType(desc0 String, rel0 MutableRel, desc1 String, rel1 MutableRel, litmus Litmus) : boolean from class org.apache.calcite.plan.SubstitutionVisitor.MutableRels to public equalType(desc0 String, rel0 MutableRel, desc1 String, rel1 MutableRel, litmus Litmus) : boolean from class org.apache.calcite.plan.SubstitutionVisitor
Move Method	public replace(query MutableRel, find MutableRel, replace MutableRel) : Replacement from class org.apache.calcite.plan.SubstitutionVisitor.MutableRels to public replace(query MutableRel, find MutableRel, replace MutableRel) : Replacement from class org.apache.calcite.plan.SubstitutionVisitor
Move Method	private replaceRecurse(query MutableRel, find MutableRel, replace MutableRel) : Replacement from class org.apache.calcite.plan.SubstitutionVisitor.MutableRels to private replaceRecurse(query MutableRel, find MutableRel, replace MutableRel) : Replacement from class org.apache.calcite.plan.SubstitutionVisitor
Add Parameter	type : MutableRelType in method protected MutableSetOp(cluster RelOptCluster, rowType RelDataType, type MutableRelType, inputs List<MutableRel>, all boolean) from class org.apache.calcite.rel.mutable.MutableSetOp
Change Method Access Modifier	private to protected in method protected MutableSetOp(cluster RelOptCluster, rowType RelDataType, type MutableRelType, inputs List<MutableRel>, all boolean) from class org.apache.calcite.rel.mutable.MutableSetOp
Pull Up Method	private MutableUnion(cluster RelOptCluster, rowType RelDataType, inputs List<MutableRel>, all boolean) from class org.apache.calcite.plan.SubstitutionVisitor.MutableUnion to protected MutableSetOp(cluster RelOptCluster, rowType RelDataType, type MutableRelType, inputs List<MutableRel>, all boolean) from class org.apache.calcite.rel.mutable.MutableSetOp
Change Return Type	MutableUnion to MutableIntersect in method public of(rowType RelDataType, inputs List<MutableRel>, all boolean) : MutableIntersect from class org.apache.calcite.rel.mutable.MutableIntersect
Add Parameter	rowType : RelDataType in method public of(rowType RelDataType, inputs List<MutableRel>, all boolean) : MutableIntersect from class org.apache.calcite.rel.mutable.MutableIntersect
Change Method Access Modifier	package to public in method public of(rowType RelDataType, inputs List<MutableRel>, all boolean) : MutableIntersect from class org.apache.calcite.rel.mutable.MutableIntersect
Move Method	package of(inputs List<MutableRel>, all boolean) : MutableUnion from class org.apache.calcite.plan.SubstitutionVisitor.MutableUnion to public of(rowType RelDataType, inputs List<MutableRel>, all boolean) : MutableIntersect from class org.apache.calcite.rel.mutable.MutableIntersect
Pull Up Method	public hashCode() : int from class org.apache.calcite.plan.SubstitutionVisitor.MutableUnion to public hashCode() : int from class org.apache.calcite.rel.mutable.MutableSetOp
Move Method	public digest(buf StringBuilder) : StringBuilder from class org.apache.calcite.plan.SubstitutionVisitor.MutableUnion to public digest(buf StringBuilder) : StringBuilder from class org.apache.calcite.rel.mutable.MutableUnion
Move Method	public visit(node MutableRel) : void from class org.apache.calcite.plan.SubstitutionVisitor.MutableRelDumper to public visit(node MutableRel) : void from class org.apache.calcite.rel.mutable.MutableRel.MutableRelDumper
Move Method	public apply(rel MutableRel) : String from class org.apache.calcite.plan.SubstitutionVisitor.MutableRelDumper to public apply(rel MutableRel) : String from class org.apache.calcite.rel.mutable.MutableRel.MutableRelDumper
Developers have reported that 10708 commits involve refactoring but only 405 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 405 commits.

No refactorings detected at 868d64140d446cdb33652c0c76c4038b1ca26a14

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b6a26b42f23be180d01
Issue Title: : Not all RexUtil.simplifyXxx code paths carry the provided executor
Refactorings at ca48431ee7872f294de7a10a6da0892185e8e4a7
Extract Variable	rexBuilder : RexBuilder in method public implement(implementor EnumerableRelImplementor, pref Prefer) : Result from class org.apache.calcite.adapter.enumerable.EnumerableCalc
Add Parameter	call : UnifyRuleCall in method package createFilter(call UnifyRuleCall, query MutableFilter, target MutableFilter) : MutableFilter from class org.apache.calcite.plan.SubstitutionVisitor.FilterToFilterUnifyRule
Remove Parameter	rexBuilder : RexBuilder in method public splitFilter(rexBuilder RexBuilder, condition RexNode, target RexNode) : RexNode from class org.apache.calcite.plan.SubstitutionVisitor
Add Parameter	simplify : RexSimplify in method public splitFilter(simplify RexSimplify, condition RexNode, target RexNode) : RexNode from class org.apache.calcite.plan.SubstitutionVisitor
Change Parameter Type	rexBuilder : RexBuilder to simplify : RexSimplify in method package RexReplacer(simplify RexSimplify, reducibleExps List<RexNode>, reducedValues List<RexNode>, addCasts List<Boolean>) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.RexReplacer
Rename Parameter	rexBuilder : RexBuilder to simplify : RexSimplify in method package RexReplacer(simplify RexSimplify, reducibleExps List<RexNode>, reducedValues List<RexNode>, addCasts List<Boolean>) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.RexReplacer
Extract Variable	cluster : RelOptCluster in method protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Variable Modifier	final in variable rexBuilder : RexBuilder in method protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Variable Modifier	final in variable executor : RexExecutor in method protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Variable Modifier	final in variable simplifier : ExprSimplifier in method protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Change Variable Type	rexBuilder : RexBuilder to simplify : RexSimplify in method protected reduceExpressionsInternal(rel RelNode, simplify RexSimplify, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Parameterize Variable	rexBuilder : RexBuilder to simplify : RexSimplify in method protected reduceExpressionsInternal(rel RelNode, simplify RexSimplify, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Extract Method	public normalize(rexBuilder RexBuilder, simplify RexSimplify) : RexProgram extracted from public normalize(rexBuilder RexBuilder, simplify boolean) : RexProgram in class org.apache.calcite.rex.RexProgram
Add Method Annotation	@Deprecated in method public normalize(rexBuilder RexBuilder, simplify boolean) : RexProgram from class org.apache.calcite.rex.RexProgram
Add Method Annotation	@Deprecated in method public create(rexBuilder RexBuilder, inputRowType RelDataType, exprList List<RexNode>, projectList List<? extends RexNode>, condition RexNode, outputRowType RelDataType, normalize boolean, simplify boolean) : RexProgramBuilder from class org.apache.calcite.rex.RexProgramBuilder
Change Parameter Type	simplify : boolean to simplify : RexSimplify in method private RexProgramBuilder(rexBuilder RexBuilder, inputRowType RelDataType, exprList List<RexNode>, projectList Iterable<? extends RexNode>, condition RexNode, outputRowType RelDataType, normalize boolean, simplify RexSimplify) from class org.apache.calcite.rex.RexProgramBuilder
Change Variable Type	unknownAsFalseCall : Boolean to unknownAsFalseCall : boolean in method public visitCall(call RexCall) : RexNode from class org.apache.calcite.rex.RexUtil.ExprSimplifier
Add Method Annotation	@Deprecated in method public simplify(rexBuilder RexBuilder, e RexNode) : RexNode from class org.apache.calcite.rex.RexUtil
Add Method Annotation	@Deprecated in method public simplify(rexBuilder RexBuilder, e RexNode, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Add Method Annotation	@Deprecated in method public simplifyAnds(rexBuilder RexBuilder, nodes Iterable<? extends RexNode>) : RexNode from class org.apache.calcite.rex.RexUtil
Add Method Annotation	@Deprecated in method public simplifyAnds(rexBuilder RexBuilder, nodes Iterable<? extends RexNode>, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Add Method Annotation	@Deprecated in method public simplifyAnd(rexBuilder RexBuilder, e RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Add Method Annotation	@Deprecated in method public simplifyAnd2(rexBuilder RexBuilder, terms List<RexNode>, notTerms List<RexNode>) : RexNode from class org.apache.calcite.rex.RexUtil
Add Method Annotation	@Deprecated in method public simplifyAnd2ForUnknownAsFalse(rexBuilder RexBuilder, terms List<RexNode>, notTerms List<RexNode>) : RexNode from class org.apache.calcite.rex.RexUtil
Add Method Annotation	@Deprecated in method public simplifyOr(rexBuilder RexBuilder, call RexCall) : RexNode from class org.apache.calcite.rex.RexUtil
Add Method Annotation	@Deprecated in method public simplifyOrs(rexBuilder RexBuilder, terms List<RexNode>) : RexNode from class org.apache.calcite.rex.RexUtil
Change Method Access Modifier	private to package in method package op(kind SqlKind) : SqlOperator from class org.apache.calcite.rex.RexUtil
Change Attribute Access Modifier	package to private in attribute private rexBuilder : RexBuilder from class org.apache.calcite.test.MaterializationTest
Extract Class	org.apache.calcite.rex.RexSimplify from class org.apache.calcite.rel.rules.ReduceExpressionsRule.RexReplacer
Extract Class	org.apache.calcite.rex.RexSimplify from class org.apache.calcite.rex.RexUtil.ExprSimplifier
Extract Class	org.apache.calcite.rex.RexSimplify from class org.apache.calcite.tools.RelBuilder
Move Attribute	private rexBuilder : RexBuilder from class org.apache.calcite.rel.rules.ReduceExpressionsRule.RexReplacer to public rexBuilder : RexBuilder from class org.apache.calcite.rex.RexSimplify
Change Attribute Access Modifier	private to public in attribute public rexBuilder : RexBuilder from class org.apache.calcite.rex.RexSimplify
Change Attribute Access Modifier	private to public in attribute public rexBuilder : RexBuilder from class org.apache.calcite.rex.RexSimplify
Move Attribute	private rexBuilder : RexBuilder from class org.apache.calcite.rex.RexUtil.ExprSimplifier to public rexBuilder : RexBuilder from class org.apache.calcite.rex.RexSimplify
Move Attribute	private unknownAsFalse : boolean from class org.apache.calcite.rex.RexUtil.ExprSimplifier to package unknownAsFalse : boolean from class org.apache.calcite.rex.RexSimplify
Change Attribute Access Modifier	private to package in attribute package unknownAsFalse : boolean from class org.apache.calcite.rex.RexSimplify
Move Attribute	private executor : RexExecutor from class org.apache.calcite.rex.RexUtil.ExprSimplifier to private executor : RexExecutor from class org.apache.calcite.rex.RexSimplify
Move Attribute	private executor : RexExecutor from class org.apache.calcite.tools.RelBuilder to private executor : RexExecutor from class org.apache.calcite.rex.RexSimplify
Remove Parameter	rexBuilder : RexBuilder in method public simplifyPreservingType(rexBuilder RexBuilder, e RexNode, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Parameter	executor : RexExecutor in method public simplifyPreservingType(rexBuilder RexBuilder, e RexNode, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Method Modifier	static in method public simplifyPreservingType(rexBuilder RexBuilder, e RexNode, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Move Method	public simplifyPreservingType(rexBuilder RexBuilder, e RexNode, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil to public simplifyPreservingType(e RexNode) : RexNode from class org.apache.calcite.rex.RexSimplify
Remove Parameter	rexBuilder : RexBuilder in method public simplify(rexBuilder RexBuilder, e RexNode, unknownAsFalse boolean, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Parameter	unknownAsFalse : boolean in method public simplify(rexBuilder RexBuilder, e RexNode, unknownAsFalse boolean, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Parameter	executor : RexExecutor in method public simplify(rexBuilder RexBuilder, e RexNode, unknownAsFalse boolean, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Method Modifier	static in method public simplify(rexBuilder RexBuilder, e RexNode, unknownAsFalse boolean, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Move Method	public simplify(rexBuilder RexBuilder, e RexNode, unknownAsFalse boolean, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil to public simplify(e RexNode) : RexNode from class org.apache.calcite.rex.RexSimplify
Remove Parameter	rexBuilder : RexBuilder in method private simplifyComparison(rexBuilder RexBuilder, e RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Parameter	unknownAsFalse : boolean in method private simplifyComparison(rexBuilder RexBuilder, e RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Method Modifier	static in method private simplifyComparison(rexBuilder RexBuilder, e RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Move Method	private simplifyComparison(rexBuilder RexBuilder, e RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil to private simplifyComparison(e RexCall) : RexNode from class org.apache.calcite.rex.RexSimplify
Remove Parameter	rexBuilder : RexBuilder in method private simplifyList(rexBuilder RexBuilder, terms List<RexNode>) : void from class org.apache.calcite.rex.RexUtil
Remove Method Modifier	static in method private simplifyList(rexBuilder RexBuilder, terms List<RexNode>) : void from class org.apache.calcite.rex.RexUtil
Move Method	private simplifyList(rexBuilder RexBuilder, terms List<RexNode>) : void from class org.apache.calcite.rex.RexUtil to private simplifyList(terms List<RexNode>) : void from class org.apache.calcite.rex.RexSimplify
Remove Parameter	rexBuilder : RexBuilder in method private simplifyNot(rexBuilder RexBuilder, call RexCall) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Method Modifier	static in method private simplifyNot(rexBuilder RexBuilder, call RexCall) : RexNode from class org.apache.calcite.rex.RexUtil
Move Method	private simplifyNot(rexBuilder RexBuilder, call RexCall) : RexNode from class org.apache.calcite.rex.RexUtil to private simplifyNot(call RexCall) : RexNode from class org.apache.calcite.rex.RexSimplify
Remove Parameter	rexBuilder : RexBuilder in method private simplifyIs(rexBuilder RexBuilder, call RexCall) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Method Modifier	static in method private simplifyIs(rexBuilder RexBuilder, call RexCall) : RexNode from class org.apache.calcite.rex.RexUtil
Move Method	private simplifyIs(rexBuilder RexBuilder, call RexCall) : RexNode from class org.apache.calcite.rex.RexUtil to private simplifyIs(call RexCall) : RexNode from class org.apache.calcite.rex.RexSimplify
Extract Variable	arg : RexNode in method private simplifyIs2(kind SqlKind, a RexNode) : RexNode from class org.apache.calcite.rex.RexSimplify
Remove Parameter	rexBuilder : RexBuilder in method private simplifyIs2(rexBuilder RexBuilder, kind SqlKind, a RexNode) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Method Modifier	static in method private simplifyIs2(rexBuilder RexBuilder, kind SqlKind, a RexNode) : RexNode from class org.apache.calcite.rex.RexUtil
Move Method	private simplifyIs2(rexBuilder RexBuilder, kind SqlKind, a RexNode) : RexNode from class org.apache.calcite.rex.RexUtil to private simplifyIs2(kind SqlKind, a RexNode) : RexNode from class org.apache.calcite.rex.RexSimplify
Remove Parameter	rexBuilder : RexBuilder in method private simplifyIsNotNull(rexBuilder RexBuilder, a RexNode) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Method Modifier	static in method private simplifyIsNotNull(rexBuilder RexBuilder, a RexNode) : RexNode from class org.apache.calcite.rex.RexUtil
Move Method	private simplifyIsNotNull(rexBuilder RexBuilder, a RexNode) : RexNode from class org.apache.calcite.rex.RexUtil to private simplifyIsNotNull(a RexNode) : RexNode from class org.apache.calcite.rex.RexSimplify
Remove Parameter	rexBuilder : RexBuilder in method private simplifyCase(rexBuilder RexBuilder, call RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Parameter	unknownAsFalse : boolean in method private simplifyCase(rexBuilder RexBuilder, call RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Method Modifier	static in method private simplifyCase(rexBuilder RexBuilder, call RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil
Move Method	private simplifyCase(rexBuilder RexBuilder, call RexCall, unknownAsFalse boolean) : RexNode from class org.apache.calcite.rex.RexUtil to private simplifyCase(call RexCall) : RexNode from class org.apache.calcite.rex.RexSimplify
Move Method	private casePairs(rexBuilder RexBuilder, operands List<RexNode>) : List<Pair<RexNode,RexNode>> from class org.apache.calcite.rex.RexUtil to private casePairs(rexBuilder RexBuilder, operands List<RexNode>) : List<Pair<RexNode,RexNode>> from class org.apache.calcite.rex.RexSimplify
Remove Parameter	rexBuilder : RexBuilder in method private simplifyCast(rexBuilder RexBuilder, e RexCall, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Parameter	executor : RexExecutor in method private simplifyCast(rexBuilder RexBuilder, e RexCall, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Remove Method Modifier	static in method private simplifyCast(rexBuilder RexBuilder, e RexCall, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil
Move Method	private simplifyCast(rexBuilder RexBuilder, e RexCall, executor RexExecutor) : RexNode from class org.apache.calcite.rex.RexUtil to private simplifyCast(e RexCall) : RexNode from class org.apache.calcite.rex.RexSimplify
Extract And Move Method	public composeDisjunction(rexBuilder RexBuilder, nodes Iterable<? extends RexNode>) : RexNode extracted from private or(nodes Iterable<? extends RexNode>) : RexNode in class org.apache.calcite.rex.RexUtil.CnfHelper & moved to class org.apache.calcite.rex.RexUtil
Extract And Move Method	public composeDisjunction(rexBuilder RexBuilder, nodes Iterable<? extends RexNode>) : RexNode extracted from private or(nodes Iterable<? extends RexNode>) : RexNode in class org.apache.calcite.rex.RexUtil.DnfHelper & moved to class org.apache.calcite.rex.RexUtil
Developers have reported that 10708 commits involve refactoring but only 406 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 406 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b7e26b42f23be180db3
Issue Title: : Adding a cast around the null literal in aggregate rules
Refactorings at 5431bd992030cbbcde59d63d2b0b84c4c78fbde4
Extract Variable	typeFactory : RelDataTypeFactory in method package toRex(relInput RelInput, o Object) : RexNode from class org.apache.calcite.rel.externalize.RelJson
Extract Method	public makeNullLiteral(type RelDataType) : RexLiteral extracted from public makeNullLiteral(typeName SqlTypeName, precision int) : RexNode in class org.apache.calcite.rex.RexBuilder
Extract Method	public makeNullLiteral(type RelDataType) : RexLiteral extracted from public makeNullLiteral(typeName SqlTypeName) : RexNode in class org.apache.calcite.rex.RexBuilder
Add Method Annotation	@Deprecated in method public makeNullLiteral(typeName SqlTypeName, precision int) : RexNode from class org.apache.calcite.rex.RexBuilder
Add Method Annotation	@Deprecated in method public makeNullLiteral(typeName SqlTypeName) : RexNode from class org.apache.calcite.rex.RexBuilder
Extract Variable	varcharType : RelDataType in method private addRow(builder ImmutableList.Builder<ImmutableList<RexLiteral>>, rexBuilder RexBuilder, values Object...) : void from class org.apache.calcite.test.RelMetadataTest
Extract Variable	intType : RelDataType in method public setUp() : void from class org.apache.calcite.test.RexProgramTest
Change Variable Type	null_ : RexNode to null_ : RexLiteral in method public testSimplifyIsNotNull() : void from class org.apache.calcite.test.RexProgramTest
Developers have reported that 10708 commits involve refactoring but only 407 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 407 commits.

No refactorings detected at d6093f080215a51c7617747440569c13611ee70d

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b8726b42f23be180e13
Issue Title: : Druid adapter: add IN filter
Refactorings at f8546915671cc4d96fa3b5561e289c3bfd80209f
Change Class Access Modifier	private to protected in class org.apache.calcite.adapter.druid.DruidQuery.Translator
Add Class Annotation	@VisibleForTesting in class org.apache.calcite.adapter.druid.DruidQuery.Translator
Extract Variable	numeric : boolean in method private translateFilter(e RexNode) : JsonFilter from class org.apache.calcite.adapter.druid.DruidQuery.Translator
Remove Method Annotation	@SuppressWarnings("incomplete-switch") in method private translateFilter(e RexNode) : JsonFilter from class org.apache.calcite.adapter.druid.DruidQuery.Translator
Change Class Access Modifier	private to protected in class org.apache.calcite.adapter.druid.DruidQuery.JsonBound
Add Class Annotation	@VisibleForTesting in class org.apache.calcite.adapter.druid.DruidQuery.JsonBound
Change Parameter Type	fields : List<? extends JsonFilter> to fields : Iterable<? extends JsonFilter> in method private JsonCompositeFilter(type String, fields Iterable<? extends JsonFilter>) from class org.apache.calcite.adapter.druid.DruidQuery.JsonCompositeFilter
Developers have reported that 10708 commits involve refactoring but only 408 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 408 commits.

No refactorings detected at 6cb4d45b02b03a71f4fe1ce52844f750e3ec1fd8

No refactorings detected at 6cb4d45b02b03a71f4fe1ce52844f750e3ec1fd8

No refactorings detected at d6c5d6e122f23ea1e62a4e02636f79011cbe2248

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b8d26b42f23be180e57
Issue Title: : Add MinRowCount metadata
Refactorings at 3b78d1d74e33977a93005b65b0b209844e783fd1
Add Variable Modifier	final in variable result : Double in method private checkRowCount(sql String, expected double, expectedMin double, expectedMax double) : void from class org.apache.calcite.test.RelMetadataTest
Add Parameter	expectedMin : double in method private checkRowCount(sql String, expected double, expectedMin double, expectedMax double) : void from class org.apache.calcite.test.RelMetadataTest
Add Parameter	expectedMax : double in method private checkRowCount(sql String, expected double, expectedMin double, expectedMax double) : void from class org.apache.calcite.test.RelMetadataTest
Developers have reported that 10708 commits involve refactoring but only 409 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 409 commits.

No refactorings detected at 5184aa7baba6298a31fa063e5ac2c55e41a21a13

No refactorings detected at c90fddfb1c600e6c870558778c50ebfbcd5f1799

No refactorings detected at 7f9f4a165006756ace562d618b81909600736fed

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b9726b42f23be180ed0
Issue Title: : Add an alternative match pattern for SemiJoinRule
Refactorings at 824d7e7a5943891ed39052c4e6e737646e52721c
Add Class Modifier	abstract in class org.apache.calcite.rel.rules.SemiJoinRule
Extract Method	protected perform(call RelOptRuleCall, project Project, join Join, left RelNode, aggregate Aggregate) : void extracted from public onMatch(call RelOptRuleCall) : void in class org.apache.calcite.rel.rules.SemiJoinRule
Change Method Access Modifier	public to protected in method protected SemiJoinRule(projectClass Class<Project>, joinClass Class<Join>, aggregateClass Class<Aggregate>, relBuilderFactory RelBuilderFactory, description String) from class org.apache.calcite.rel.rules.SemiJoinRule
Rename Attribute	INSTANCE : SemiJoinRule to PROJECT : SemiJoinRule in class org.apache.calcite.rel.rules.SemiJoinRule
Developers have reported that 10708 commits involve refactoring but only 410 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 410 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3b9d26b42f23be180f1b
Issue Title: : Literals may lose precision during expression reduction
Refactorings at 010f7abb9c17ea3a7763988d667ef84c50651e11
Extract Variable	typeName : SqlTypeName in method private gatherConstraints(clazz Class<C>, predicate RexNode, map Map<RexNode,C>, excludeSet Set<RexNode>, rexBuilder RexBuilder) : void from class org.apache.calcite.rex.RexUtil
Developers have reported that 10708 commits involve refactoring but only 411 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 411 commits.

No refactorings detected at 35cd2abc8a53c746eabcd9f273ec2dd3b9dee98e

No refactorings detected at 67d23ba81e57ce2aca86d7d995ed44bddc5f8cc3

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3bbf26b42f23be180f8c
Issue Title: : Support extended columns in DML
Refactorings at 8a1a287ded230138390f859584fa8f847d9e7a0f
Inline Method	private extend(table ExtensibleTable, extendedFields List<RelDataTypeField>) : RelOptTable inlined to public extend(extendedFields List<RelDataTypeField>) : RelOptTable in class org.apache.calcite.prepare.Prepare.AbstractPreparingTable
Add Method Modifier	final in method public extend(extendedFields List<RelDataTypeField>) : RelOptTable from class org.apache.calcite.prepare.Prepare.AbstractPreparingTable
Add Parameter	initializerContext : InitializerContext in method public columnHasDefaultValue(rowType RelDataType, ordinal int, initializerContext InitializerContext) : boolean from class org.apache.calcite.prepare.Prepare.AbstractPreparingTable
Remove Parameter	typeFactory : RelDataTypeFactory in method private ModifiableViewTableInitializerExpressionFactory(typeFactory RelDataTypeFactory) from class org.apache.calcite.schema.impl.ModifiableViewTable.ModifiableViewTableInitializerExpressionFactory
Extract Variable	typeFactory : RelDataTypeFactory in method public newColumnDefaultValue(table RelOptTable, iColumn int, context InitializerContext) : RexNode from class org.apache.calcite.schema.impl.ModifiableViewTable.ModifiableViewTableInitializerExpressionFactory
Add Parameter	context : InitializerContext in method public newColumnDefaultValue(table RelOptTable, iColumn int, context InitializerContext) : RexNode from class org.apache.calcite.schema.impl.ModifiableViewTable.ModifiableViewTableInitializerExpressionFactory
Add Parameter	context : InitializerContext in method public newAttributeInitializer(type RelDataType, constructor SqlFunction, iAttribute int, constructorArgs List<RexNode>, context InitializerContext) : RexNode from class org.apache.calcite.schema.impl.ModifiableViewTable.ModifiableViewTableInitializerExpressionFactory
Remove Parameter	typeFactory : RelDataTypeFactory in method public ModifiableViewTable(elementType Type, rowType RelProtoDataType, viewSql String, schemaPath List<String>, viewPath List<String>, table Table, tablePath Path, constraint RexNode, columnMapping ImmutableIntList, typeFactory RelDataTypeFactory) from class org.apache.calcite.schema.impl.ModifiableViewTable
Encapsulate Attribute	private viewPath : List<String> from class org.apache.calcite.schema.impl.ViewTable
Change Attribute Access Modifier	private to public in attribute public extendList : SqlNodeList from class org.apache.calcite.sql.validate.IdentifierNamespace
Inline Variable	extendedFields : List<RelDataTypeField> in method public validateImpl(targetRowType RelDataType) : RelDataType from class org.apache.calcite.sql.validate.IdentifierNamespace
Add Variable Modifier	final in variable targetNamespace : SqlValidatorNamespace in method public validateInsert(insert SqlInsert) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable table : SqlValidatorTable in method public validateInsert(insert SqlInsert) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable targetRowType : RelDataType in method public validateInsert(insert SqlInsert) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable source : SqlNode in method public validateInsert(insert SqlInsert) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable sqlSelect : SqlSelect in method public validateInsert(insert SqlInsert) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable scope : SqlValidatorScope in method public validateInsert(insert SqlInsert) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable sourceRowType : RelDataType in method public validateInsert(insert SqlInsert) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable logicalTargetRowType : RelDataType in method public validateInsert(insert SqlInsert) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable logicalSourceRowType : RelDataType in method public validateInsert(insert SqlInsert) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable sqlSelect : SqlSelect in method public validateDelete(call SqlDelete) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable table : SqlValidatorTable in method public validateDelete(call SqlDelete) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Variable Type	targetNamespace : IdentifierNamespace to targetNamespace : SqlValidatorNamespace in method public validateDelete(call SqlDelete) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable targetNamespace : SqlValidatorNamespace in method public validateDelete(call SqlDelete) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable table : SqlValidatorTable in method public validateUpdate(call SqlUpdate) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable targetRowType : RelDataType in method public validateUpdate(call SqlUpdate) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable select : SqlSelect in method public validateUpdate(call SqlUpdate) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Variable Type	targetNamespace : IdentifierNamespace to targetNamespace : SqlValidatorNamespace in method public validateUpdate(call SqlUpdate) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable targetNamespace : SqlValidatorNamespace in method public validateUpdate(call SqlUpdate) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Add Variable Modifier	final in variable sourceRowType : RelDataType in method public validateUpdate(call SqlUpdate) : void from class org.apache.calcite.sql.validate.SqlValidatorImpl
Extract Method	private getRelOptTable(tableNamespace TableNamespace, catalogReader Prepare.CatalogReader, datasetName String, usedDataset boolean[], extendedFields List<RelDataTypeField>) : RelOptTable extracted from public getRelOptTable(namespace SqlValidatorNamespace, catalogReader Prepare.CatalogReader, datasetName String, usedDataset boolean[]) : RelOptTable in class org.apache.calcite.sql.validate.SqlValidatorUtil
Change Method Access Modifier	package to public in method public mapNameToIndex(fields List<RelDataTypeField>) : Map<String,Integer> from class org.apache.calcite.sql.validate.SqlValidatorUtil
Change Parameter Type	validator : SqlValidator to typeFactory : RelDataTypeFactory in method public getExtendedColumns(typeFactory RelDataTypeFactory, table SqlValidatorTable, extendedColumns SqlNodeList) : List<RelDataTypeField> from class org.apache.calcite.sql.validate.SqlValidatorUtil
Rename Parameter	validator : SqlValidator to typeFactory : RelDataTypeFactory in method public getExtendedColumns(typeFactory RelDataTypeFactory, table SqlValidatorTable, extendedColumns SqlNodeList) : List<RelDataTypeField> from class org.apache.calcite.sql.validate.SqlValidatorUtil
Change Parameter Type	fields : ImmutableList<RelDataTypeField> to fields : List<RelDataTypeField> in method private TableNamespace(validator SqlValidatorImpl, table SqlValidatorTable, fields List<RelDataTypeField>) from class org.apache.calcite.sql.validate.TableNamespace
Change Method Access Modifier	package to private in method private TableNamespace(validator SqlValidatorImpl, table SqlValidatorTable, fields List<RelDataTypeField>) from class org.apache.calcite.sql.validate.TableNamespace
Localize Parameter	extendedFields : List<RelDataTypeField> to extendedFields : List<RelDataTypeField> in method public extend(extendList SqlNodeList) : TableNamespace from class org.apache.calcite.sql.validate.TableNamespace
Add Variable Modifier	final in variable extendedFields : List<RelDataTypeField> in method public extend(extendList SqlNodeList) : TableNamespace from class org.apache.calcite.sql.validate.TableNamespace
Add Parameter	extendList : SqlNodeList in method public extend(extendList SqlNodeList) : TableNamespace from class org.apache.calcite.sql.validate.TableNamespace
Add Parameter	context : InitializerContext in method public newColumnDefaultValue(table RelOptTable, iColumn int, context InitializerContext) : RexNode from class org.apache.calcite.sql2rel.NullInitializerExpressionFactory
Add Parameter	context : InitializerContext in method public newAttributeInitializer(type RelDataType, constructor SqlFunction, iAttribute int, constructorArgs List<RexNode>, context InitializerContext) : RexNode from class org.apache.calcite.sql2rel.NullInitializerExpressionFactory
Extract Variable	targetNs : SqlValidatorNamespace in method protected getTargetTable(call SqlNode) : RelOptTable from class org.apache.calcite.sql2rel.SqlToRelConverter
Extract Variable	dmlNamespace : SqlValidatorImpl.DmlNamespace in method protected getTargetTable(call SqlNode) : RelOptTable from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Variable Modifier	final in variable targetNs : SqlValidatorNamespace in method protected getTargetTable(call SqlNode) : RelOptTable from class org.apache.calcite.sql2rel.SqlToRelConverter
Add Parameter	context : InitializerContext in method public newColumnDefaultValue(table RelOptTable, iColumn int, context InitializerContext) : RexNode from class org.apache.calcite.test.MockCatalogReader.CountingFactory
Add Parameter	context : InitializerContext in method public newAttributeInitializer(type RelDataType, constructor SqlFunction, iAttribute int, constructorArgs List<RexNode>, context InitializerContext) : RexNode from class org.apache.calcite.test.MockCatalogReader.CountingFactory
Add Parameter	context : InitializerContext in method public newColumnDefaultValue(table RelOptTable, iColumn int, context InitializerContext) : RexNode from class org.apache.calcite.test.MockCatalogReader.init.empInitializerExpressionFactory.new NullInitializerExpressionFactory
Extract And Move Method	public checkIdentifierListForDuplicates(columnList List<SqlNode>, validationErrorFunction SqlValidatorImpl.ValidationErrorFunction) : void extracted from public validateWithItem(withItem SqlWithItem) : void in class org.apache.calcite.sql.validate.SqlValidatorImpl & moved to class org.apache.calcite.sql.validate.SqlValidatorUtil
Add Parameter	initializerContext : InitializerContext in method public columnHasDefaultValue(rowType RelDataType, ordinal int, initializerContext InitializerContext) : boolean from class org.apache.calcite.sql.validate.SqlValidatorTable
Add Parameter	context : InitializerContext in method public newColumnDefaultValue(table RelOptTable, iColumn int, context InitializerContext) : RexNode from class org.apache.calcite.sql2rel.InitializerExpressionFactory
Add Parameter	context : InitializerContext in method public newAttributeInitializer(type RelDataType, constructor SqlFunction, iAttribute int, constructorArgs List<RexNode>, context InitializerContext) : RexNode from class org.apache.calcite.sql2rel.InitializerExpressionFactory
Developers have reported that 10708 commits involve refactoring but only 412 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 412 commits.

No refactorings detected at 27ca3109539eba4324b3bf4fcf4065cb7a5d300c

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3bda26b42f23be181021
Issue Title: : Rewriting of queries using materialized views with joins and aggregates
Refactorings at 84b49f5b48842708e9f4d912b4f9564745d74bc6
Move Class	org.apache.calcite.rel.metadata.RelTableRef moved to org.apache.calcite.rex.RexTableInputRef.RelTableRef
Rename Variable	targets : List<RexNode> to conditions : List<RexNode> in method private splitOr(rexBuilder RexBuilder, condition RexNode, target RexNode) : RexNode from class org.apache.calcite.plan.SubstitutionVisitor
Change Variable Type	qualifiedNamesToRefs : Multimap<String,RelTableRef> to qualifiedNamesToRefs : Multimap<List<String>,RelTableRef> in method public getExpressionLineage(rel Join, mq RelMetadataQuery, outputExpression RexNode) : Set<RexNode> from class org.apache.calcite.rel.metadata.RelMdExpressionLineage
Change Variable Type	qualifiedNamesToRefs : Multimap<String,RelTableRef> to qualifiedNamesToRefs : Multimap<List<String>,RelTableRef> in method public getExpressionLineage(rel Union, mq RelMetadataQuery, outputExpression RexNode) : Set<RexNode> from class org.apache.calcite.rel.metadata.RelMdExpressionLineage
Change Return Type	String to List<String> in method public getQualifiedName() : List<String> from class org.apache.calcite.rex.RexTableInputRef
Change Method Access Modifier	public to private in method private RexTableInputRef(tableRef RelTableRef, index int, type RelDataType) from class org.apache.calcite.rex.RexTableInputRef
Change Attribute Type	EMP_QNAME : String to EMP_QNAME : List<String> in class org.apache.calcite.test.RelMetadataTest
Change Variable Type	set : Set<String> to set : Set<List<String>> in method public testExpressionLineageMultiUnion() : void from class org.apache.calcite.test.RelMetadataTest
Add Class Modifier	static in class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Rename Method	public getIdentifier() : int renamed to public getEntityNumber() : int in class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Change Attribute Type	qualifiedName : String to qualifiedName : List<String> in class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Change Parameter Type	qualifiedName : String to qualifiedName : List<String> in method private RelTableRef(qualifiedName List<String>, entityNumber int) from class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Rename Parameter	identifier : int to entityNumber : int in method private RelTableRef(qualifiedName List<String>, entityNumber int) from class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Change Method Access Modifier	public to private in method private RelTableRef(qualifiedName List<String>, entityNumber int) from class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Change Return Type	String to List<String> in method public getQualifiedName() : List<String> from class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Rename Attribute	identifier : int to entityNumber : int in class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Developers have reported that 10708 commits involve refactoring but only 413 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 413 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3bda26b42f23be181021
Issue Title: : Rewriting of queries using materialized views with joins and aggregates
Refactorings at 1f81e1353605fc2d16de9b4d56821736b0e82464
Add Method Annotation	@SuppressWarnings({"rawtypes","unchecked"}) in method protected getTableMap() : Map<String,Table> from class org.apache.calcite.adapter.java.ReflectiveSchema
Rename Variable	viewAggCallIndexes : List<Integer> to queryAggCallIndexes : List<Integer> in method protected unify(rexBuilder RexBuilder, relBuilder RelBuilder, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>, mq RelMetadataQuery) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Change Variable Type	queryPreds : RexNode[] to queryPreds : Triple<RexNode,RexNode,RexNode> in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Change Variable Type	viewPreds : RexNode[] to viewPreds : Triple<RexNode,RexNode,RexNode> in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Change Return Type	RexNode[] to Triple<RexNode,RexNode,RexNode> in method private splitPredicates(rexBuilder RexBuilder, pred RexNode) : Triple<RexNode,RexNode,RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	predicates : ImmutableList<RexNode> to pred : RexNode in method private splitPredicates(rexBuilder RexBuilder, pred RexNode) : Triple<RexNode,RexNode,RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Change Parameter Type	predicates : ImmutableList<RexNode> to pred : RexNode in method private splitPredicates(rexBuilder RexBuilder, pred RexNode) : Triple<RexNode,RexNode,RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Parameter	queryEquiColumnsPreds : RexNode in method private generateEquivalenceClasses(rexBuilder RexBuilder, queryEquiColumnsPreds RexNode, qEC EquivalenceClasses, viewEquiColumnsPreds RexNode, vEC EquivalenceClasses) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Parameter	viewEquiColumnsPreds : RexNode in method private generateEquivalenceClasses(rexBuilder RexBuilder, queryEquiColumnsPreds RexNode, qEC EquivalenceClasses, viewEquiColumnsPreds RexNode, vEC EquivalenceClasses) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	qualifiedName : List<String> to table : RelOptTable in method private RelTableRef(table RelOptTable, entityNumber int) from class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Change Parameter Type	qualifiedName : List<String> to table : RelOptTable in method private RelTableRef(table RelOptTable, entityNumber int) from class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Change Parameter Type	qualifiedName : List<String> to table : RelOptTable in method public of(table RelOptTable, entityNumber int) : RelTableRef from class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Rename Parameter	qualifiedName : List<String> to table : RelOptTable in method public of(table RelOptTable, entityNumber int) : RelTableRef from class org.apache.calcite.rex.RexTableInputRef.RelTableRef
Developers have reported that 10708 commits involve refactoring but only 414 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 414 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3bdb26b42f23be181022
Issue Title: : Add rule to perform rewriting of queries using materialized views with joins
Refactorings at 435b6d47b195f55e4a926da3ba27f3bb0e5699cc
Extract Method	private checkMaterialize(materialize String, query String, model String, explainChecker Function<ResultSet,Void>, rules RuleSet) : void extracted from private checkMaterialize(materialize String, query String, model String, explainChecker Function<ResultSet,Void>) : void in class org.apache.calcite.test.MaterializationTest
Extract Variable	that : CalciteAssert.AssertQuery in method private checkMaterialize(materialize String, query String, model String, explainChecker Function<ResultSet,Void>, rules RuleSet) : void from class org.apache.calcite.test.MaterializationTest
Change Variable Type	usedTables : Set<RelOptTable> to usedTables : List<RelOptTable> in method public findAllTables(rel RelNode) : List<RelOptTable> from class org.apache.calcite.plan.RelOptUtil
Change Return Type	Set<RelOptTable> to List<RelOptTable> in method public findAllTables(rel RelNode) : List<RelOptTable> from class org.apache.calcite.plan.RelOptUtil
Change Method Access Modifier	private to public in method public findAllTables(rel RelNode) : List<RelOptTable> from class org.apache.calcite.plan.RelOptUtil
Move And Rename Method	private findTables(rel RelNode) : Set<RelOptTable> from class org.apache.calcite.plan.volcano.VolcanoPlanner to public findAllTables(rel RelNode) : List<RelOptTable> from class org.apache.calcite.plan.RelOptUtil
Developers have reported that 10708 commits involve refactoring but only 415 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 415 commits.

No refactorings detected at 9c10c3da15ee65190cca4767d9a52406ba9ba1b0

No refactorings detected at 868d64140d446cdb33652c0c76c4038b1ca26a14

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3bf526b42f23be1810fc
Issue Title: : Create a read-consistent view of CalciteSchema for each statement compilation
Refactorings at 4519ef6e599ebe9b1c182016bea62d0ac920ea1a
Extract Method	private createTableMap() : Map<String,Table> extracted from protected getTableMap() : Map<String,Table> in class org.apache.calcite.adapter.java.ReflectiveSchema
Extract Method	private createFunctionMap() : Multimap<String,Function> extracted from protected getFunctionMultimap() : Multimap<String,Function> in class org.apache.calcite.adapter.java.ReflectiveSchema
Add Parameter	rootSchema : CalciteSchema in method package DataContextImpl(connection CalciteConnectionImpl, parameters Map<String,Object>, rootSchema CalciteSchema) from class org.apache.calcite.jdbc.CalciteConnectionImpl.DataContextImpl
Add Parameter	rootSchema : CalciteSchema in method public createDataContext(parameterValues Map<String,Object>, rootSchema CalciteSchema) : DataContext from class org.apache.calcite.jdbc.CalciteConnectionImpl
Extract Variable	context : Context in method public prepare(ch ConnectionHandle, sql String, maxRowCount long) : StatementHandle from class org.apache.calcite.jdbc.CalciteMetaImpl
Extract Variable	query : CalcitePrepare.Query<Object> in method public prepare(ch ConnectionHandle, sql String, maxRowCount long) : StatementHandle from class org.apache.calcite.jdbc.CalciteMetaImpl
Extract Variable	context : Context in method public prepareAndExecute(h StatementHandle, sql String, maxRowCount long, maxRowsInFirstFrame int, callback PrepareCallback) : ExecuteResult from class org.apache.calcite.jdbc.CalciteMetaImpl
Extract Variable	query : CalcitePrepare.Query<Object> in method public prepareAndExecute(h StatementHandle, sql String, maxRowCount long, maxRowsInFirstFrame int, callback PrepareCallback) : ExecuteResult from class org.apache.calcite.jdbc.CalciteMetaImpl
Rename Parameter	statement : CalciteServerStatement to context : Context in method private toQuery(context Context, sql String) : CalcitePrepare.Query<Object> from class org.apache.calcite.jdbc.CalciteMetaImpl
Change Parameter Type	statement : CalciteServerStatement to context : Context in method private toQuery(context Context, sql String) : CalcitePrepare.Query<Object> from class org.apache.calcite.jdbc.CalciteMetaImpl
Add Parameter	rootSchema : CalciteSchema in method public CalciteSignature(sql String, parameterList List<AvaticaParameter>, internalParameters Map<String,Object>, rowType RelDataType, columns List<ColumnMetaData>, cursorFactory Meta.CursorFactory, rootSchema CalciteSchema, collationList List<RelCollation>, maxRowCount long, bindable Bindable<T>) from class org.apache.calcite.jdbc.CalcitePrepare.CalciteSignature
Add Parameter	rootSchema : CalciteSchema in method public CalciteSignature(sql String, parameterList List<AvaticaParameter>, internalParameters Map<String,Object>, rowType RelDataType, columns List<ColumnMetaData>, cursorFactory Meta.CursorFactory, rootSchema CalciteSchema, collationList List<RelCollation>, maxRowCount long, bindable Bindable<T>, statementType Meta.StatementType) from class org.apache.calcite.jdbc.CalcitePrepare.CalciteSignature
Change Attribute Type	sqls : List<String> to sqls : ImmutableList<String> in class org.apache.calcite.jdbc.CalciteSchema.TableEntry
Change Attribute Type	path : ImmutableList<ImmutableList<String>> to path : List<? extends List<String>> in class org.apache.calcite.jdbc.CalciteSchema
Add Parameter	rootSchema : SchemaPlus in method public DummyDataContext(connection CalciteConnection, rootSchema SchemaPlus) from class org.apache.calcite.schema.Schemas.DummyDataContext
Add Parameter	rootSchema : SchemaPlus in method public createDataContext(connection Connection, rootSchema SchemaPlus) : DataContext from class org.apache.calcite.schema.Schemas
Rename Variable	schema : SchemaPlus to rootSchema : SchemaPlus in method public testTableWhere() : void from class org.apache.calcite.test.LinqFrontJdbcBackTest
Rename Method	public testSchemaCache() : void renamed to public testSchemaConsistency() : void in class org.apache.calcite.test.MultiJdbcSchemaJoinTest
Extract Method	private createTableMap() : Map<String,Table> extracted from protected getTableMap() : Map<String,Table> in class org.apache.calcite.adapter.csv.CsvSchema
Developers have reported that 10708 commits involve refactoring but only 416 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 416 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3bf526b42f23be1810fe
Issue Title: : Add a variant of CalciteSchema that does not cache sub-objects
Refactorings at ac8d04ed95589f29571b7de3c220876c3ebc3a00
Move Class	org.apache.calcite.jdbc.CalciteSchema.Cached moved to org.apache.calcite.jdbc.CachingCalciteSchema.Cached
Move Class	org.apache.calcite.jdbc.CalciteSchema.AbstractCached moved to org.apache.calcite.jdbc.CachingCalciteSchema.AbstractCached
Move Class	org.apache.calcite.jdbc.CalciteSchema.SubSchemaCache moved to org.apache.calcite.jdbc.CachingCalciteSchema.SubSchemaCache
Change Return Type	CalciteRootSchema to CalciteSchema in method public getRootSchema() : CalciteSchema from class org.apache.calcite.jdbc.CalciteConnectionImpl.ContextImpl
Change Attribute Type	rootSchema : CalciteRootSchema to rootSchema : CalciteSchema in class org.apache.calcite.jdbc.CalciteConnectionImpl
Change Parameter Type	rootSchema : CalciteRootSchema to rootSchema : CalciteSchema in method protected CalciteConnectionImpl(driver Driver, factory AvaticaFactory, url String, info Properties, rootSchema CalciteSchema, typeFactory JavaTypeFactory) from class org.apache.calcite.jdbc.CalciteConnectionImpl
Change Parameter Type	rootSchema : CalciteRootSchema to rootSchema : CalciteSchema in method package CalciteJdbc41Connection(driver Driver, factory AvaticaFactory, url String, info Properties, rootSchema CalciteSchema, typeFactory JavaTypeFactory) from class org.apache.calcite.jdbc.CalciteJdbc41Factory.CalciteJdbc41Connection
Change Parameter Type	rootSchema : CalciteRootSchema to rootSchema : CalciteSchema in method public newConnection(driver UnregisteredDriver, factory AvaticaFactory, url String, info Properties, rootSchema CalciteSchema, typeFactory JavaTypeFactory) : CalciteJdbc41Connection from class org.apache.calcite.jdbc.CalciteJdbc41Factory
Change Parameter Type	schema : CalciteRootSchema to schema : CalciteSchema in method public connect(schema CalciteSchema, typeFactory JavaTypeFactory) : CalciteConnection from class org.apache.calcite.jdbc.CalciteMetaImpl
Change Return Type	CalciteRootSchema to CalciteSchema in method public getRootSchema() : CalciteSchema from class org.apache.calcite.jdbc.CalcitePrepare.Context
Add Class Annotation	@Deprecated in class org.apache.calcite.jdbc.CalciteRootSchema
Add Class Modifier	abstract in class org.apache.calcite.jdbc.CalciteSchema
Change Attribute Access Modifier	private to protected in attribute protected COMPARATOR : Comparator<String> from class org.apache.calcite.jdbc.CalciteSchema
Change Attribute Access Modifier	private to protected in attribute protected functionMap : Multimap<String,FunctionEntry> from class org.apache.calcite.jdbc.CalciteSchema
Change Attribute Access Modifier	private to protected in attribute protected latticeMap : NavigableMap<String,LatticeEntry> from class org.apache.calcite.jdbc.CalciteSchema
Change Attribute Access Modifier	private to protected in attribute protected functionNames : NavigableSet<String> from class org.apache.calcite.jdbc.CalciteSchema
Change Attribute Access Modifier	private to protected in attribute protected nullaryFunctionMap : NavigableMap<String,FunctionEntry> from class org.apache.calcite.jdbc.CalciteSchema
Change Attribute Access Modifier	private to protected in attribute protected subSchemaMap : NavigableMap<String,CalciteSchema> from class org.apache.calcite.jdbc.CalciteSchema
Extract Method	public createRootSchema(addMetadataSchema boolean, cache boolean) : CalciteSchema extracted from public createRootSchema(addMetadataSchema boolean) : CalciteRootSchema in class org.apache.calcite.jdbc.CalciteSchema
Change Variable Type	rootSchema : CalciteRootSchema to rootSchema : CalciteSchema in method public createRootSchema(addMetadataSchema boolean, cache boolean) : CalciteSchema from class org.apache.calcite.jdbc.CalciteSchema
Add Method Modifier	final in method public getSubSchemaMap() : NavigableMap<String,CalciteSchema> from class org.apache.calcite.jdbc.CalciteSchema
Add Method Modifier	final in method public getTableNames() : NavigableSet<String> from class org.apache.calcite.jdbc.CalciteSchema
Add Method Modifier	final in method public getFunctions(name String, caseSensitive boolean) : Collection<Function> from class org.apache.calcite.jdbc.CalciteSchema
Add Method Modifier	final in method public getFunctionNames() : NavigableSet<String> from class org.apache.calcite.jdbc.CalciteSchema
Add Method Modifier	final in method public getTablesBasedOnNullaryFunctions() : NavigableMap<String,Table> from class org.apache.calcite.jdbc.CalciteSchema
Add Method Modifier	final in method public getTableBasedOnNullaryFunction(tableName String, caseSensitive boolean) : TableEntry from class org.apache.calcite.jdbc.CalciteSchema
Change Return Type	CalciteRootSchema to CalciteSchema in method public createRootSchema(addMetadataSchema boolean) : CalciteSchema from class org.apache.calcite.jdbc.CalciteSchema
Change Return Type	CalciteRootSchema to CalciteSchema in method public root() : CalciteSchema from class org.apache.calcite.jdbc.CalciteSchema
Remove Parameter Modifier	final in parameter schema : Schema in method public CalciteSchema(parent CalciteSchema, schema Schema, name String) from class org.apache.calcite.jdbc.CalciteSchema
Change Method Access Modifier	public to package in method package CalciteSchema(parent CalciteSchema, schema Schema, name String) from class org.apache.calcite.jdbc.CalciteSchema
Change Method Access Modifier	private to protected in method protected tableEntry(name String, table Table) : TableEntryImpl from class org.apache.calcite.jdbc.CalciteSchema
Change Method Access Modifier	private to protected in method protected find(map NavigableMap<String,V>, s String) : NavigableMap<String,V> from class org.apache.calcite.jdbc.CalciteSchema
Change Method Access Modifier	private to protected in method protected find(set NavigableSet<String>, name String) : Iterable<String> from class org.apache.calcite.jdbc.CalciteSchema
Change Parameter Type	rootSchema : CalciteRootSchema to rootSchema : CalciteSchema in method package connect(rootSchema CalciteSchema, typeFactory JavaTypeFactory) : CalciteConnection from class org.apache.calcite.jdbc.Driver
Change Attribute Type	rootSchema : CalciteRootSchema to rootSchema : CalciteSchema in class org.apache.calcite.materialize.Lattice.Builder
Change Attribute Type	rootSchema : CalciteRootSchema to rootSchema : CalciteSchema in class org.apache.calcite.materialize.Lattice
Change Parameter Type	rootSchema : CalciteRootSchema to rootSchema : CalciteSchema in method private Lattice(rootSchema CalciteSchema, nodes ImmutableList<Node>, auto boolean, algorithm boolean, algorithmMaxMillis long, statisticProvider LatticeStatisticProvider, rowCountEstimate Double, columns ImmutableList<Column>, defaultMeasures ImmutableList<Measure>, tiles ImmutableList<Tile>) from class org.apache.calcite.materialize.Lattice
Change Attribute Type	rootSchema : CalciteRootSchema to rootSchema : CalciteSchema in class org.apache.calcite.materialize.MaterializationActor.Materialization
Change Parameter Type	rootSchema : CalciteRootSchema to rootSchema : CalciteSchema in method package Materialization(key MaterializationKey, rootSchema CalciteSchema, materializedTable CalciteSchema.TableEntry, sql String, rowType RelDataType) from class org.apache.calcite.materialize.MaterializationActor.Materialization
Change Return Type	CalciteRootSchema to CalciteSchema in method public getRootSchema() : CalciteSchema from class org.apache.calcite.schema.Schemas.makeContext.new CalcitePrepare.Context
Extract Superclass	org.apache.calcite.jdbc.CachingCalciteSchema from classes [org.apache.calcite.jdbc.CalciteRootSchema]
Extract Subclass	org.apache.calcite.jdbc.CachingCalciteSchema from class org.apache.calcite.jdbc.CalciteSchema
Push Down Method	private setCache(cache boolean) : void from class org.apache.calcite.jdbc.CalciteSchema to public setCache(cache boolean) : void from class org.apache.calcite.jdbc.CachingCalciteSchema
Change Method Access Modifier	private to public in method public setCache(cache boolean) : void from class org.apache.calcite.jdbc.CachingCalciteSchema
Push Down Method	public add(name String, schema Schema) : CalciteSchema from class org.apache.calcite.jdbc.CalciteSchema to public add(name String, schema Schema) : CalciteSchema from class org.apache.calcite.jdbc.CachingCalciteSchema
Push Down Attribute	private implicitSubSchemaCache : Cached<SubSchemaCache> from class org.apache.calcite.jdbc.CalciteSchema to private implicitSubSchemaCache : Cached<SubSchemaCache> from class org.apache.calcite.jdbc.CachingCalciteSchema
Push Down Attribute	private implicitTableCache : Cached<NavigableSet<String>> from class org.apache.calcite.jdbc.CalciteSchema to private implicitTableCache : Cached<NavigableSet<String>> from class org.apache.calcite.jdbc.CachingCalciteSchema
Push Down Attribute	private implicitFunctionCache : Cached<NavigableSet<String>> from class org.apache.calcite.jdbc.CalciteSchema to private implicitFunctionCache : Cached<NavigableSet<String>> from class org.apache.calcite.jdbc.CachingCalciteSchema
Push Down Attribute	private cache : boolean from class org.apache.calcite.jdbc.CalciteSchema to private cache : boolean from class org.apache.calcite.jdbc.CachingCalciteSchema
Developers have reported that 10708 commits involve refactoring but only 417 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 417 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3bfa26b42f23be181128
Issue Title: : Remove unused createIterable call in LocalService
Refactorings at 0f45481daf31ebdec8e8e6b9f42262b5fe3a9257
Rename Variable	ctx : Context to ignore : Context in method public apply(request PrepareRequest) : PrepareResponse from class org.apache.calcite.avatica.remote.LocalService
Rename Variable	ctx : Context to ignore : Context in method public apply(request PrepareAndExecuteRequest) : ExecuteResponse from class org.apache.calcite.avatica.remote.LocalService
Rename Variable	ctx : Context to ignore : Context in method public apply(request ExecuteRequest) : ExecuteResponse from class org.apache.calcite.avatica.remote.LocalService
Rename Variable	ctx : Context to ignore : Context in method public apply(request ConnectionSyncRequest) : ConnectionSyncResponse from class org.apache.calcite.avatica.remote.LocalService
Rename Variable	ctx : Context to ignore : Context in method public apply(request CommitRequest) : CommitResponse from class org.apache.calcite.avatica.remote.LocalService
Developers have reported that 10708 commits involve refactoring but only 418 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 418 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c0026b42f23be18115b
Issue Title: : In Meta.Frame.create, change type of "offset" parameter from "int" to "long"
Refactorings at 7605d42185ac627f33d14ffbb0e95d6ca4082659
Change Parameter Type	offset : int to offset : long in method public create(offset long, done boolean, rows List<Object>) : Frame from class org.apache.calcite.avatica.Meta.Frame
Developers have reported that 10708 commits involve refactoring but only 419 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 419 commits.

No refactorings detected at 5289d343fb9eb2f54233f0bc54b2672023f4de14

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c1926b42f23be1812a8
Issue Title: : Add SQL syntax to allow approximate LIMIT and distinct-COUNT
Refactorings at fe3529d9a6d4d826c6e77fc4c0d7d18bd681bb85
Extract Method	public create(aggFunction SqlAggFunction, distinct boolean, approximate boolean, argList List<Integer>, filterArg int, groupCount int, input RelNode, type RelDataType, name String) : AggregateCall extracted from public create(aggFunction SqlAggFunction, distinct boolean, argList List<Integer>, filterArg int, groupCount int, input RelNode, type RelDataType, name String) : AggregateCall in class org.apache.calcite.rel.core.AggregateCall
Extract Method	public create(aggFunction SqlAggFunction, distinct boolean, approximate boolean, argList List<Integer>, filterArg int, type RelDataType, name String) : AggregateCall extracted from public create(aggFunction SqlAggFunction, distinct boolean, argList List<Integer>, filterArg int, type RelDataType, name String) : AggregateCall in class org.apache.calcite.rel.core.AggregateCall
Add Method Annotation	@Deprecated in method public create(aggFunction SqlAggFunction, distinct boolean, argList List<Integer>, filterArg int, groupCount int, input RelNode, type RelDataType, name String) : AggregateCall from class org.apache.calcite.rel.core.AggregateCall
Add Method Annotation	@Deprecated in method public create(aggFunction SqlAggFunction, distinct boolean, argList List<Integer>, filterArg int, type RelDataType, name String) : AggregateCall from class org.apache.calcite.rel.core.AggregateCall
Add Parameter	approximate : boolean in method private AggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, argList List<Integer>, filterArg int, type RelDataType, name String) from class org.apache.calcite.rel.core.AggregateCall
Extract Variable	op : SqlAggFunction in method public get(index int) : AggregateCall from class org.apache.calcite.rel.core.Window.Group.getAggregateCalls.new AbstractList<AggregateCall>
Add Parameter	name : String in method public SqlCountAggFunction(name String) from class org.apache.calcite.sql.fun.SqlCountAggFunction
Remove Variable Modifier	final in variable aggFunction : SqlAggFunction in method private translateAgg(call SqlCall, filter SqlNode, outerCall SqlCall) : void from class org.apache.calcite.sql2rel.SqlToRelConverter.AggConverter
Add Variable Modifier	final in variable type : RelDataType in method private translateAgg(call SqlCall, filter SqlNode, outerCall SqlCall) : void from class org.apache.calcite.sql2rel.SqlToRelConverter.AggConverter
Add Parameter	approximate : boolean in method package AggCallImpl(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands ImmutableList<RexNode>) from class org.apache.calcite.tools.RelBuilder.AggCallImpl
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public aggregateCall(aggFunction SqlAggFunction, distinct boolean, filter RexNode, alias String, operands RexNode...) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands Iterable<? extends RexNode>) : AggCall extracted from public aggregateCall(aggFunction SqlAggFunction, distinct boolean, filter RexNode, alias String, operands Iterable<? extends RexNode>) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public count(distinct boolean, alias String, operands RexNode...) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public countStar(alias String) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public sum(distinct boolean, alias String, operand RexNode) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public avg(distinct boolean, alias String, operand RexNode) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public min(alias String, operand RexNode) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public max(alias String, operand RexNode) : AggCall in class org.apache.calcite.tools.RelBuilder
Add Method Annotation	@Deprecated in method public aggregateCall(aggFunction SqlAggFunction, distinct boolean, filter RexNode, alias String, operands RexNode...) : AggCall from class org.apache.calcite.tools.RelBuilder
Add Method Annotation	@Deprecated in method public aggregateCall(aggFunction SqlAggFunction, distinct boolean, filter RexNode, alias String, operands Iterable<? extends RexNode>) : AggCall from class org.apache.calcite.tools.RelBuilder
Extract Variable	druid : String in method public testPostAggregationWithComplexColumns() : void from class org.apache.calcite.test.DruidAdapterIT
Extract Variable	sql : String in method public testPostAggregationWithComplexColumns() : void from class org.apache.calcite.test.DruidAdapterIT
Extract And Move Method	public create(aggFunction SqlAggFunction, distinct boolean, approximate boolean, argList List<Integer>, filterArg int, type RelDataType, name String) : AggregateCall extracted from private toAggCall(jsonAggCall Map<String,Object>) : AggregateCall in class org.apache.calcite.rel.externalize.RelJsonReader & moved to class org.apache.calcite.rel.core.AggregateCall
Extract And Move Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public group(option GroupOption, partitioner Partitioner, parallel int, groupKeys Iterable<? extends GroupKey>) : PigRelBuilder in class org.apache.calcite.tools.PigRelBuilder & moved to class org.apache.calcite.tools.RelBuilder
Developers have reported that 10708 commits involve refactoring but only 420 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 420 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c1c26b42f23be1812bf
Issue Title: : Wikipedia format change breaks file adapter test
Refactorings at 91d95762158bb8937fedcd0b9ff334cf049fa92b
Add Method Annotation	@Ignore("[CALCITE-1789] Wikipedia format change breaks file adapter test") in method public testFileReaderUrlFetch() : void from class org.apache.calcite.adapter.file.FileReaderTest
Developers have reported that 10708 commits involve refactoring but only 421 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 421 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c1c26b42f23be1812bf
Issue Title: : Wikipedia format change breaks file adapter test
Refactorings at 32cca802ecded64cceff5a3d98cf981e25b6769b
Add Method Annotation	@Ignore("[CALCITE-1789] Wikipedia format change breaks file adapter test") in method public testFileReaderUrlWithPath() : void from class org.apache.calcite.adapter.file.FileReaderTest
Add Method Annotation	@Ignore("[CALCITE-1789] Wikipedia format change breaks file adapter test") in method public testUrlSelect() : void from class org.apache.calcite.adapter.file.SqlTest
Developers have reported that 10708 commits involve refactoring but only 422 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 422 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c2b26b42f23be181363
Issue Title: : Push to Druid OrderBy/Limit operation over time dimension and additional columns
Refactorings at cd136985af5b9d0b74751bd65d9669996363786e
Rename Variable	granularity : Granularity to finalGranularity : Granularity in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, fetch Integer) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Rename Variable	origin : String to originalFieldName : String in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, fetch Integer) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Merge Conditional	[boolean refsTimestamp=checkTimestampRefOnQuery(positionsReferenced.build(),topAgg.getInput(),query);, if(refsTimestamp && sort.collation.getFieldCollations().size() == 1 && topAgg.getGroupCount() == 1)] to return !RelOptUtil.isLimit(sort) && sort.collation.getFieldCollations().size() == 1 && checkTimestampRefOnQuery(positionsReferenced.build(),topAgg.getInput(),query); in method private validSortLimit(sort Sort, query DruidQuery) : boolean from class org.apache.calcite.adapter.druid.DruidRules.DruidSortRule
Rename Method	public createFromGranularity(granularity Granularity) : TimeExtractionFunction renamed to public createExtractFromGranularity(granularity Granularity) : TimeExtractionFunction in class org.apache.calcite.adapter.druid.TimeExtractionFunction
Extract Attribute	private ISO_TIME_FORMAT : String in class org.apache.calcite.adapter.druid.TimeExtractionFunction
Rename Variable	druidQuery : String to subDruidQuery : String in method public testFilterTimeDistinct() : void from class org.apache.calcite.test.DruidAdapterIT
Remove Method Annotation	@Ignore("[DRUID-3905]") in method public testFilterTimeDistinct() : void from class org.apache.calcite.test.DruidAdapterIT
Rename Variable	druidQuery : String to druidQueryPart2 : String in method public testGroupByDaySortLimit() : void from class org.apache.calcite.test.DruidAdapterIT
Rename Variable	druidQuery : String to subDruidQuery : String in method public testGroupByDaySortDimension() : void from class org.apache.calcite.test.DruidAdapterIT
Developers have reported that 10708 commits involve refactoring but only 423 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 423 commits.

No refactorings detected at 03bb2cea517a62c9d7c80295527328e1b5c84ef9

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c3326b42f23be1813c1
Issue Title: : Rename MySource to FileSource
Refactorings at d5c713c5cd447e261e3ae5cffa728c073f425e28
Rename Class	org.apache.calcite.util.Sources.MySource renamed to org.apache.calcite.util.Sources.FileSource
Developers have reported that 10708 commits involve refactoring but only 424 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 424 commits.

No refactorings detected at 2eebca8cff3b8ba7978a64c89f88199ba81cab56

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c3826b42f23be181400
Issue Title: : Push project aggregate of time extract to druid
Refactorings at ef03b6e4c6dbae800e7c1aaa1deb5bbd7960e911
Change Attribute Access Modifier	private to public in attribute public DEFAULT_RESPONSE_TIMESTAMP_COLUMN : String from class org.apache.calcite.adapter.druid.DruidConnectionImpl
Extract Variable	flagIndex : int in method public extractGranularity(call RexCall) : Granularity from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Extract Variable	index : int in method package translate(e RexNode, set boolean) : String from class org.apache.calcite.adapter.druid.DruidQuery.Translator
Change Class Access Modifier	private to public in class org.apache.calcite.adapter.druid.DruidQuery.Json
Change Variable Type	dimensions : List<String> to dimensions : List<DimensionSpec> in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, fetch Integer) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Developers have reported that 10708 commits involve refactoring but only 425 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 425 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c3826b42f23be181400
Issue Title: : Push project aggregate of time extract to druid
Refactorings at e76d5ee33a3cda0d9ce495e21681f5bede25f129
Extract Variable	isTimestampColumn : boolean in method private parseField(fieldNames List<String>, fieldTypes List<ColumnMetaData.Rep>, posTimestampField int, rowBuilder Row.RowBuilder, parser JsonParser) : void from class org.apache.calcite.adapter.druid.DruidConnectionImpl
Developers have reported that 10708 commits involve refactoring but only 426 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 426 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c3826b42f23be181400
Issue Title: : Push project aggregate of time extract to druid
Refactorings at 04c0c8b6f212e513aba76a36e62f99e4bde4370e
Add Method Annotation	@SuppressWarnings("incomplete-switch") in method package translate(e RexNode, set boolean) : String from class org.apache.calcite.adapter.druid.DruidQuery.Translator
Encapsulate Attribute	private outputName : String from class org.apache.calcite.adapter.druid.ExtractionDimensionSpec
Add Parameter	outputName : String in method public makeFullTimeExtract(outputName String) : TimeExtractionDimensionSpec from class org.apache.calcite.adapter.druid.TimeExtractionDimensionSpec
Add Parameter	outputName : String in method public makeExtract(granularity Granularity, outputName String) : TimeExtractionDimensionSpec from class org.apache.calcite.adapter.druid.TimeExtractionDimensionSpec
Rename Method	public testPushAggragateOnTime() : void renamed to public testPushAggregateOnTime() : void in class org.apache.calcite.test.DruidAdapterIT
Rename Method	public testPushAggragateOnTimeWithExtractYear() : void renamed to public testPushAggregateOnTimeWithExtractYear() : void in class org.apache.calcite.test.DruidAdapterIT
Rename Method	public testPushAggragateOnTimeWithExtractMonth() : void renamed to public testPushAggregateOnTimeWithExtractMonth() : void in class org.apache.calcite.test.DruidAdapterIT
Rename Method	public testPushAggragateOnTimeWithExtractDay() : void renamed to public testPushAggregateOnTimeWithExtractDay() : void in class org.apache.calcite.test.DruidAdapterIT
Rename Method	public testPushAggragateOnTimeWithExtractHourOfDay() : void renamed to public testPushAggregateOnTimeWithExtractHourOfDay() : void in class org.apache.calcite.test.DruidAdapterIT
Rename Method	public testPushAggragateOnTimeWithExtractYearMonthDay() : void renamed to public testPushAggregateOnTimeWithExtractYearMonthDay() : void in class org.apache.calcite.test.DruidAdapterIT
Rename Method	public testPushAggragateOnTimeWithExtractYearMonthDayWithOutRenaming() : void renamed to public testPushAggregateOnTimeWithExtractYearMonthDayWithOutRenaming() : void in class org.apache.calcite.test.DruidAdapterIT
Pull Up Method	public getOutputName() : String from class org.apache.calcite.adapter.druid.TimeExtractionDimensionSpec to public getOutputName() : String from class org.apache.calcite.adapter.druid.ExtractionDimensionSpec
Developers have reported that 10708 commits involve refactoring but only 427 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 427 commits.

No refactorings detected at f63a65a8c6ffd9a771e27ef0446496c6b67baeea

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c3b26b42f23be181428
Issue Title: : Add `required Order` and `requiresOver` parameters to the constructor of `SqlUserDefinedAggregate Function`
Refactorings at 7c7e932eb1dbb0d2d759303d37d0e21c8fb24c69
Add Parameter	requiresOrder : boolean in method public SqlUserDefinedAggFunction(opName SqlIdentifier, returnTypeInference SqlReturnTypeInference, operandTypeInference SqlOperandTypeInference, operandTypeChecker SqlOperandTypeChecker, function AggregateFunction, requiresOrder boolean, requiresOver boolean) from class org.apache.calcite.sql.validate.SqlUserDefinedAggFunction
Add Parameter	requiresOver : boolean in method public SqlUserDefinedAggFunction(opName SqlIdentifier, returnTypeInference SqlReturnTypeInference, operandTypeInference SqlOperandTypeInference, operandTypeChecker SqlOperandTypeChecker, function AggregateFunction, requiresOrder boolean, requiresOver boolean) from class org.apache.calcite.sql.validate.SqlUserDefinedAggFunction
Developers have reported that 10708 commits involve refactoring but only 428 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 428 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c3d26b42f23be181432
Issue Title: : Fix join/aggregate rewriting rule when same table is referenced more than once
Refactorings at 6f07293a3843c8790af9c028b2962fd8a0512db9
Remove Variable Modifier	final in variable nLeftColumns : int in method public getAllPredicates(join Join, mq RelMetadataQuery) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdAllPredicates
Rename Variable	nLeftColumns : int to shift : int in method public getAllPredicates(join Join, mq RelMetadataQuery) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdAllPredicates
Extract Variable	tableRefs : Set<RelTableRef> in method public getAllPredicates(union Union, mq RelMetadataQuery) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdAllPredicates
Add Variable Modifier	final in variable input : RelNode in method public getAllPredicates(union Union, mq RelMetadataQuery) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdAllPredicates
Rename Variable	queryTableRef : RelTableRef to queryTableRef1 : RelTableRef in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Variable	viewTableRef : RelTableRef to queryTableRef2 : RelTableRef in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Variable Modifier	final in variable result : List<BiMap<RelTableRef,RelTableRef>> in method private generateTableMappings(multiMapTables Multimap<RelTableRef,RelTableRef>) : List<BiMap<RelTableRef,RelTableRef>> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Developers have reported that 10708 commits involve refactoring but only 429 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 429 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c4226b42f23be18146d
Issue Title: : Druid adapter fail when the extract granularity is not supported 
Refactorings at a377f8f2826f51c77b639ee711e2bd578f4de822
Add Variable Modifier	final in variable flagIndex : int in method public extractGranularity(node RexNode) : Granularity from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Parameter	node : RexNode in method public extractGranularity(node RexNode) : Granularity from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Remove Parameter	call : RexCall in method public extractGranularity(call RexCall) : Granularity from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Remove Variable Modifier	final in variable extractionFunction : ExtractionFunction in method private translateFilter(e RexNode) : JsonFilter from class org.apache.calcite.adapter.druid.DruidQuery.Translator
Add Variable Modifier	final in variable extractColumnName : String in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Add Variable Modifier	final in variable extractColumnName : String in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Rename Method	public makeFloor(granularity Granularity, outputName String) : TimeExtractionDimensionSpec renamed to public makeTimeFloor(granularity Granularity, outputName String) : TimeExtractionDimensionSpec in class org.apache.calcite.adapter.druid.TimeExtractionDimensionSpec
Change Method Access Modifier	private to public in method public isValidTimeExtract(call RexCall) : boolean from class org.apache.calcite.adapter.druid.TimeExtractionFunction
Add Method Modifier	static in method public isValidTimeExtract(call RexCall) : boolean from class org.apache.calcite.adapter.druid.TimeExtractionFunction
Move And Rename Method	private isValidExtract(call RexCall) : boolean from class org.apache.calcite.adapter.druid.DruidQuery to public isValidTimeExtract(call RexCall) : boolean from class org.apache.calcite.adapter.druid.TimeExtractionFunction
Move And Inline Method	public makeExtract(granularity Granularity, outputName String) : TimeExtractionDimensionSpec moved from class org.apache.calcite.adapter.druid.TimeExtractionDimensionSpec to class org.apache.calcite.adapter.druid.DruidQuery & inlined to protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer) : QuerySpec
Developers have reported that 10708 commits involve refactoring but only 430 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 430 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c4326b42f23be181475
Issue Title: : Adding sort ordering type for druid sort json field
Refactorings at d2368327ede5891417e579998c0e30e1ef5c54c5
Add Parameter	dimensionOrder : String in method private JsonCollation(dimension String, direction String, dimensionOrder String) from class org.apache.calcite.adapter.druid.DruidQuery.JsonCollation
Add Parameter	numericCollationIndexes : ImmutableBitSet in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Developers have reported that 10708 commits involve refactoring but only 431 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 431 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c4426b42f23be18147e
Issue Title: : Push Extraction filter on Year/Month/Day to druid
Refactorings at 7c2f5a83c5c4416a6ec91bb8aa043cd60962ed37
Extract Variable	timeUnitRangeSet : Set<TimeUnitRange> in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.DateRangeRules.FilterDateRangeRule
Extract Variable	dimName : String in method private translateFilter(e RexNode) : JsonFilter from class org.apache.calcite.adapter.druid.DruidQuery.Translator
Add Parameter	extractionFunction : ExtractionFunction in method private JsonSelector(type String, dimension String, value String, extractionFunction ExtractionFunction) from class org.apache.calcite.adapter.druid.DruidQuery.JsonSelector
Add Parameter	extractionFunction : ExtractionFunction in method private JsonBound(type String, dimension String, lower String, lowerStrict boolean, upper String, upperStrict boolean, alphaNumeric boolean, extractionFunction ExtractionFunction) from class org.apache.calcite.adapter.druid.DruidQuery.JsonBound
Add Parameter	extractionFunction : ExtractionFunction in method private JsonInFilter(type String, dimension String, values List<String>, extractionFunction ExtractionFunction) from class org.apache.calcite.adapter.druid.DruidQuery.JsonInFilter
Developers have reported that 10708 commits involve refactoring but only 432 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 432 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c4926b42f23be1814c8
Issue Title: : Add PERIOD type constructor and period operators (CONTAINS, PRECEDES, etc.)
Refactorings at feff5964bf36d2e5aa311fcd7777b159aa4a8a1e
Extract Method	package arg(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int, i int) : void extracted from public unparse(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int) : void in class org.apache.calcite.sql.fun.SqlOverlapsOperator
Extract Method	package arg(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int, i int) : void extracted from public unparse(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int) : void in class org.apache.calcite.sql.fun.SqlOverlapsOperator
Extract Variable	row : SqlCall in method package arg(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int, i int) : void from class org.apache.calcite.sql.fun.SqlOverlapsOperator
Add Method Annotation	@Override in method public unparse(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int) : void from class org.apache.calcite.sql.fun.SqlOverlapsOperator
Extract Variable	t00 : RelDataType in method public checkOperandTypes(callBinding SqlCallBinding, throwOnFailure boolean) : boolean from class org.apache.calcite.sql.fun.SqlOverlapsOperator
Extract Variable	t10 : RelDataType in method public checkOperandTypes(callBinding SqlCallBinding, throwOnFailure boolean) : boolean from class org.apache.calcite.sql.fun.SqlOverlapsOperator
Add Variable Modifier	final in variable t0 : RelDataType in method public checkOperandTypes(callBinding SqlCallBinding, throwOnFailure boolean) : boolean from class org.apache.calcite.sql.fun.SqlOverlapsOperator
Add Variable Modifier	final in variable t1 : RelDataType in method public checkOperandTypes(callBinding SqlCallBinding, throwOnFailure boolean) : boolean from class org.apache.calcite.sql.fun.SqlOverlapsOperator
Merge Variable	[t0 : RelDataType, t1 : RelDataType] to callBinding : SqlCallBinding in method public checkOperandTypes(callBinding SqlCallBinding, throwOnFailure boolean) : boolean from class org.apache.calcite.sql.fun.SqlOverlapsOperator
Add Parameter	kind : SqlKind in method package SqlOverlapsOperator(kind SqlKind) from class org.apache.calcite.sql.fun.SqlOverlapsOperator
Change Method Access Modifier	public to package in method package SqlOverlapsOperator(kind SqlKind) from class org.apache.calcite.sql.fun.SqlOverlapsOperator
Extract Method	private convertOverlapsOperand(cx SqlRexContext, pos SqlParserPos, operand SqlNode) : Pair<RexNode,RexNode> extracted from public convertOverlaps(cx SqlRexContext, op SqlOverlapsOperator, call SqlCall) : RexNode in class org.apache.calcite.sql2rel.StandardConvertletTable
Extract Variable	leftSwap : RexNode in method public convertOverlaps(cx SqlRexContext, op SqlOverlapsOperator, call SqlCall) : RexNode from class org.apache.calcite.sql2rel.StandardConvertletTable
Extract Variable	rightSwap : RexNode in method public convertOverlaps(cx SqlRexContext, op SqlOverlapsOperator, call SqlCall) : RexNode from class org.apache.calcite.sql2rel.StandardConvertletTable
Inline Variable	pos : SqlParserPos in method public convertOverlaps(cx SqlRexContext, op SqlOverlapsOperator, call SqlCall) : RexNode from class org.apache.calcite.sql2rel.StandardConvertletTable
Extract Method	package checkPeriodPredicate(checker Checker) : void extracted from public testOverlaps() : void in class org.apache.calcite.sql.parser.SqlParserTest
Rename Method	public testOverlapsEtc() : void renamed to public testPeriodOperators() : void in class org.apache.calcite.sql.test.SqlOperatorBaseTest
Developers have reported that 10708 commits involve refactoring but only 433 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 433 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c4a26b42f23be1814db
Issue Title: : Extend materialized view rewriting to produce rewritings using Union operators
Refactorings at 1342d4cbb8099dc6a1820014a3ccc90a0d57106b
Add Parameter	generateUnionRewrites : boolean in method protected MaterializedViewJoinRule(operand RelOptRuleOperand, relBuilderFactory RelBuilderFactory, description String, generateUnionRewrites boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Reorder Parameter	[rexBuilder : RexBuilder, relBuilder : RelBuilder, input : RelNode, topProject : Project, node : RelNode, topViewProject : Project, viewNode : RelNode, tableMapping : BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>>, mq : RelMetadataQuery] to [relBuilder : RelBuilder, rexBuilder : RexBuilder, mq : RelMetadataQuery, input : RelNode, topProject : Project, node : RelNode, topViewProject : Project, viewNode : RelNode, tableMapping : BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>>] in method protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Parameter	generateUnionRewrites : boolean in method public MaterializedViewProjectJoinRule(relBuilderFactory RelBuilderFactory, generateUnionRewrites boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewProjectJoinRule
Add Parameter	generateUnionRewrites : boolean in method public MaterializedViewProjectFilterRule(relBuilderFactory RelBuilderFactory, generateUnionRewrites boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewProjectFilterRule
Add Parameter	generateUnionRewrites : boolean in method public MaterializedViewOnlyJoinRule(relBuilderFactory RelBuilderFactory, generateUnionRewrites boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewOnlyJoinRule
Add Parameter	generateUnionRewrites : boolean in method public MaterializedViewOnlyFilterRule(relBuilderFactory RelBuilderFactory, generateUnionRewrites boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewOnlyFilterRule
Add Parameter	generateUnionRewrites : boolean in method protected MaterializedViewAggregateRule(operand RelOptRuleOperand, relBuilderFactory RelBuilderFactory, description String, generateUnionRewrites boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Reorder Parameter	[rexBuilder : RexBuilder, relBuilder : RelBuilder, input : RelNode, topProject : Project, node : RelNode, topViewProject : Project, viewNode : RelNode, tableMapping : BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>>, mq : RelMetadataQuery] to [relBuilder : RelBuilder, rexBuilder : RexBuilder, mq : RelMetadataQuery, input : RelNode, topProject : Project, node : RelNode, topViewProject : Project, viewNode : RelNode, tableMapping : BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>>] in method protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Add Parameter	generateUnionRewrites : boolean in method public MaterializedViewProjectAggregateRule(relBuilderFactory RelBuilderFactory, generateUnionRewrites boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewProjectAggregateRule
Add Parameter	generateUnionRewrites : boolean in method public MaterializedViewOnlyAggregateRule(relBuilderFactory RelBuilderFactory, generateUnionRewrites boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewOnlyAggregateRule
Rename Method	private isValidRexNodePlan(node RelNode, mq RelMetadataQuery) : boolean renamed to private isValidRelNodePlan(node RelNode, mq RelMetadataQuery) : boolean in class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Extract Method	private computeCompensationPredicates(rexBuilder RexBuilder, simplify RexSimplify, sourceEC EquivalenceClasses, sourcePreds Triple<RexNode,RexNode,RexNode>, targetEC EquivalenceClasses, targetPreds Triple<RexNode,RexNode,RexNode>, sourceToTargetTableMapping BiMap<RelTableRef,RelTableRef>) : Triple<RexNode,RexNode,RexNode> extracted from protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void in class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Variable Modifier	final in variable currQEC : EquivalenceClasses in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Variable Modifier	final in variable queryPreds : Triple<RexNode,RexNode,RexNode> in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Variable Modifier	final in variable viewPreds : Triple<RexNode,RexNode,RexNode> in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Variable Modifier	final in variable queryBasedVEC : EquivalenceClasses in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Parameterize Variable	currQEC : EquivalenceClasses to sourceEC : EquivalenceClasses in method private computeCompensationPredicates(rexBuilder RexBuilder, simplify RexSimplify, sourceEC EquivalenceClasses, sourcePreds Triple<RexNode,RexNode,RexNode>, targetEC EquivalenceClasses, targetPreds Triple<RexNode,RexNode,RexNode>, sourceToTargetTableMapping BiMap<RelTableRef,RelTableRef>) : Triple<RexNode,RexNode,RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Parameterize Variable	queryPreds : Triple<RexNode,RexNode,RexNode> to sourcePreds : Triple<RexNode,RexNode,RexNode> in method private computeCompensationPredicates(rexBuilder RexBuilder, simplify RexSimplify, sourceEC EquivalenceClasses, sourcePreds Triple<RexNode,RexNode,RexNode>, targetEC EquivalenceClasses, targetPreds Triple<RexNode,RexNode,RexNode>, sourceToTargetTableMapping BiMap<RelTableRef,RelTableRef>) : Triple<RexNode,RexNode,RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Parameterize Variable	viewPreds : Triple<RexNode,RexNode,RexNode> to targetPreds : Triple<RexNode,RexNode,RexNode> in method private computeCompensationPredicates(rexBuilder RexBuilder, simplify RexSimplify, sourceEC EquivalenceClasses, sourcePreds Triple<RexNode,RexNode,RexNode>, targetEC EquivalenceClasses, targetPreds Triple<RexNode,RexNode,RexNode>, sourceToTargetTableMapping BiMap<RelTableRef,RelTableRef>) : Triple<RexNode,RexNode,RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Parameterize Variable	queryBasedVEC : EquivalenceClasses to targetEC : EquivalenceClasses in method private computeCompensationPredicates(rexBuilder RexBuilder, simplify RexSimplify, sourceEC EquivalenceClasses, sourcePreds Triple<RexNode,RexNode,RexNode>, targetEC EquivalenceClasses, targetPreds Triple<RexNode,RexNode,RexNode>, sourceToTargetTableMapping BiMap<RelTableRef,RelTableRef>) : Triple<RexNode,RexNode,RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Inline Variable	compensationPred : RexNode in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	generateUnionRewrites : boolean in method protected AbstractMaterializedViewRule(operand RelOptRuleOperand, relBuilderFactory RelBuilderFactory, description String, generateUnionRewrites boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Reorder Parameter	[rexBuilder : RexBuilder, viewNode : RelNode, viewExprs : List<RexNode>, expr : RexNode, tableMapping : BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>>, mq : RelMetadataQuery] to [rexBuilder : RexBuilder, mq : RelMetadataQuery, viewNode : RelNode, viewExprs : List<RexNode>, expr : RexNode, tableMapping : BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>>] in method private rewriteExpression(rexBuilder RexBuilder, mq RelMetadataQuery, viewNode RelNode, viewExprs List<RexNode>, expr RexNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Reorder Parameter	[rexBuilder : RexBuilder, viewNode : RelNode, viewExprs : List<RexNode>, exprs : List<RexNode>, tableMapping : BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>>, mq : RelMetadataQuery] to [rexBuilder : RexBuilder, mq : RelMetadataQuery, viewNode : RelNode, viewExprs : List<RexNode>, exprs : List<RexNode>, tableMapping : BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>>] in method private rewriteExpressions(rexBuilder RexBuilder, mq RelMetadataQuery, viewNode RelNode, viewExprs List<RexNode>, exprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : List<RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Move And Inline Method	protected extractExpressions(topProject Project, node RelNode, rexBuilder RexBuilder) : List<RexNode> moved from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule to class org.apache.calcite.rel.rules.AbstractMaterializedViewRule & inlined to protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void
Reorder Parameter	[rexBuilder : RexBuilder, relBuilder : RelBuilder, input : RelNode, topProject : Project, node : RelNode, topViewProject : Project, viewNode : RelNode, tableMapping : BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>>, mq : RelMetadataQuery] to [relBuilder : RelBuilder, rexBuilder : RexBuilder, mq : RelMetadataQuery, input : RelNode, topProject : Project, node : RelNode, topViewProject : Project, viewNode : RelNode, tableMapping : BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>>] in method protected abstract unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Developers have reported that 10708 commits involve refactoring but only 434 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 434 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c4a26b42f23be1814dc
Issue Title: : Add post-aggregation step for Union in materialized view rewriting
Refactorings at 83cef58b2b51e3e428fa50e532bf6ce6fa8f201c
Rename Method	protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode renamed to protected rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode in class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Rename Parameter	generateUnionRewrites : boolean to generateUnionRewriting : boolean in method protected MaterializedViewJoinRule(operand RelOptRuleOperand, relBuilderFactory RelBuilderFactory, description String, generateUnionRewriting boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Parameter	unionRewriting : boolean in method protected rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Rename Parameter	generateUnionRewrites : boolean to generateUnionRewriting : boolean in method public MaterializedViewProjectJoinRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewProjectJoinRule
Rename Parameter	generateUnionRewrites : boolean to generateUnionRewriting : boolean in method public MaterializedViewProjectFilterRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewProjectFilterRule
Rename Parameter	generateUnionRewrites : boolean to generateUnionRewriting : boolean in method public MaterializedViewOnlyJoinRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewOnlyJoinRule
Rename Parameter	generateUnionRewrites : boolean to generateUnionRewriting : boolean in method public MaterializedViewOnlyFilterRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewOnlyFilterRule
Rename Method	protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode renamed to protected rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode in class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Rename Parameter	generateUnionRewrites : boolean to generateUnionRewriting : boolean in method protected MaterializedViewAggregateRule(operand RelOptRuleOperand, relBuilderFactory RelBuilderFactory, description String, generateUnionRewriting boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Add Parameter	unionRewriting : boolean in method protected rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Rename Parameter	generateUnionRewrites : boolean to generateUnionRewriting : boolean in method public MaterializedViewProjectAggregateRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewProjectAggregateRule
Rename Parameter	generateUnionRewrites : boolean to generateUnionRewriting : boolean in method public MaterializedViewOnlyAggregateRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewOnlyAggregateRule
Rename Parameter	generateUnionRewrites : boolean to generateUnionRewriting : boolean in method protected AbstractMaterializedViewRule(operand RelOptRuleOperand, relBuilderFactory RelBuilderFactory, description String, generateUnionRewriting boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Variable Modifier	final in variable result : RelNode in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Attribute	generateUnionRewrites : boolean to generateUnionRewriting : boolean in class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Method	protected abstract unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode renamed to protected abstract rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode in class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	unionRewriting : boolean in method protected abstract rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Developers have reported that 10708 commits involve refactoring but only 435 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 435 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c4a26b42f23be1814dc
Issue Title: : Add post-aggregation step for Union in materialized view rewriting
Refactorings at c8462e1acb01c0ff1b5d62a1ef318bfcc01301c0
Inline Variable	builder : RelBuilder in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Developers have reported that 10708 commits involve refactoring but only 436 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 436 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c4d26b42f23be1814ed
Issue Title: : Recognize lossless casts in join/aggregate materialized view rewriting rule
Refactorings at 9a691a7db88f96f930a4a4609f8aea6df601a909
Inline Variable	e : RexNode in method private rewriteExpressions(rexBuilder RexBuilder, viewNode RelNode, viewExprs List<RexNode>, exprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>, mq RelMetadataQuery) : List<RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Extract Variable	e : RexNode in method private rewriteExpressions(rexBuilder RexBuilder, viewNode RelNode, viewExprs List<RexNode>, exprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>, mq RelMetadataQuery) : List<RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Extract Method	private replace(e RexNode) : RexNode extracted from public visitCall(call RexCall) : RexNode in class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.replaceWithOriginalReferences.visitor.new RexShuttle
Extract Method	private replace(e RexNode) : RexNode extracted from public visitTableInputRef(inputRef RexTableInputRef) : RexNode in class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.replaceWithOriginalReferences.visitor.new RexShuttle
Add Parameter	originalExprs : List<RexNode> in method private replaceWithOriginalReferences(rexBuilder RexBuilder, originalExprs List<RexNode>, expr RexNode, mapping Map<String,Integer>, mappingLosslessCasts Map<String,Integer>) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	mappingLosslessCasts : Map<String,Integer> in method private replaceWithOriginalReferences(rexBuilder RexBuilder, originalExprs List<RexNode>, expr RexNode, mapping Map<String,Integer>, mappingLosslessCasts Map<String,Integer>) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Developers have reported that 10708 commits involve refactoring but only 437 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 437 commits.

No refactorings detected at d97c14c5dd62ed55da4d771e585973213affcb6e

No refactorings detected at db95f5ba8247a5c00039719e246d6ee27f04d6cf

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c5526b42f23be181549
Issue Title: : Support mixing table columns with extended columns in DML
Refactorings at a6fbafde75a8b603128cb47306d719d25ba6bbc8
Remove Variable Modifier	final in variable expected : String in method public testInsertExtendedColumnList() : void from class org.apache.calcite.sql.parser.SqlParserTest
Remove Variable Modifier	final in variable expected : String in method public testInsertCaseSensitiveExtendedColumnList() : void from class org.apache.calcite.sql.parser.SqlParserTest
Developers have reported that 10708 commits involve refactoring but only 438 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 438 commits.

No refactorings detected at 86a5cc9a45b28bdc6b60d27d6bb018f441109f66

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c5c26b42f23be1815a7
Issue Title: : Add missing support for datetime JDBC functions
Refactorings at 94cb577898e0cab2c1acc92a981133323918660c
Rename Class	org.apache.calcite.sql.fun.SqlQuarterFunction renamed to org.apache.calcite.sql.fun.SqlDatePartFunction
Change Attribute Type	QUARTER : SqlQuarterFunction to QUARTER : SqlDatePartFunction in class org.apache.calcite.sql.fun.SqlStdOperatorTable
Add Parameter	name : String in method public SqlDatePartFunction(name String, timeUnit TimeUnit) from class org.apache.calcite.sql.fun.SqlDatePartFunction
Add Parameter	timeUnit : TimeUnit in method public SqlDatePartFunction(name String, timeUnit TimeUnit) from class org.apache.calcite.sql.fun.SqlDatePartFunction
Developers have reported that 10708 commits involve refactoring but only 439 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 439 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c5e26b42f23be1815b2
Issue Title: : Druid adapter incorrectly pushes down "COUNT(c)"; Druid only supports "COUNT(*)"
Refactorings at a088aab78655e138353f40b57bebaf3cf3aec939
Add Parameter	nullIfEmpty : boolean in method package UdaAccumulatorFactory(aggFunction AggregateFunctionImpl, call AggregateCall, nullIfEmpty boolean) from class org.apache.calcite.interpreter.AggregateNode.UdaAccumulatorFactory
Developers have reported that 10708 commits involve refactoring but only 440 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 440 commits.

No refactorings detected at bdaa485eecf7e5d6a80b3ee7cc3ccd5579c41794

No refactorings detected at 12e020e0f6e157f9339ecaedeb1570cc46d7f99d

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c6826b42f23be181639
Issue Title: : Add TIME/TIMESTAMP/DATE datatype handling to RexImplicationChecker
Refactorings at 419b810fe67539cf7a3d653e918352fbaf10e8b0
Inline Variable	value : Object in method public getValue(inputRef RexNode, literal RexNode) : Pair<Integer,?> from class org.apache.calcite.plan.VisitorDataContext
Change Variable Type	nl : NlsString to rexLiteral : RexLiteral in method public getValue(inputRef RexNode, literal RexNode) : Pair<Integer,?> from class org.apache.calcite.plan.VisitorDataContext
Rename Variable	nl : NlsString to rexLiteral : RexLiteral in method public getValue(inputRef RexNode, literal RexNode) : Pair<Integer,?> from class org.apache.calcite.plan.VisitorDataContext
Remove Method Annotation	@Ignore("work in progress") in method public testSimpleDate() : void from class org.apache.calcite.test.RexImplicationCheckerTest
Remove Method Annotation	@Ignore("work in progress") in method public testSimpleTimeStamp() : void from class org.apache.calcite.test.RexImplicationCheckerTest
Remove Method Annotation	@Ignore("work in progress") in method public testSimpleTime() : void from class org.apache.calcite.test.RexImplicationCheckerTest
Developers have reported that 10708 commits involve refactoring but only 441 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 441 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c6f26b42f23be18168e
Issue Title: : ProcessBuilder is security sensitive; move it to test suite to prevent accidents 
Refactorings at d393cab26e72f3c0de5eebcbeac5d94fff87a997
Change Method Access Modifier	public to package in method package runAppProcess(pb ProcessBuilder, logger Logger, appInput Reader, appOutput Writer) : int from class org.apache.calcite.test.concurrent.ConcurrentTestCommandScript
Move Method	public runAppProcess(pb ProcessBuilder, logger Logger, appInput Reader, appOutput Writer) : int from class org.apache.calcite.util.Util to package runAppProcess(pb ProcessBuilder, logger Logger, appInput Reader, appOutput Writer) : int from class org.apache.calcite.test.concurrent.ConcurrentTestCommandScript
Developers have reported that 10708 commits involve refactoring but only 442 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 442 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c7026b42f23be181697
Issue Title: : Support view partial rewriting in aggregate materialized view rewriting
Refactorings at 991784971006ede1caec5f8e8c2452a77dd485c9
Add Parameter	matchModality : MatchModality in method protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Parameter	matchModality : MatchModality in method protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Add Parameter	matchModality : MatchModality in method protected abstract unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Parameter	allowNullsFK : boolean in method private compensatePartial(sourceTableRefs Set<RelTableRef>, sourceEC EquivalenceClasses, targetTableRefs Set<RelTableRef>, allowNullsFK boolean, compensationEquiColumns Multimap<RexTableInputRef,RexTableInputRef>) : boolean from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Developers have reported that 10708 commits involve refactoring but only 443 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 443 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c7026b42f23be181697
Issue Title: : Support view partial rewriting in aggregate materialized view rewriting
Refactorings at 88da6a18c2f85841cd1466dc99632d9e001da568
Add Parameter	queryEC : EquivalenceClasses in method protected compensateViewPartial(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, queryTableRefs Set<RelTableRef>, queryEC EquivalenceClasses, topViewProject Project, viewNode RelNode, viewTableRefs Set<RelTableRef>) : ViewPartialRewriting from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Reorder Parameter	[rexBuilder : RexBuilder, relBuilder : RelBuilder, input : RelNode, topProject : Project, node : RelNode, queryTableRefs : Set<RelTableRef>, topViewProject : Project, viewNode : RelNode, viewTableRefs : Set<RelTableRef>, mq : RelMetadataQuery] to [relBuilder : RelBuilder, rexBuilder : RexBuilder, mq : RelMetadataQuery, input : RelNode, topProject : Project, node : RelNode, queryTableRefs : Set<RelTableRef>, queryEC : EquivalenceClasses, topViewProject : Project, viewNode : RelNode, viewTableRefs : Set<RelTableRef>] in method protected compensateViewPartial(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, queryTableRefs Set<RelTableRef>, queryEC EquivalenceClasses, topViewProject Project, viewNode RelNode, viewTableRefs Set<RelTableRef>) : ViewPartialRewriting from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Inline Variable	rewrittenQueryCompensationPred : RexNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, queryCompensationPred RexNode, topProject Project, node RelNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Localize Parameter	queryCompensationPred : RexNode to queryCompensationPred : RexNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, viewToQueryTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Variable Modifier	final in variable queryCompensationPred : RexNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, viewToQueryTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Rename Parameter	tableMapping : BiMap<RelTableRef,RelTableRef> to viewToQueryTableMapping : BiMap<RelTableRef,RelTableRef> in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, viewToQueryTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Parameter	compensationColumnsEquiPred : RexNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, viewToQueryTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Parameter	otherCompensationPred : RexNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, viewToQueryTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Parameter	viewEC : EquivalenceClasses in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, viewToQueryTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Parameter	queryEC : EquivalenceClasses in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, viewToQueryTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Remove Parameter	equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>> in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, queryCompensationPred RexNode, topProject Project, node RelNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Change Parameter Type	equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>> to queryEC : EquivalenceClasses in method protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Rename Parameter	equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>> to queryEC : EquivalenceClasses in method protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Rename Parameter	tableMapping : BiMap<RelTableRef,RelTableRef> to queryToViewTableMapping : BiMap<RelTableRef,RelTableRef> in method protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Inline Variable	rewrittenQueryCompensationPred : RexNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, queryCompensationPred RexNode, topProject Project, node RelNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Localize Parameter	queryCompensationPred : RexNode to queryCompensationPred : RexNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Add Variable Modifier	final in variable queryCompensationPred : RexNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Rename Variable	targetNode : RelNode to aggregateInput : RelNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Rename Parameter	tableMapping : BiMap<RelTableRef,RelTableRef> to queryToViewTableMapping : BiMap<RelTableRef,RelTableRef> in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Add Parameter	compensationColumnsEquiPred : RexNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Add Parameter	otherCompensationPred : RexNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Add Parameter	viewEC : EquivalenceClasses in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Add Parameter	queryEC : EquivalenceClasses in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Remove Parameter	equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>> in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, queryCompensationPred RexNode, topProject Project, node RelNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Change Parameter Type	equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>> to queryEC : EquivalenceClasses in method protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Rename Parameter	tableMapping : BiMap<RelTableRef,RelTableRef> to queryToViewTableMapping : BiMap<RelTableRef,RelTableRef> in method protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Rename Parameter	equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>> to queryEC : EquivalenceClasses in method protected unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Add Attribute Modifier	final in attribute private nodeToEquivalenceClass : Map<RexTableInputRef,Set<RexTableInputRef>> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.EquivalenceClasses
Rename Method	private compensateQueryPartial(compensationEquiColumns Multimap<RexTableInputRef,RexTableInputRef>, viewTableRefs Set<RelTableRef>, vEC EquivalenceClasses, queryTableRefs Set<RelTableRef>) : boolean renamed to private compensatePartial(sourceTableRefs Set<RelTableRef>, sourceEC EquivalenceClasses, targetTableRefs Set<RelTableRef>, allowNullsFK boolean, compensationEquiColumns Multimap<RexTableInputRef,RexTableInputRef>) : boolean in class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Extract Method	private generateSwapTableColumnReferencesLineage(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, nodeExprs List<RexNode>) : NodeLineage extracted from private rewriteExpressions(rexBuilder RexBuilder, mq RelMetadataQuery, viewNode RelNode, viewExprs List<RexNode>, exprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : List<RexNode> in class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	viewExprs : List<RexNode> to nodeExprs : List<RexNode> in method private generateSwapTableColumnReferencesLineage(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, nodeExprs List<RexNode>) : NodeLineage from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	viewNode : RelNode to node : RelNode in method private generateSwapTableColumnReferencesLineage(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, nodeExprs List<RexNode>) : NodeLineage from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Inline Variable	compensationResidualPred : RexNode in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Inline Variable	compensationResidualPred : RexNode in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Variable Modifier	final in variable compensationColumnsEquiPred : RexNode in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Variable Modifier	final in variable compensationColumnsEquiPred : RexNode in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Variable Modifier	final in variable viewCompensationPred : RexNode in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Variable	tableMapping : BiMap<RelTableRef,RelTableRef> to queryToViewTableMapping : BiMap<RelTableRef,RelTableRef> in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Variable	queryCompensationPred : RexNode to otherCompensationPred : RexNode in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Change Variable Type	exprs : List<RexNode> to exprs : ImmutableList.Builder<RexNode> in method private extractReferences(rexBuilder RexBuilder, node RelNode) : List<RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Change Variable Type	mapping : Mapping to mapping : Multimap<Integer,Integer> in method private generateEquivalenceClasses(rexBuilder RexBuilder, sourceEC EquivalenceClasses, targetEC EquivalenceClasses) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Variable	queryEquivalenceClasses : List<Set<RexTableInputRef>> to sourceEquivalenceClasses : List<Set<RexTableInputRef>> in method private generateEquivalenceClasses(rexBuilder RexBuilder, sourceEC EquivalenceClasses, targetEC EquivalenceClasses) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Variable	viewEquivalenceClasses : List<Set<RexTableInputRef>> to targetEquivalenceClasses : List<Set<RexTableInputRef>> in method private generateEquivalenceClasses(rexBuilder RexBuilder, sourceEC EquivalenceClasses, targetEC EquivalenceClasses) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	qEC : EquivalenceClasses to sourceEC : EquivalenceClasses in method private generateEquivalenceClasses(rexBuilder RexBuilder, sourceEC EquivalenceClasses, targetEC EquivalenceClasses) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	vEC : EquivalenceClasses to targetEC : EquivalenceClasses in method private generateEquivalenceClasses(rexBuilder RexBuilder, sourceEC EquivalenceClasses, targetEC EquivalenceClasses) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Change Variable Type	mapping : Mapping to mapping : Multimap<Integer,Integer> in method private extractPossibleMapping(sourceEquivalenceClasses List<Set<RexTableInputRef>>, targetEquivalenceClasses List<Set<RexTableInputRef>>) : Multimap<Integer,Integer> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	viewEquivalenceClasses : List<Set<RexTableInputRef>> to targetEquivalenceClasses : List<Set<RexTableInputRef>> in method private extractPossibleMapping(sourceEquivalenceClasses List<Set<RexTableInputRef>>, targetEquivalenceClasses List<Set<RexTableInputRef>>) : Multimap<Integer,Integer> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	queryEquivalenceClasses : List<Set<RexTableInputRef>> to sourceEquivalenceClasses : List<Set<RexTableInputRef>> in method private extractPossibleMapping(sourceEquivalenceClasses List<Set<RexTableInputRef>>, targetEquivalenceClasses List<Set<RexTableInputRef>>) : Multimap<Integer,Integer> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Change Return Type	Mapping to Multimap<Integer,Integer> in method private extractPossibleMapping(sourceEquivalenceClasses List<Set<RexTableInputRef>>, targetEquivalenceClasses List<Set<RexTableInputRef>>) : Multimap<Integer,Integer> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	queryEC : EquivalenceClasses in method protected abstract compensateViewPartial(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, queryTableRefs Set<RelTableRef>, queryEC EquivalenceClasses, topViewProject Project, viewNode RelNode, viewTableRefs Set<RelTableRef>) : ViewPartialRewriting from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Reorder Parameter	[rexBuilder : RexBuilder, relBuilder : RelBuilder, input : RelNode, topProject : Project, node : RelNode, queryTableRefs : Set<RelTableRef>, topViewProject : Project, viewNode : RelNode, viewTableRefs : Set<RelTableRef>, mq : RelMetadataQuery] to [relBuilder : RelBuilder, rexBuilder : RexBuilder, mq : RelMetadataQuery, input : RelNode, topProject : Project, node : RelNode, queryTableRefs : Set<RelTableRef>, queryEC : EquivalenceClasses, topViewProject : Project, viewNode : RelNode, viewTableRefs : Set<RelTableRef>] in method protected abstract compensateViewPartial(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, queryTableRefs Set<RelTableRef>, queryEC EquivalenceClasses, topViewProject Project, viewNode RelNode, viewTableRefs Set<RelTableRef>) : ViewPartialRewriting from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	tableMapping : BiMap<RelTableRef,RelTableRef> to viewToQueryTableMapping : BiMap<RelTableRef,RelTableRef> in method protected abstract rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, viewToQueryTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Variable	tableQNameToTableRefs : Multimap<List<String>,RelTableRef> to tableVNameToTableRefs : Multimap<List<String>,RelTableRef> in method private compensatePartial(sourceTableRefs Set<RelTableRef>, sourceEC EquivalenceClasses, targetTableRefs Set<RelTableRef>, allowNullsFK boolean, compensationEquiColumns Multimap<RexTableInputRef,RexTableInputRef>) : boolean from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	vEC : EquivalenceClasses to sourceEC : EquivalenceClasses in method private compensatePartial(sourceTableRefs Set<RelTableRef>, sourceEC EquivalenceClasses, targetTableRefs Set<RelTableRef>, allowNullsFK boolean, compensationEquiColumns Multimap<RexTableInputRef,RexTableInputRef>) : boolean from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	sourceTableRefs : Set<RelTableRef> in method private compensatePartial(sourceTableRefs Set<RelTableRef>, sourceEC EquivalenceClasses, targetTableRefs Set<RelTableRef>, allowNullsFK boolean, compensationEquiColumns Multimap<RexTableInputRef,RexTableInputRef>) : boolean from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	targetTableRefs : Set<RelTableRef> in method private compensatePartial(sourceTableRefs Set<RelTableRef>, sourceEC EquivalenceClasses, targetTableRefs Set<RelTableRef>, allowNullsFK boolean, compensationEquiColumns Multimap<RexTableInputRef,RexTableInputRef>) : boolean from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	allowNullsFK : boolean in method private compensatePartial(sourceTableRefs Set<RelTableRef>, sourceEC EquivalenceClasses, targetTableRefs Set<RelTableRef>, allowNullsFK boolean, compensationEquiColumns Multimap<RexTableInputRef,RexTableInputRef>) : boolean from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Parameter	viewTableRefs : Set<RelTableRef> in method private compensateQueryPartial(compensationEquiColumns Multimap<RexTableInputRef,RexTableInputRef>, viewTableRefs Set<RelTableRef>, vEC EquivalenceClasses, queryTableRefs Set<RelTableRef>) : boolean from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Parameter	queryTableRefs : Set<RelTableRef> in method private compensateQueryPartial(compensationEquiColumns Multimap<RexTableInputRef,RexTableInputRef>, viewTableRefs Set<RelTableRef>, vEC EquivalenceClasses, queryTableRefs Set<RelTableRef>) : boolean from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Parameter	viewNode : RelNode in method private rewriteExpression(rexBuilder RexBuilder, mq RelMetadataQuery, viewNode RelNode, viewExprs List<RexNode>, expr RexNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	node : RelNode in method private rewriteExpression(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprToRewrite RexNode) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Parameter	viewExprs : List<RexNode> in method private rewriteExpression(rexBuilder RexBuilder, mq RelMetadataQuery, viewNode RelNode, viewExprs List<RexNode>, expr RexNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	nodeExprs : List<RexNode> in method private rewriteExpression(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprToRewrite RexNode) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	expr : RexNode to exprToRewrite : RexNode in method private rewriteExpression(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprToRewrite RexNode) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	ec : EquivalenceClasses in method private rewriteExpression(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprToRewrite RexNode) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	swapTableColumn : boolean in method private rewriteExpression(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprToRewrite RexNode) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Parameter	equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>> in method private rewriteExpression(rexBuilder RexBuilder, mq RelMetadataQuery, viewNode RelNode, viewExprs List<RexNode>, expr RexNode, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	exprs : List<RexNode> to exprsToRewrite : List<RexNode> in method private rewriteExpressions(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprsToRewrite List<RexNode>) : List<RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	viewExprs : List<RexNode> to nodeExprs : List<RexNode> in method private rewriteExpressions(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprsToRewrite List<RexNode>) : List<RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	viewNode : RelNode to node : RelNode in method private rewriteExpressions(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprsToRewrite List<RexNode>) : List<RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	ec : EquivalenceClasses in method private rewriteExpressions(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprsToRewrite List<RexNode>) : List<RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	swapTableColumn : boolean in method private rewriteExpressions(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprsToRewrite List<RexNode>) : List<RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Parameter	equivalenceClassesMap : Map<RexTableInputRef,Set<RexTableInputRef>> in method private rewriteExpressions(rexBuilder RexBuilder, mq RelMetadataQuery, viewNode RelNode, viewExprs List<RexNode>, exprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, equivalenceClassesMap Map<RexTableInputRef,Set<RexTableInputRef>>) : List<RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	originalExprs : List<RexNode> to nodeExprs : List<RexNode> in method private replaceWithOriginalReferences(rexBuilder RexBuilder, nodeExprs List<RexNode>, nodeLineage NodeLineage, exprToRewrite RexNode) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	expr : RexNode to exprToRewrite : RexNode in method private replaceWithOriginalReferences(rexBuilder RexBuilder, nodeExprs List<RexNode>, nodeLineage NodeLineage, exprToRewrite RexNode) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	nodeLineage : NodeLineage in method private replaceWithOriginalReferences(rexBuilder RexBuilder, nodeExprs List<RexNode>, nodeLineage NodeLineage, exprToRewrite RexNode) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Parameter	mapping : Map<String,Integer> in method private replaceWithOriginalReferences(rexBuilder RexBuilder, originalExprs List<RexNode>, expr RexNode, mapping Map<String,Integer>, mappingLosslessCasts Map<String,Integer>) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Parameter	mappingLosslessCasts : Map<String,Integer> in method private replaceWithOriginalReferences(rexBuilder RexBuilder, originalExprs List<RexNode>, expr RexNode, mapping Map<String,Integer>, mappingLosslessCasts Map<String,Integer>) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	queryEC : EquivalenceClasses in method protected compensateViewPartial(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, queryTableRefs Set<RelTableRef>, queryEC EquivalenceClasses, topViewProject Project, viewNode RelNode, viewTableRefs Set<RelTableRef>) : ViewPartialRewriting from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Reorder Parameter	[rexBuilder : RexBuilder, relBuilder : RelBuilder, input : RelNode, topProject : Project, node : RelNode, queryTableRefs : Set<RelTableRef>, topViewProject : Project, viewNode : RelNode, viewTableRefs : Set<RelTableRef>, mq : RelMetadataQuery] to [relBuilder : RelBuilder, rexBuilder : RexBuilder, mq : RelMetadataQuery, input : RelNode, topProject : Project, node : RelNode, queryTableRefs : Set<RelTableRef>, queryEC : EquivalenceClasses, topViewProject : Project, viewNode : RelNode, viewTableRefs : Set<RelTableRef>] in method protected compensateViewPartial(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, queryTableRefs Set<RelTableRef>, queryEC EquivalenceClasses, topViewProject Project, viewNode RelNode, viewTableRefs Set<RelTableRef>) : ViewPartialRewriting from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Rename Parameter	tableMapping : BiMap<RelTableRef,RelTableRef> to queryToViewTableMapping : BiMap<RelTableRef,RelTableRef> in method protected abstract unify(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Developers have reported that 10708 commits involve refactoring but only 444 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 444 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c7326b42f23be1816a0
Issue Title: : Support view partial rewriting in join materialized view rewriting
Refactorings at 6689c7536a94dfed760c65f57c987dfeadc6d71b
Remove Variable Modifier	final in variable topViewProject : Project in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Remove Variable Modifier	final in variable viewNode : RelNode in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Developers have reported that 10708 commits involve refactoring but only 445 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 445 commits.

No refactorings detected at 915c218b0fcbff26652071d267903d97875c7b9e

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3c7926b42f23be1816e0
Issue Title: : CAST('<string>' as TIMESTAMP) adds part of sub-second fraction to the value
Refactorings at 4ba9d1b2284b93bee8f94d4fcff62b8ff2235d84
Extract Method	public unixTimestampToString(timestamp long, precision int) : String extracted from public unixTimestampToString(timestamp long) : String in class org.apache.calcite.avatica.util.DateTimeUtils
Extract Method	public unixTimeToString(time int, precision int) : String extracted from public unixTimeToString(time int) : String in class org.apache.calcite.avatica.util.DateTimeUtils
Add Parameter	precision : int in method private unixTimeToString(buf StringBuilder, time int, precision int) : void from class org.apache.calcite.avatica.util.DateTimeUtils
Add Parameter	p : int in method private checkTimeString(s String, p int, d int) : void from class org.apache.calcite.avatica.util.DateTimeUtilsTest
Add Parameter	p : int in method private checkTimestampString(s String, p int, d long) : void from class org.apache.calcite.avatica.util.DateTimeUtilsTest
Developers have reported that 10708 commits involve refactoring but only 446 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 446 commits.

No refactorings detected at a065200ad714ed5f9015e8a00b534c10f9fa6a15

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3ca326b42f23be181894
Issue Title: : Add DESCRIBE SCHEMA/DATABASE/TABLE/query
Refactorings at da875a67fe8718345e567ef9ac40380cf38d043f
Remove Parameter	columnQualifier : SqlNode in method public SqlDescribeTable(pos SqlParserPos, table SqlIdentifier, column SqlIdentifier, columnQualifier SqlNode) from class org.apache.calcite.sql.SqlDescribeTable
Developers have reported that 10708 commits involve refactoring but only 447 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 447 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3cb826b42f23be181917
Issue Title: : Add time/timestamp with local time zone types to optimizer
Refactorings at 939c9a62b4905d2cfffcb4adaefd76a809aa3520
Extract Variable	operand : Expression in method public implement(translator RexToLixTranslator, call RexCall, translatedOperands List<Expression>) : Expression from class org.apache.calcite.adapter.enumerable.RexImpTable.FloorImplementor
Rename Parameter	translatedOperands : List<Expression> to operand : Expression in method private call(operand Expression, type Type, timeUnit TimeUnit) : Expression from class org.apache.calcite.adapter.enumerable.RexImpTable.FloorImplementor
Change Parameter Type	translatedOperands : List<Expression> to operand : Expression in method private call(operand Expression, type Type, timeUnit TimeUnit) : Expression from class org.apache.calcite.adapter.enumerable.RexImpTable.FloorImplementor
Add Parameter	timeZone : String in method public createInterval(e RexNode, timeZone String) : List<LocalInterval> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Remove Parameter	type : RelDataType in method public createInterval(type RelDataType, e RexNode) : List<LocalInterval> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Parameter	timeZone : TimeZone in method protected extractRanges(node RexNode, timeZone TimeZone, withNot boolean) : List<Range<TimestampString>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Parameter	timeZone : TimeZone in method protected leafToRanges(call RexCall, timeZone TimeZone, withNot boolean) : List<Range<TimestampString>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Parameter	timeZone : TimeZone in method private literalValue(node RexNode, timeZone TimeZone) : TimestampString from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Parameter	timeZone : String in method package Translator(druidTable DruidTable, rowType RelDataType, timeZone String) from class org.apache.calcite.adapter.druid.DruidQuery.Translator
Add Parameter	timeZone : String in method public makeFullTimeExtract(outputName String, timeZone String) : TimeExtractionDimensionSpec from class org.apache.calcite.adapter.druid.TimeExtractionDimensionSpec
Add Parameter	timeZone : String in method public makeTimeExtract(granularity Granularity, outputName String, timeZone String) : TimeExtractionDimensionSpec from class org.apache.calcite.adapter.druid.TimeExtractionDimensionSpec
Add Parameter	timeZone : String in method public makeTimeFloor(granularity Granularity, outputName String, timeZone String) : TimeExtractionDimensionSpec from class org.apache.calcite.adapter.druid.TimeExtractionDimensionSpec
Add Parameter	timeZone : String in method public createDefault(timeZone String) : TimeExtractionFunction from class org.apache.calcite.adapter.druid.TimeExtractionFunction
Add Parameter	timeZone : String in method public createExtractFromGranularity(granularity Granularity, timeZone String) : TimeExtractionFunction from class org.apache.calcite.adapter.druid.TimeExtractionFunction
Add Parameter	timeZone : String in method public createFloorFromGranularity(granularity Granularity, timeZone String) : TimeExtractionFunction from class org.apache.calcite.adapter.druid.TimeExtractionFunction
Extract Class	org.apache.calcite.util.DateTimeStringUtils from class org.apache.calcite.util.TimestampString
Move Method	package pad(length int, v long) : String from class org.apache.calcite.util.TimestampString to package pad(length int, v long) : String from class org.apache.calcite.util.DateTimeStringUtils
Move Method	package hms(b StringBuilder, h int, m int, s int) : StringBuilder from class org.apache.calcite.util.TimestampString to package hms(b StringBuilder, h int, m int, s int) : StringBuilder from class org.apache.calcite.util.DateTimeStringUtils
Move Method	package ymdhms(b StringBuilder, year int, month int, day int, h int, m int, s int) : StringBuilder from class org.apache.calcite.util.TimestampString to package ymdhms(b StringBuilder, year int, month int, day int, h int, m int, s int) : StringBuilder from class org.apache.calcite.util.DateTimeStringUtils
Move Method	package ymd(b StringBuilder, year int, month int, day int) : StringBuilder from class org.apache.calcite.util.TimestampString to package ymd(b StringBuilder, year int, month int, day int) : StringBuilder from class org.apache.calcite.util.DateTimeStringUtils
Move Method	private int4(buf StringBuilder, i int) : void from class org.apache.calcite.util.TimestampString to private int4(buf StringBuilder, i int) : void from class org.apache.calcite.util.DateTimeStringUtils
Move Method	private int2(buf StringBuilder, i int) : void from class org.apache.calcite.util.TimestampString to private int2(buf StringBuilder, i int) : void from class org.apache.calcite.util.DateTimeStringUtils
Developers have reported that 10708 commits involve refactoring but only 448 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 448 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3cb826b42f23be181917
Issue Title: : Add time/timestamp with local time zone types to optimizer
Refactorings at 67071b6b0ba52eeb953badfff39fa10d85b80bf5
Add Class Annotation	@Experimental in class org.apache.calcite.sql.SqlDialect.Handler
Add Class Annotation	@Experimental in class org.apache.calcite.sql.SqlDialect.BaseHandler
Remove Method Annotation	@Deprecated in method public SqlDialect(databaseProduct DatabaseProduct, databaseProductName String, identifierQuoteString String, nullCollation NullCollation) from class org.apache.calcite.sql.SqlDialect
Add Method Annotation	@Experimental in method public SqlDialect(databaseProduct DatabaseProduct, databaseProductName String, identifierQuoteString String, nullCollation NullCollation, handler Handler) from class org.apache.calcite.sql.SqlDialect
Developers have reported that 10708 commits involve refactoring but only 449 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 449 commits.

No refactorings detected at 172db20b2571c676465ccf58e2fd1475748906e9

No refactorings detected at 796a28f9a9d49a16971135074f315d536eb929cf

No refactorings detected at 2156d8265178f92c52f94ef47588a89ab1fdb7de

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3ce226b42f23be181a7c
Issue Title: : Change the return type of RANK, NTILE and other aggregate functions
Refactorings at 54ed57f8244384cf56323450feb5e6cfd6bc6245
Add Method Annotation	@Deprecated in method public SqlRankFunction(requiresOrder boolean, kind SqlKind) from class org.apache.calcite.sql.SqlRankFunction
Developers have reported that 10708 commits involve refactoring but only 450 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 450 commits.

No refactorings detected at c03075719c2f0aa76cb3ab611474db94d5c5f256

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3cf026b42f23be181b1b
Issue Title: : Push Project that follows Aggregate down to Druid
Refactorings at 9a5cd27415ea3a1a3955eaee2cb65aa2d69f62cf
Extract Variable	s : String in method private parseField(fieldNames List<String>, fieldTypes List<ColumnMetaData.Rep>, posTimestampField int, rowBuilder Row.RowBuilder, parser JsonParser) : void from class org.apache.calcite.adapter.druid.DruidConnectionImpl
Remove Variable Modifier	final in variable builder : ImmutableList.Builder<String> in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	postProject : Project in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Remove Variable Modifier	final in variable topAgg : Aggregate in method private validSortLimit(sort Sort, query DruidQuery) : boolean from class org.apache.calcite.adapter.druid.DruidRules.DruidSortRule
Developers have reported that 10708 commits involve refactoring but only 451 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 451 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3cf226b42f23be181b65
Issue Title: : Add back NavigationExpander and NavigationReplacer in SqlValidatorImpl
Refactorings at d3a7c0d794cb9d0079fb37999dcd0dd6992f2041
Add Class Modifier	static in class org.apache.calcite.sql.validate.SqlValidatorImpl.NavigationModifier
Add Class Modifier	static in class org.apache.calcite.sql.validate.SqlValidatorImpl.NavigationExpander
Rename Attribute	currentOffset : SqlNode to offset : SqlNode in class org.apache.calcite.sql.validate.SqlValidatorImpl.NavigationExpander
Add Attribute Modifier	final in attribute package offset : SqlNode from class org.apache.calcite.sql.validate.SqlValidatorImpl.NavigationExpander
Rename Attribute	currentOperator : SqlOperator to op : SqlOperator in class org.apache.calcite.sql.validate.SqlValidatorImpl.NavigationExpander
Add Attribute Modifier	final in attribute package op : SqlOperator from class org.apache.calcite.sql.validate.SqlValidatorImpl.NavigationExpander
Add Class Modifier	static in class org.apache.calcite.sql.validate.SqlValidatorImpl.NavigationReplacer
Add Variable Modifier	final in variable operands : List<SqlNode> in method public visit(call SqlCall) : SqlNode from class org.apache.calcite.sql.validate.SqlValidatorImpl.NavigationReplacer
Rename Method	private validateDefine(node SqlNode, alpha String) : void renamed to private navigationInDefine(node SqlNode, alpha String) : SqlNode in class org.apache.calcite.sql.validate.SqlValidatorImpl
Change Return Type	void to SqlNode in method private navigationInDefine(node SqlNode, alpha String) : SqlNode from class org.apache.calcite.sql.validate.SqlValidatorImpl
Developers have reported that 10708 commits involve refactoring but only 452 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 452 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3cf726b42f23be181b94
Issue Title: : Refine interface Schema#snapshot()
Refactorings at 35209136c5b21b83b1d2a3d4180a121f58e3c2f6
Rename Parameter	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.adapter.jdbc.JdbcSchema
Change Parameter Type	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.adapter.jdbc.JdbcSchema
Change Parameter Type	now : long to version : SchemaVersion in method protected snapshot(parent CalciteSchema, version SchemaVersion) : CalciteSchema from class org.apache.calcite.jdbc.CachingCalciteSchema
Rename Parameter	now : long to version : SchemaVersion in method protected snapshot(parent CalciteSchema, version SchemaVersion) : CalciteSchema from class org.apache.calcite.jdbc.CachingCalciteSchema
Extract Variable	schemaVersion : SchemaVersion in method package ContextImpl(connection CalciteConnectionImpl) from class org.apache.calcite.jdbc.CalciteConnectionImpl.ContextImpl
Change Return Type	ContextImpl to Context in method public createPrepareContext() : Context from class org.apache.calcite.jdbc.CalciteConnectionImpl.CalciteServerStatementImpl
Rename Parameter	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.jdbc.CalciteSchema.SchemaPlusImpl
Change Parameter Type	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.jdbc.CalciteSchema.SchemaPlusImpl
Change Parameter Type	now : long to version : SchemaVersion in method public createSnapshot(version SchemaVersion) : CalciteSchema from class org.apache.calcite.jdbc.CalciteSchema
Rename Parameter	now : long to version : SchemaVersion in method public createSnapshot(version SchemaVersion) : CalciteSchema from class org.apache.calcite.jdbc.CalciteSchema
Change Parameter Type	now : long to version : SchemaVersion in method protected snapshot(parent CalciteSchema, version SchemaVersion) : CalciteSchema from class org.apache.calcite.jdbc.SimpleCalciteSchema
Rename Parameter	now : long to version : SchemaVersion in method protected snapshot(parent CalciteSchema, version SchemaVersion) : CalciteSchema from class org.apache.calcite.jdbc.SimpleCalciteSchema
Rename Parameter	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.prepare.RelOptTableImpl.MySchemaPlus
Change Parameter Type	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.prepare.RelOptTableImpl.MySchemaPlus
Rename Parameter	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.schema.impl.AbstractSchema
Change Parameter Type	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.schema.impl.AbstractSchema
Change Parameter Type	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.schema.impl.DelegatingSchema
Rename Parameter	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.schema.impl.DelegatingSchema
Extract And Move Method	public createPrepareContext() : Context extracted from public createPrepareContext() : ContextImpl in class org.apache.calcite.jdbc.CalciteConnectionImpl.CalciteServerStatementImpl & moved to class org.apache.calcite.jdbc.CalciteConnectionImpl
Rename Parameter	now : long to version : SchemaVersion in method protected abstract snapshot(parent CalciteSchema, version SchemaVersion) : CalciteSchema from class org.apache.calcite.jdbc.CalciteSchema
Change Parameter Type	now : long to version : SchemaVersion in method protected abstract snapshot(parent CalciteSchema, version SchemaVersion) : CalciteSchema from class org.apache.calcite.jdbc.CalciteSchema
Rename Parameter	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.schema.Schema
Change Parameter Type	now : long to version : SchemaVersion in method public snapshot(version SchemaVersion) : Schema from class org.apache.calcite.schema.Schema
Developers have reported that 10708 commits involve refactoring but only 453 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 453 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3cf826b42f23be181ba7
Issue Title: : Reduce the amount of Metadata and table name calls in Druid
Refactorings at f6825f079fe6812d93fd4a90f669c8c33af0a580
Extract Variable	tableNames : Set<String> in method protected getTableMap() : Map<String,Table> from class org.apache.calcite.adapter.druid.DruidSchema
Extract Method	package create(druidSchema DruidSchema, dataSourceName String, intervals List<LocalInterval>, fieldMap Map<String,SqlTypeName>, metricNameSet Set<String>, timestampColumnName String, complexMetrics Map<String,List<ComplexMetric>>) : Table extracted from package create(druidSchema DruidSchema, dataSourceName String, intervals List<LocalInterval>, fieldMap Map<String,SqlTypeName>, metricNameSet Set<String>, timestampColumnName String, connection DruidConnectionImpl, complexMetrics Map<String,List<ComplexMetric>>) : Table in class org.apache.calcite.adapter.druid.DruidTable
Rename Variable	c : DruidConnectionImpl to connection : DruidConnectionImpl in method public create(schema SchemaPlus, name String, operand Map, rowType RelDataType) : Table from class org.apache.calcite.adapter.druid.DruidTableFactory
Developers have reported that 10708 commits involve refactoring but only 454 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 454 commits.

No refactorings detected at b0ae502f117b4b88eb0366077d6d7d55f1319023

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3cf826b42f23be181ba7
Issue Title: : Reduce the amount of Metadata and table name calls in Druid
Refactorings at 310eaa0016a21155fa3d504ba6028c81c49d0d60
Remove Variable Modifier	final in variable statement : Statement in method public testMultipleScannableTableFunctionWithNamedParameters() : void from class org.apache.calcite.test.TableFunctionTest
Remove Variable Modifier	final in variable args : Enumerator<String> in method package run() : void from class org.apache.calcite.adapter.os.SqlShell
Developers have reported that 10708 commits involve refactoring but only 455 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 455 commits.

No refactorings detected at 7ef986e28458637a7e5aa89cf4378c9e9cca04be

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3d0b26b42f23be181c9c
Issue Title: : Create handlers for JDBC dialect-specific generated SQL
Refactorings at bdaa33f9cac508c3802ad0fcced34f1bb37a63c0
Add Method Annotation	@Deprecated in method public SqlDialect(databaseProduct DatabaseProduct, databaseProductName String, identifierQuoteString String, nullCollation NullCollation) from class org.apache.calcite.sql.SqlDialect
Inline Method	private unparseNumeric(writer SqlWriter, call SqlCall) : void inlined to public unparse(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int) : void in class org.apache.calcite.sql.fun.SqlFloorFunction
Inline Method	private unparseDatetimeDefault(writer SqlWriter, call SqlCall) : void inlined to public unparse(writer SqlWriter, call SqlCall, leftPrec int, rightPrec int) : void in class org.apache.calcite.sql.fun.SqlFloorFunction
Change Method Access Modifier	private to public in method public replaceTimeUnitOperand(call SqlCall, literal String, pos SqlParserPos) : SqlCall from class org.apache.calcite.sql.fun.SqlFloorFunction
Add Method Modifier	static in method public replaceTimeUnitOperand(call SqlCall, literal String, pos SqlParserPos) : SqlCall from class org.apache.calcite.sql.fun.SqlFloorFunction
Change Method Access Modifier	private to public in method public unparseDatetimeFunction(writer SqlWriter, call SqlCall, funName String, datetimeFirst Boolean) : void from class org.apache.calcite.sql.fun.SqlFloorFunction
Add Method Modifier	static in method public unparseDatetimeFunction(writer SqlWriter, call SqlCall, funName String, datetimeFirst Boolean) : void from class org.apache.calcite.sql.fun.SqlFloorFunction
Move And Rename Method	private unparseDatetimeMssql(writer SqlWriter, call SqlCall) : void from class org.apache.calcite.sql.fun.SqlFloorFunction to private unparseFloor(writer SqlWriter, call SqlCall) : void from class org.apache.calcite.sql.dialect.MssqlHandler
Change Parameter Type	charLen : Integer to charLen : int in method private unparseFloorWithUnit(writer SqlWriter, call SqlCall, charLen int, offset String) : void from class org.apache.calcite.sql.dialect.MssqlHandler
Move And Rename Method	private unparseMssql(writer SqlWriter, call SqlCall, charLen Integer, offset String) : void from class org.apache.calcite.sql.fun.SqlFloorFunction to private unparseFloorWithUnit(writer SqlWriter, call SqlCall, charLen int, offset String) : void from class org.apache.calcite.sql.dialect.MssqlHandler
Move And Rename Method	private convertToHsqlDb(unit TimeUnitRange) : String from class org.apache.calcite.sql.fun.SqlFloorFunction to private convertTimeUnit(unit TimeUnitRange) : String from class org.apache.calcite.sql.dialect.HsqldbHandler
Move And Rename Method	private unparseDatetimeMysql(writer SqlWriter, call SqlCall) : void from class org.apache.calcite.sql.fun.SqlFloorFunction to private unparseFloor(writer SqlWriter, call SqlCall) : void from class org.apache.calcite.sql.dialect.MysqlHandler
Developers have reported that 10708 commits involve refactoring but only 456 involve refactoring operations
There are 9 duplicate commits with refactoring out of the 456 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3d0b26b42f23be181c9c
Issue Title: : Create handlers for JDBC dialect-specific generated SQL
Refactorings at 67071b6b0ba52eeb953badfff39fa10d85b80bf5
Add Class Annotation	@Experimental in class org.apache.calcite.sql.SqlDialect.Handler
Add Class Annotation	@Experimental in class org.apache.calcite.sql.SqlDialect.BaseHandler
Remove Method Annotation	@Deprecated in method public SqlDialect(databaseProduct DatabaseProduct, databaseProductName String, identifierQuoteString String, nullCollation NullCollation) from class org.apache.calcite.sql.SqlDialect
Add Method Annotation	@Experimental in method public SqlDialect(databaseProduct DatabaseProduct, databaseProductName String, identifierQuoteString String, nullCollation NullCollation, handler Handler) from class org.apache.calcite.sql.SqlDialect
Developers have reported that 10708 commits involve refactoring but only 457 involve refactoring operations
There are 10 duplicate commits with refactoring out of the 457 commits.

No refactorings detected at f10950b58b66954eadc7c275e9549fb9dcc02864

No refactorings detected at 3eb6515d651de14f8baa20cf9987331ab31200fb

No refactorings detected at 9b62ab3dca7c3c8aac3f8c0106ecc459a291d9a6

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3d3e26b42f23be181ec7
Issue Title: : Add APPROX_COUNT_DISTINCT aggregate function
Refactorings at fe3529d9a6d4d826c6e77fc4c0d7d18bd681bb85
Extract Method	public create(aggFunction SqlAggFunction, distinct boolean, approximate boolean, argList List<Integer>, filterArg int, groupCount int, input RelNode, type RelDataType, name String) : AggregateCall extracted from public create(aggFunction SqlAggFunction, distinct boolean, argList List<Integer>, filterArg int, groupCount int, input RelNode, type RelDataType, name String) : AggregateCall in class org.apache.calcite.rel.core.AggregateCall
Extract Method	public create(aggFunction SqlAggFunction, distinct boolean, approximate boolean, argList List<Integer>, filterArg int, type RelDataType, name String) : AggregateCall extracted from public create(aggFunction SqlAggFunction, distinct boolean, argList List<Integer>, filterArg int, type RelDataType, name String) : AggregateCall in class org.apache.calcite.rel.core.AggregateCall
Add Method Annotation	@Deprecated in method public create(aggFunction SqlAggFunction, distinct boolean, argList List<Integer>, filterArg int, groupCount int, input RelNode, type RelDataType, name String) : AggregateCall from class org.apache.calcite.rel.core.AggregateCall
Add Method Annotation	@Deprecated in method public create(aggFunction SqlAggFunction, distinct boolean, argList List<Integer>, filterArg int, type RelDataType, name String) : AggregateCall from class org.apache.calcite.rel.core.AggregateCall
Add Parameter	approximate : boolean in method private AggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, argList List<Integer>, filterArg int, type RelDataType, name String) from class org.apache.calcite.rel.core.AggregateCall
Extract Variable	op : SqlAggFunction in method public get(index int) : AggregateCall from class org.apache.calcite.rel.core.Window.Group.getAggregateCalls.new AbstractList<AggregateCall>
Add Parameter	name : String in method public SqlCountAggFunction(name String) from class org.apache.calcite.sql.fun.SqlCountAggFunction
Remove Variable Modifier	final in variable aggFunction : SqlAggFunction in method private translateAgg(call SqlCall, filter SqlNode, outerCall SqlCall) : void from class org.apache.calcite.sql2rel.SqlToRelConverter.AggConverter
Add Variable Modifier	final in variable type : RelDataType in method private translateAgg(call SqlCall, filter SqlNode, outerCall SqlCall) : void from class org.apache.calcite.sql2rel.SqlToRelConverter.AggConverter
Add Parameter	approximate : boolean in method package AggCallImpl(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands ImmutableList<RexNode>) from class org.apache.calcite.tools.RelBuilder.AggCallImpl
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public aggregateCall(aggFunction SqlAggFunction, distinct boolean, filter RexNode, alias String, operands RexNode...) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands Iterable<? extends RexNode>) : AggCall extracted from public aggregateCall(aggFunction SqlAggFunction, distinct boolean, filter RexNode, alias String, operands Iterable<? extends RexNode>) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public count(distinct boolean, alias String, operands RexNode...) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public countStar(alias String) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public sum(distinct boolean, alias String, operand RexNode) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public avg(distinct boolean, alias String, operand RexNode) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public min(alias String, operand RexNode) : AggCall in class org.apache.calcite.tools.RelBuilder
Extract Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public max(alias String, operand RexNode) : AggCall in class org.apache.calcite.tools.RelBuilder
Add Method Annotation	@Deprecated in method public aggregateCall(aggFunction SqlAggFunction, distinct boolean, filter RexNode, alias String, operands RexNode...) : AggCall from class org.apache.calcite.tools.RelBuilder
Add Method Annotation	@Deprecated in method public aggregateCall(aggFunction SqlAggFunction, distinct boolean, filter RexNode, alias String, operands Iterable<? extends RexNode>) : AggCall from class org.apache.calcite.tools.RelBuilder
Extract Variable	druid : String in method public testPostAggregationWithComplexColumns() : void from class org.apache.calcite.test.DruidAdapterIT
Extract Variable	sql : String in method public testPostAggregationWithComplexColumns() : void from class org.apache.calcite.test.DruidAdapterIT
Extract And Move Method	public create(aggFunction SqlAggFunction, distinct boolean, approximate boolean, argList List<Integer>, filterArg int, type RelDataType, name String) : AggregateCall extracted from private toAggCall(jsonAggCall Map<String,Object>) : AggregateCall in class org.apache.calcite.rel.externalize.RelJsonReader & moved to class org.apache.calcite.rel.core.AggregateCall
Extract And Move Method	public aggregateCall(aggFunction SqlAggFunction, distinct boolean, approximate boolean, filter RexNode, alias String, operands RexNode...) : AggCall extracted from public group(option GroupOption, partitioner Partitioner, parallel int, groupKeys Iterable<? extends GroupKey>) : PigRelBuilder in class org.apache.calcite.tools.PigRelBuilder & moved to class org.apache.calcite.tools.RelBuilder
Developers have reported that 10708 commits involve refactoring but only 458 involve refactoring operations
There are 11 duplicate commits with refactoring out of the 458 commits.

No refactorings detected at 3e587afb0d689e42b432c5024d37916ef8b2ccd4

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3d5c26b42f23be182048
Issue Title: : Add RelBuilder.matchRecognize
Refactorings at 3e97cff7253691bbd7df690721981de4c2d9f88b
Rename Method	public createMatchRecognize(input RelNode, pattern RexNode, rowType RelDataType, strictStart boolean, strictEnd boolean, patternDefinitions Map<String,RexNode>, measures Map<String,RexNode>, after RexNode, subsets Map<String,TreeSet<String>>, allRows boolean, partitionKeys List<RexNode>, orderKeys RelCollation, interval RexNode) : RelNode renamed to public createMatch(input RelNode, pattern RexNode, rowType RelDataType, strictStart boolean, strictEnd boolean, patternDefinitions Map<String,RexNode>, measures Map<String,RexNode>, after RexNode, subsets Map<String,? extends SortedSet<String>>, allRows boolean, partitionKeys List<RexNode>, orderKeys RelCollation, interval RexNode) : RelNode in class org.apache.calcite.rel.core.RelFactories.MatchFactoryImpl
Change Parameter Type	subsets : Map<String,TreeSet<String>> to subsets : Map<String,? extends SortedSet<String>> in method public createMatch(input RelNode, pattern RexNode, rowType RelDataType, strictStart boolean, strictEnd boolean, patternDefinitions Map<String,RexNode>, measures Map<String,RexNode>, after RexNode, subsets Map<String,? extends SortedSet<String>>, allRows boolean, partitionKeys List<RexNode>, orderKeys RelCollation, interval RexNode) : RelNode from class org.apache.calcite.rel.core.RelFactories.MatchFactoryImpl
Change Parameter Type	subsets : Map<String,TreeSet<String>> to subsets : Map<String,? extends SortedSet<String>> in method public create(input RelNode, rowType RelDataType, pattern RexNode, strictStart boolean, strictEnd boolean, patternDefinitions Map<String,RexNode>, measures Map<String,RexNode>, after RexNode, subsets Map<String,? extends SortedSet<String>>, allRows boolean, partitionKeys List<RexNode>, orderKeys RelCollation, interval RexNode) : LogicalMatch from class org.apache.calcite.rel.logical.LogicalMatch
Rename Method	public createMatchRecognize(input RelNode, pattern RexNode, rowType RelDataType, strictStart boolean, strictEnd boolean, patternDefinitions Map<String,RexNode>, measures Map<String,RexNode>, after RexNode, subsets Map<String,TreeSet<String>>, allRows boolean, partitionKeys List<RexNode>, orderKeys RelCollation, interval RexNode) : RelNode renamed to public createMatch(input RelNode, pattern RexNode, rowType RelDataType, strictStart boolean, strictEnd boolean, patternDefinitions Map<String,RexNode>, measures Map<String,RexNode>, after RexNode, subsets Map<String,? extends SortedSet<String>>, allRows boolean, partitionKeys List<RexNode>, orderKeys RelCollation, interval RexNode) : RelNode in class org.apache.calcite.rel.core.RelFactories.MatchFactory
Change Parameter Type	subsets : Map<String,TreeSet<String>> to subsets : Map<String,? extends SortedSet<String>> in method public createMatch(input RelNode, pattern RexNode, rowType RelDataType, strictStart boolean, strictEnd boolean, patternDefinitions Map<String,RexNode>, measures Map<String,RexNode>, after RexNode, subsets Map<String,? extends SortedSet<String>>, allRows boolean, partitionKeys List<RexNode>, orderKeys RelCollation, interval RexNode) : RelNode from class org.apache.calcite.rel.core.RelFactories.MatchFactory
Developers have reported that 10708 commits involve refactoring but only 459 involve refactoring operations
There are 11 duplicate commits with refactoring out of the 459 commits.

No refactorings detected at 6c435a03e83eac6c0d9f13b87ef22ad9f93df714

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3d7426b42f23be18214b
Issue Title: : When ReduceExpressionRule simplifies a nullable expression, allow the result to change type to NOT NULL
Refactorings at 0ea976eed7ec6a4368c6002025a1eba0377df509
Add Method Annotation	@Deprecated in method public FilterReduceExpressionsRule(filterClass Class<? extends Filter>, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.FilterReduceExpressionsRule
Add Method Annotation	@Deprecated in method public ProjectReduceExpressionsRule(projectClass Class<? extends Project>, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.ProjectReduceExpressionsRule
Add Method Annotation	@Deprecated in method public JoinReduceExpressionsRule(joinClass Class<? extends Join>, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.JoinReduceExpressionsRule
Add Method Annotation	@Deprecated in method public CalcReduceExpressionsRule(calcClass Class<? extends Calc>, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.rel.rules.ReduceExpressionsRule.CalcReduceExpressionsRule
Extract Method	protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean, matchNullability boolean) : boolean extracted from protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean) : boolean in class org.apache.calcite.rel.rules.ReduceExpressionsRule
Rename Parameter	desc : String to description : String in method protected ReduceExpressionsRule(clazz Class<? extends RelNode>, relBuilderFactory RelBuilderFactory, description String) from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Method Annotation	@Deprecated in method protected ReduceExpressionsRule(clazz Class<? extends RelNode>, relBuilderFactory RelBuilderFactory, description String) from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Method Annotation	@Deprecated in method protected reduceExpressions(rel RelNode, expList List<RexNode>, predicates RelOptPredicateList, unknownAsFalse boolean) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Add Method Annotation	@Deprecated in method public ExprSimplifier(simplify RexSimplify) from class org.apache.calcite.rex.RexUtil.ExprSimplifier
Remove Method Annotation	@Ignore("[CALCITE-1439] Handling errors during constant reduction") in method public testCastInvalid() : void from class org.apache.calcite.sql.test.SqlOperatorBaseTest
Remove Method Annotation	@Ignore in method public testReduceCase() : void from class org.apache.calcite.test.RelOptRulesTest
Rename Variable	dBeforeEpcoh2 : DateString to dBeforeEpoch2 : DateString in method public testSimpleDate() : void from class org.apache.calcite.test.RexImplicationCheckerTest
Developers have reported that 10708 commits involve refactoring but only 460 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 460 commits.

No refactorings detected at 20eee6313c87a149fb36392a8edf7ede2ec17705

No refactorings detected at d7c4627c78d39627c39452dcc8ee53518632dac9

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3d8226b42f23be1821c6
Issue Title: : RexSimplify.removeNullabilityCast() always removes cast for operand with ANY type
Refactorings at 189aad19c4f904e4dd0602fb64c65c5586f093b2
Remove Thrown Exception Type	Exception in method public testTypeInferenceValidation() : void from class org.apache.calcite.test.RelBuilderTest
Developers have reported that 10708 commits involve refactoring but only 461 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 461 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3d8726b42f23be1821fc
Issue Title: : Replace LocalInterval by Interval in Druid adapter
Refactorings at 20ade9d266d969f230be7b4e0062db17757e53a3
Change Parameter Type	intervals : List<LocalInterval> to intervals : List<Interval> in method package metadata(dataSourceName String, timestampColumnName String, intervals List<Interval>, fieldBuilder Map<String,SqlTypeName>, metricNameBuilder Set<String>, complexMetrics Map<String,List<ComplexMetric>>) : void from class org.apache.calcite.adapter.druid.DruidConnectionImpl
Change Return Type	List<LocalInterval> to List<Interval> in method public createInterval(e RexNode, timeZone String) : List<Interval> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Return Type	LocalInterval to Interval in method public apply(range Range<TimestampString>) : Interval from class org.apache.calcite.adapter.druid.DruidDateTimeUtils.toInterval.intervals.transform.new Function<Range<TimestampString>,Interval>
Change Variable Type	intervals : List<LocalInterval> to intervals : List<Interval> in method protected toInterval(ranges List<Range<TimestampString>>) : List<Interval> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Return Type	List<LocalInterval> to List<Interval> in method protected toInterval(ranges List<Range<TimestampString>>) : List<Interval> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Change Attribute Type	intervals : ImmutableList<LocalInterval> to intervals : ImmutableList<Interval> in class org.apache.calcite.adapter.druid.DruidQuery
Change Parameter Type	intervals : List<LocalInterval> to intervals : List<Interval> in method protected DruidQuery(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable, druidTable DruidTable, intervals List<Interval>, rels List<RelNode>) from class org.apache.calcite.adapter.druid.DruidQuery
Change Parameter Type	intervals : List<LocalInterval> to intervals : List<Interval> in method private create(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable, druidTable DruidTable, intervals List<Interval>, rels List<RelNode>) : DruidQuery from class org.apache.calcite.adapter.druid.DruidQuery
Change Parameter Type	intervals : List<LocalInterval> to intervals : List<Interval> in method public extendQuery(query DruidQuery, intervals List<Interval>) : DruidQuery from class org.apache.calcite.adapter.druid.DruidQuery
Change Parameter Type	intervals : List<LocalInterval> to intervals : List<Interval> in method package metadataQuery(dataSourceName String, intervals List<Interval>) : String from class org.apache.calcite.adapter.druid.DruidQuery
Change Variable Type	intervals : List<LocalInterval> to intervals : List<Interval> in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.druid.DruidRules.DruidFilterRule
Change Attribute Type	DEFAULT_INTERVAL : LocalInterval to DEFAULT_INTERVAL : Interval in class org.apache.calcite.adapter.druid.DruidTable
Change Attribute Type	intervals : ImmutableList<LocalInterval> to intervals : ImmutableList<Interval> in class org.apache.calcite.adapter.druid.DruidTable
Change Parameter Type	intervals : List<LocalInterval> to intervals : List<Interval> in method public DruidTable(schema DruidSchema, dataSource String, protoRowType RelProtoDataType, metricFieldNames Set<String>, timestampFieldName String, intervals List<Interval>, complexMetrics Map<String,List<ComplexMetric>>, allFields Map<String,SqlTypeName>) from class org.apache.calcite.adapter.druid.DruidTable
Change Parameter Type	intervals : List<LocalInterval> to intervals : List<Interval> in method package create(druidSchema DruidSchema, dataSourceName String, intervals List<Interval>, fieldMap Map<String,SqlTypeName>, metricNameSet Set<String>, timestampColumnName String, connection DruidConnectionImpl, complexMetrics Map<String,List<ComplexMetric>>) : Table from class org.apache.calcite.adapter.druid.DruidTable
Change Parameter Type	intervals : List<LocalInterval> to intervals : List<Interval> in method package create(druidSchema DruidSchema, dataSourceName String, intervals List<Interval>, fieldMap Map<String,SqlTypeName>, metricNameSet Set<String>, timestampColumnName String, complexMetrics Map<String,List<ComplexMetric>>) : Table from class org.apache.calcite.adapter.druid.DruidTable
Change Variable Type	intervals : List<LocalInterval> to intervals : List<Interval> in method public create(schema SchemaPlus, name String, operand Map, rowType RelDataType) : Table from class org.apache.calcite.adapter.druid.DruidTableFactory
Change Variable Type	intervals : List<LocalInterval> to intervals : List<Interval> in method private checkDateRangeNoSimplify(f Fixture, e RexNode, intervalMatcher Matcher<String>) : void from class org.apache.calcite.test.DruidDateRangeRulesTest
Change Variable Type	intervals : List<LocalInterval> to intervals : List<Interval> in method private checkDateRange(f Fixture, e RexNode, intervalMatcher Matcher<String>) : void from class org.apache.calcite.test.DruidDateRangeRulesTest
Developers have reported that 10708 commits involve refactoring but only 462 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 462 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3d8926b42f23be182208
Issue Title: : Remove predicates from Filter if they can be proved to be always true or false
Refactorings at a9ac3e486863b36009a6e5e0f066134ad34b3334
Extract Method	private simplifyComparison(e RexCall, clazz Class<C>) : RexNode extracted from private simplifyComparison(e RexCall) : RexNode in class org.apache.calcite.rex.RexSimplify
Extract Method	private simplifyAnd2ForUnknownAsFalse(terms List<RexNode>, notTerms List<RexNode>, clazz Class<C>) : RexNode extracted from package simplifyAnd2ForUnknownAsFalse(terms List<RexNode>, notTerms List<RexNode>) : RexNode in class org.apache.calcite.rex.RexSimplify
Extract Method	private range(comparison SqlKind, c C) : Range<C> extracted from private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range,List<RexNode>>>, term RexNode, ref RexNode, constant RexLiteral, comparison SqlKind) : RexNode in class org.apache.calcite.rex.RexSimplify
Change Variable Type	v0 : Comparable to v0 : C in method private simplifyComparison(e RexCall, clazz Class<C>) : RexNode from class org.apache.calcite.rex.RexSimplify
Change Variable Type	v1 : Comparable to v1 : C in method private simplifyComparison(e RexCall, clazz Class<C>) : RexNode from class org.apache.calcite.rex.RexSimplify
Remove Variable Annotation	@SuppressWarnings("unchecked") in variable comparisonResult : int in method private simplifyComparison(e RexCall) : RexNode from class org.apache.calcite.rex.RexSimplify
Inline Variable	leftRef : boolean in method package simplifyAnd2ForUnknownAsFalse(terms List<RexNode>, notTerms List<RexNode>) : RexNode from class org.apache.calcite.rex.RexSimplify
Inline Variable	rightRef : boolean in method package simplifyAnd2ForUnknownAsFalse(terms List<RexNode>, notTerms List<RexNode>) : RexNode from class org.apache.calcite.rex.RexSimplify
Change Variable Type	rangeTerms : Map<String,Pair<Range,List<RexNode>>> to rangeTerms : Map<String,Pair<Range<C>,List<RexNode>>> in method private simplifyAnd2ForUnknownAsFalse(terms List<RexNode>, notTerms List<RexNode>, clazz Class<C>) : RexNode from class org.apache.calcite.rex.RexSimplify
Change Variable Type	v0 : Comparable to c : C in method private range(comparison SqlKind, c C) : Range<C> from class org.apache.calcite.rex.RexSimplify
Remove Variable Modifier	final in variable v0 : Comparable in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range,List<RexNode>>>, term RexNode, ref RexNode, constant RexLiteral, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Remove Variable Modifier	final in variable v0 : Comparable in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range,List<RexNode>>>, term RexNode, ref RexNode, constant RexLiteral, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Parameterize Variable	v0 : Comparable to c : C in method private range(comparison SqlKind, c C) : Range<C> from class org.apache.calcite.rex.RexSimplify
Add Method Annotation	@Deprecated in method public RexSimplify(rexBuilder RexBuilder, unknownAsFalse boolean, executor RexExecutor) from class org.apache.calcite.rex.RexSimplify
Change Variable Type	p : Pair<Range,List<RexNode>> to p : Pair<Range<C>,List<RexNode>> in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range<C>,List<RexNode>>>, term RexNode, ref RexNode, v0 C, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Change Variable Type	r : Range to r : Range<C> in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range<C>,List<RexNode>>>, term RexNode, ref RexNode, v0 C, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Change Parameter Type	rangeTerms : Map<String,Pair<Range,List<RexNode>>> to rangeTerms : Map<String,Pair<Range<C>,List<RexNode>>> in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range<C>,List<RexNode>>>, term RexNode, ref RexNode, v0 C, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Parameterize Variable	v0 : Comparable to v0 : C in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range<C>,List<RexNode>>>, term RexNode, ref RexNode, v0 C, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Change Variable Type	v0 : Comparable to v0 : C in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range<C>,List<RexNode>>>, term RexNode, ref RexNode, v0 C, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Remove Parameter	constant : RexLiteral in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range,List<RexNode>>>, term RexNode, ref RexNode, constant RexLiteral, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Add Variable Modifier	final in variable query : DruidQuery in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.druid.DruidRules.DruidAggregateProjectRule
Extract Variable	scan : RelNode in method private optimizeFilteredAggregations(call RelOptRuleCall, query DruidQuery, project Project, aggregate Aggregate) : DruidQuery from class org.apache.calcite.adapter.druid.DruidRules.DruidAggregateProjectRule
Add Variable Modifier	final in variable simplify : RexSimplify in method private optimizeFilteredAggregations(call RelOptRuleCall, query DruidQuery, project Project, aggregate Aggregate) : DruidQuery from class org.apache.calcite.adapter.druid.DruidRules.DruidAggregateProjectRule
Add Variable Modifier	final in variable builder : RexBuilder in method private optimizeFilteredAggregations(call RelOptRuleCall, query DruidQuery, project Project, aggregate Aggregate) : DruidQuery from class org.apache.calcite.adapter.druid.DruidRules.DruidAggregateProjectRule
Rename Variable	simplifier : RexSimplify to simplify : RexSimplify in method private optimizeFilteredAggregations(call RelOptRuleCall, query DruidQuery, project Project, aggregate Aggregate) : DruidQuery from class org.apache.calcite.adapter.druid.DruidRules.DruidAggregateProjectRule
Rename Variable	call : AggregateCall to aggCall : AggregateCall in method private optimizeFilteredAggregations(call RelOptRuleCall, query DruidQuery, project Project, aggregate Aggregate) : DruidQuery from class org.apache.calcite.adapter.druid.DruidRules.DruidAggregateProjectRule
Add Parameter	call : RelOptRuleCall in method private optimizeFilteredAggregations(call RelOptRuleCall, query DruidQuery, project Project, aggregate Aggregate) : DruidQuery from class org.apache.calcite.adapter.druid.DruidRules.DruidAggregateProjectRule
Developers have reported that 10708 commits involve refactoring but only 463 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 463 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3d9026b42f23be182246
Issue Title: : Support "CREATE TYPE" DDL
Refactorings at 570aca3d4fea34edcb04d0a5ec02f0fcf8925b0c
Add Parameter	typeMap : NameMap<TypeEntry> in method private CachingCalciteSchema(parent CalciteSchema, schema Schema, name String, subSchemaMap NameMap<CalciteSchema>, tableMap NameMap<TableEntry>, latticeMap NameMap<LatticeEntry>, typeMap NameMap<TypeEntry>, functionMap NameMultimap<FunctionEntry>, functionNames NameSet, nullaryFunctionMap NameMap<FunctionEntry>, path List<? extends List<String>>) from class org.apache.calcite.jdbc.CachingCalciteSchema
Add Parameter	typeMap : NameMap<TypeEntry> in method protected CalciteSchema(parent CalciteSchema, schema Schema, name String, subSchemaMap NameMap<CalciteSchema>, tableMap NameMap<TableEntry>, latticeMap NameMap<LatticeEntry>, typeMap NameMap<TypeEntry>, functionMap NameMultimap<FunctionEntry>, functionNames NameSet, nullaryFunctionMap NameMap<FunctionEntry>, path List<? extends List<String>>) from class org.apache.calcite.jdbc.CalciteSchema
Add Parameter	typeMap : NameMap<TypeEntry> in method private SimpleCalciteSchema(parent CalciteSchema, schema Schema, name String, subSchemaMap NameMap<CalciteSchema>, tableMap NameMap<TableEntry>, latticeMap NameMap<LatticeEntry>, typeMap NameMap<TypeEntry>, functionMap NameMultimap<FunctionEntry>, functionNames NameSet, nullaryFunctionMap NameMap<FunctionEntry>, path List<? extends List<String>>) from class org.apache.calcite.jdbc.SimpleCalciteSchema
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,PrecedenceClimbingParserTest.class,SourceTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelDistributionTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,ExtensionSqlParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlValidatorMatchTest.class,SqlAdvisorTest.class,RelMetadataTest.class,DateRangeRulesTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,MutableRelTest.class,UdfTest.class,TableFunctionTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,ProfilerTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CoreQuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,CollectionTypeTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,PrecedenceClimbingParserTest.class,SourceTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelDistributionTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,ExtensionSqlParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlValidatorMatchTest.class,SqlAdvisorTest.class,RelMetadataTest.class,DateRangeRulesTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,MutableRelTest.class,UdfTest.class,UdtTest.class,TableFunctionTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,ProfilerTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CoreQuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,CollectionTypeTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Remove Variable Modifier	final in variable type : RelDataType in method public execute(context CalcitePrepare.Context) : void from class org.apache.calcite.sql.ddl.SqlCreateTable
Developers have reported that 10708 commits involve refactoring but only 464 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 464 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3daf26b42f23be182359
Issue Title: : Make RelDistribution extend RelMultipleTrait
Refactorings at 9c5ebe340ac45d2d71f3dd3cde391d04ca19a771
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,PrecedenceClimbingParserTest.class,SourceTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,ExtensionSqlParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlValidatorMatchTest.class,SqlAdvisorTest.class,RelMetadataTest.class,DateRangeRulesTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,MutableRelTest.class,UdfTest.class,TableFunctionTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,CollectionTypeTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,PrecedenceClimbingParserTest.class,SourceTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelDistributionTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,ExtensionSqlParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlValidatorMatchTest.class,SqlAdvisorTest.class,RelMetadataTest.class,DateRangeRulesTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,MutableRelTest.class,UdfTest.class,TableFunctionTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,QuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,CollectionTypeTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Developers have reported that 10708 commits involve refactoring but only 465 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 465 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3db726b42f23be182392
Issue Title: : Add separate rules for "AggregateUnionAggregateRule" to reduce potential matching cost in VolcanoPlanner
Refactorings at 879139fc616ae954f5ebcbd53cb3b23c239a9a92
Add Parameter	firstUnionInputClass : Class<? extends RelNode> in method public AggregateUnionAggregateRule(aggregateClass Class<? extends Aggregate>, unionClass Class<? extends Union>, firstUnionInputClass Class<? extends RelNode>, secondUnionInputClass Class<? extends RelNode>, relBuilderFactory RelBuilderFactory, desc String) from class org.apache.calcite.rel.rules.AggregateUnionAggregateRule
Add Parameter	secondUnionInputClass : Class<? extends RelNode> in method public AggregateUnionAggregateRule(aggregateClass Class<? extends Aggregate>, unionClass Class<? extends Union>, firstUnionInputClass Class<? extends RelNode>, secondUnionInputClass Class<? extends RelNode>, relBuilderFactory RelBuilderFactory, desc String) from class org.apache.calcite.rel.rules.AggregateUnionAggregateRule
Add Parameter	desc : String in method public AggregateUnionAggregateRule(aggregateClass Class<? extends Aggregate>, unionClass Class<? extends Union>, firstUnionInputClass Class<? extends RelNode>, secondUnionInputClass Class<? extends RelNode>, relBuilderFactory RelBuilderFactory, desc String) from class org.apache.calcite.rel.rules.AggregateUnionAggregateRule
Remove Thrown Exception Type	Exception in method public testPullAggregateThroughUnion() : void from class org.apache.calcite.test.RelOptRulesTest
Developers have reported that 10708 commits involve refactoring but only 466 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 466 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3dc126b42f23be1823f8
Issue Title: : Fix broken tests for mongodb adapter
Refactorings at eac017c1a63ca1f5834443cd5a78eefef871db01
Add Method Annotation	@Ignore("broken; [CALCITE-2115] is logged to fix it") in method public testUnionPlan() : void from class org.apache.calcite.test.MongoAdapterIT
Add Method Annotation	@Ignore("broken; [CALCITE-2115] is logged to fix it") in method public testDistinctCount() : void from class org.apache.calcite.test.MongoAdapterIT
Add Method Annotation	@Ignore("broken; [CALCITE-2115] is logged to fix it") in method public testProject() : void from class org.apache.calcite.test.MongoAdapterIT
Developers have reported that 10708 commits involve refactoring but only 467 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 467 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3de026b42f23be1824ee
Issue Title: : ArrayIndexOutOfBoundsException in RexSimplify when using ReduceExpressionsRule.JOIN_INSTANCE
Refactorings at 2a171fb86a64e06208564d02ab24bca23d426a0a
Extract Variable	index : int in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range<C>,List<RexNode>>>, term RexNode, ref RexNode, v0 C, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Extract Variable	index : int in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range<C>,List<RexNode>>>, term RexNode, ref RexNode, v0 C, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Extract Variable	index : int in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range<C>,List<RexNode>>>, term RexNode, ref RexNode, v0 C, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Extract Variable	index : int in method private processRange(rexBuilder RexBuilder, terms List<RexNode>, rangeTerms Map<String,Pair<Range<C>,List<RexNode>>>, term RexNode, ref RexNode, v0 C, comparison SqlKind) : RexNode from class org.apache.calcite.rex.RexSimplify
Developers have reported that 10708 commits involve refactoring but only 468 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 468 commits.

No refactorings detected at 47c49c9c64e4ec9e6ff6d33f1c7917c7927e673a

No refactorings detected at 1e405d63e6a25d3411ecc0cfe8f13f0c5d30068a

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3e4d26b42f23be1828d6
Issue Title: : Improve extensibility of AggregateReduceFunctionsRule
Refactorings at 06080ff072dfd72a884423bde3a3befa2c465842
Extract Method	protected newCalcRel(relBuilder RelBuilder, rowType RelDataType, exprs List<RexNode>) : void extracted from private reduceAggs(ruleCall RelOptRuleCall, oldAggRel Aggregate) : void in class org.apache.calcite.rel.rules.AggregateReduceFunctionsRule
Remove Variable Modifier	final in variable projList : List<RexNode> in method private reduceAggs(ruleCall RelOptRuleCall, oldAggRel Aggregate) : void from class org.apache.calcite.rel.rules.AggregateReduceFunctionsRule
Parameterize Variable	projList : List<RexNode> to exprs : List<RexNode> in method protected newCalcRel(relBuilder RelBuilder, rowType RelDataType, exprs List<RexNode>) : void from class org.apache.calcite.rel.rules.AggregateReduceFunctionsRule
Developers have reported that 10708 commits involve refactoring but only 469 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 469 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3e4e26b42f23be1828e8
Issue Title: : Improve DruidQuery cost function, to ensure that EXTRACT gets pushed as an interval if possible
Refactorings at 5c2164da9c19b0b13c29c975af3cc0403b2cbbe7
Rename Variable	druidQueryPart1 : String to druidquery : String in method public testFilterWithFloorOnTime() : void from class org.apache.calcite.test.DruidAdapterIT
Developers have reported that 10708 commits involve refactoring but only 470 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 470 commits.

No refactorings detected at 82cdc2fa7dd84e243f736a9772a03b17bef6215a

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3e5a26b42f23be18298a
Issue Title: : Add more complex end-to-end tests in "plus" module, using Chinook data set
Refactorings at 81d59679b3ffd90339df7d8463c9865b89867e98
Modify Class Annotation	@Suite.SuiteClasses({OsAdapterTest.class,TpcdsTest.class,TpchTest.class}) to @Suite.SuiteClasses({OsAdapterTest.class,TpcdsTest.class,TpchTest.class,EndToEndTest.class}) in class org.apache.calcite.test.PlusSuite
Developers have reported that 10708 commits involve refactoring but only 471 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 471 commits.

No refactorings detected at 8de5d8d000104fc1e48d77abac72811c52fd9cf1

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3e5f26b42f23be1829ed
Issue Title: : NullPointerException in EXTRACT with WHERE ... IN clause if field has null value
Refactorings at d1bada4231c2ce81b6236e0c11d73c85a7df6e83
Remove Variable Modifier	final in variable translatedOperands : List<Expression> in method private implementCall(translator RexToLixTranslator, call RexCall, implementor NotNullImplementor, nullAs NullAs) : Expression from class org.apache.calcite.adapter.enumerable.RexImpTable
Add Parameter Modifier	final in parameter translator : RexToLixTranslator in method private implementCall(translator RexToLixTranslator, call RexCall, implementor NotNullImplementor, nullAs NullAs) : Expression from class org.apache.calcite.adapter.enumerable.RexImpTable
Add Parameter Modifier	final in parameter nullAs : NullAs in method private implementCall(translator RexToLixTranslator, call RexCall, implementor NotNullImplementor, nullAs NullAs) : Expression from class org.apache.calcite.adapter.enumerable.RexImpTable
Extract Method	public handleNull(input Expression, nullAs RexImpTable.NullAs) : Expression extracted from private translate0(expr RexNode, nullAs RexImpTable.NullAs, storageType Type) : Expression in class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Add Variable Modifier	final in variable nullHandled : Expression in method public handleNull(input Expression, nullAs RexImpTable.NullAs) : Expression from class org.apache.calcite.adapter.enumerable.RexToLixTranslator
Developers have reported that 10708 commits involve refactoring but only 472 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 472 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3e6026b42f23be182a04
Issue Title: : JoinPushTransitivePredicatesRule should not create a Filter on top of an equivalent Filter
Refactorings at 499f0c6e9c3b2c35b803037f5b60e54fd4a6a5f3
Extract Method	private checkTarget(inferringFields ImmutableBitSet, allExprsDigests Set<String>, tr RexNode) : boolean extracted from private infer(predicates RexNode, allExprsDigests Set<String>, inferedPredicates List<RexNode>, includeEqualityInference boolean, inferringFields ImmutableBitSet) : void in class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Rename Variable	allExprsDigests : Set<String> to allExprDigests : Set<String> in method public inferPredicates(includeEqualityInference boolean) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Rename Parameter	inferedPredicates : List<RexNode> to inferredPredicates : List<RexNode> in method private infer(predicates RexNode, allExprsDigests Set<String>, inferredPredicates List<RexNode>, includeEqualityInference boolean, inferringFields ImmutableBitSet) : void from class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Add Parameter	simplifier : RexSimplify in method package JoinConditionBasedPredicateInference(joinRel Join, lPreds RexNode, rPreds RexNode, simplifier RexSimplify) from class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Add Parameter	simplifier : RexSimplify in method private JoinConditionBasedPredicateInference(joinRel Join, isSemiJoin boolean, lPreds RexNode, rPreds RexNode, simplifier RexSimplify) from class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Rename Attribute	allExprsDigests : Set<String> to allExprDigests : Set<String> in class org.apache.calcite.rel.metadata.RelMdPredicates.JoinConditionBasedPredicateInference
Extract Variable	cluster : RelOptCluster in method public getPredicates(join Join, mq RelMetadataQuery) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates
Add Variable Modifier	final in variable left : RelNode in method public getPredicates(join Join, mq RelMetadataQuery) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates
Add Variable Modifier	final in variable right : RelNode in method public getPredicates(join Join, mq RelMetadataQuery) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates
Rename Variable	rB : RexBuilder to rexBuilder : RexBuilder in method public getPredicates(join Join, mq RelMetadataQuery) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates
Rename Variable	jI : JoinConditionBasedPredicateInference to joinInference : JoinConditionBasedPredicateInference in method public getPredicates(join Join, mq RelMetadataQuery) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates
Rename Variable	rB : RexBuilder to rexBuilder : RexBuilder in method public getPredicates(union Union, mq RelMetadataQuery) : RelOptPredicateList from class org.apache.calcite.rel.metadata.RelMdPredicates
Extract And Move Method	public simplifyFilterPredicates(predicates Iterable<? extends RexNode>) : RexNode extracted from public filter(predicates Iterable<? extends RexNode>) : RelBuilder in class org.apache.calcite.tools.RelBuilder & moved to class org.apache.calcite.rex.RexSimplify
Developers have reported that 10708 commits involve refactoring but only 473 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 473 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3e6626b42f23be182a43
Issue Title: : Fix build issue caused by CALCITE-2170
Refactorings at 6b1d24746624b13c97df401f344449f44cb6b3bd
Inline Variable	converterOperatorMap : ImmutableMap in method public create(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable, druidTable DruidTable, rels List<RelNode>) : DruidQuery from class org.apache.calcite.adapter.druid.DruidQuery
Developers have reported that 10708 commits involve refactoring but only 474 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 474 commits.

No refactorings detected at 483c0a61b7603b710cf11b953a1847c4da2be030

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3e6926b42f23be182a5e
Issue Title: : Extend SubstitutionVisitor.splitFilter to cover different order of operands
Refactorings at 89f25e221de749766b0c49fb01ee589a595127ef
Extract Variable	condition2 : RexNode in method public splitFilter(simplify RexSimplify, condition RexNode, target RexNode) : RexNode from class org.apache.calcite.plan.SubstitutionVisitor
Extract Variable	target2 : RexNode in method public splitFilter(simplify RexSimplify, condition RexNode, target RexNode) : RexNode from class org.apache.calcite.plan.SubstitutionVisitor
Developers have reported that 10708 commits involve refactoring but only 475 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 475 commits.

No refactorings detected at 3e958cff41e4495b2fd0e21c0715b12cfd45313b

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3e7226b42f23be182abe
Issue Title: : Extend Druid Range Rules to extract interval from Floor
Refactorings at fa19580ecfe404b75fcb6c9c174cfe9da73d2db8
Rename Method	private range(timeUnit TimeUnitRange, comparison SqlKind, c Calendar) : Range<Calendar> renamed to private extractRange(timeUnit TimeUnitRange, comparison SqlKind, c Calendar) : Range<Calendar> in class org.apache.calcite.rel.rules.DateRangeRules.ExtractShuttle
Extract Variable	operand : RexNode in method public visitCall(call RexCall) : RexNode from class org.apache.calcite.rel.rules.DateRangeRules.ExtractShuttle
Remove Variable Modifier	final in variable finder : ExtractFinder in method public test(filter Filter) : boolean from class org.apache.calcite.rel.rules.DateRangeRules.FILTER_PREDICATE.new PredicateImpl<Filter>
Remove Variable Modifier	final in variable finder : ExtractFinder in method package extractTimeUnits(e RexNode) : ImmutableSortedSet<TimeUnitRange> from class org.apache.calcite.rel.rules.DateRangeRules
Remove Variable Modifier	final in variable timeUnits : ImmutableSortedSet<TimeUnitRange> in method public replaceTimeUnits(rexBuilder RexBuilder, e RexNode) : RexNode from class org.apache.calcite.rel.rules.DateRangeRules
Developers have reported that 10708 commits involve refactoring but only 476 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 476 commits.

No refactorings detected at b60b67eb8f62463ccbc230358969ef2450cdbe05

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3e7426b42f23be182adc
Issue Title: : Enable spatial functions by adding 'fun=spatial' to JDBC connect string
Refactorings at c1749ade6638cd2e724f33a09f12f45d8d2a5503
Change Variable Type	tables : List<SqlOperatorTable> to tables : Collection<SqlOperatorTable> in method public fun(operatorTableClass Class<T>, defaultOperatorTable T) : T from class org.apache.calcite.config.CalciteConnectionConfigImpl
Change Return Type	SqlOperatorTable to void in method private operatorTable(s String, tables Collection<SqlOperatorTable>) : void from class org.apache.calcite.config.CalciteConnectionConfigImpl
Add Parameter	tables : Collection<SqlOperatorTable> in method private operatorTable(s String, tables Collection<SqlOperatorTable>) : void from class org.apache.calcite.config.CalciteConnectionConfigImpl
Extract Method	private toOp(typeFactory RelDataTypeFactory, name SqlIdentifier, function Function) : SqlOperator extracted from private toOp(name SqlIdentifier, function Function) : SqlOperator in class org.apache.calcite.prepare.CalciteCatalogReader
Add Method Modifier	static in method private infer(function ScalarFunction) : SqlReturnTypeInference from class org.apache.calcite.prepare.CalciteCatalogReader
Add Method Modifier	static in method private infer(function AggregateFunction) : SqlReturnTypeInference from class org.apache.calcite.prepare.CalciteCatalogReader
Add Parameter	typeFactory : RelDataTypeFactory in method private toSql(typeFactory RelDataTypeFactory, types List<RelDataType>) : List<RelDataType> from class org.apache.calcite.prepare.CalciteCatalogReader
Add Method Modifier	static in method private toSql(typeFactory RelDataTypeFactory, types List<RelDataType>) : List<RelDataType> from class org.apache.calcite.prepare.CalciteCatalogReader
Add Parameter	typeFactory : RelDataTypeFactory in method private toSql(typeFactory RelDataTypeFactory, type RelDataType) : RelDataType from class org.apache.calcite.prepare.CalciteCatalogReader
Add Method Modifier	static in method private toSql(typeFactory RelDataTypeFactory, type RelDataType) : RelDataType from class org.apache.calcite.prepare.CalciteCatalogReader
Add Attribute Annotation	@Experimental in attribute public typeFactory : RelDataTypeFactory from class org.apache.calcite.sql.validate.SqlUserDefinedAggFunction
Developers have reported that 10708 commits involve refactoring but only 477 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 477 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3e8c26b42f23be182ba6
Issue Title: : In JDBC adapter, add SQL dialect for Jethro Data
Refactorings at facd83d311098dd3f35294ba969a19cbf6d54467
Change Class Access Modifier	private to public in class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcJoinRule
Extract Method	public convert(join Join, convertInputTraits boolean) : RelNode extracted from public convert(rel RelNode) : RelNode in class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcJoinRule
Change Method Access Modifier	private to public in method public JdbcJoinRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcJoinRule
Change Method Access Modifier	protected to public in method public JdbcJoin(cluster RelOptCluster, traitSet RelTraitSet, left RelNode, right RelNode, condition RexNode, variablesSet Set<CorrelationId>, joinType JoinRelType) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcJoin
Change Variable Type	calc : LogicalCalc to calc : Calc in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcCalcRule
Change Class Access Modifier	private to public in class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProjectRule
Change Variable Type	project : LogicalProject to project : Project in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProjectRule
Change Method Access Modifier	private to public in method public JdbcProjectRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProjectRule
Change Class Access Modifier	private to public in class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcFilterRule
Change Variable Type	filter : LogicalFilter to filter : Filter in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcFilterRule
Change Method Access Modifier	private to public in method public JdbcFilterRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcFilterRule
Change Class Access Modifier	private to public in class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcAggregateRule
Change Variable Type	agg : LogicalAggregate to agg : Aggregate in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcAggregateRule
Change Method Access Modifier	private to public in method public JdbcAggregateRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcAggregateRule
Change Class Access Modifier	private to public in class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcSortRule
Extract Method	public convert(sort Sort, convertInputTraits boolean) : RelNode extracted from public convert(rel RelNode) : RelNode in class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcSortRule
Change Method Access Modifier	private to public in method public JdbcSortRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcSortRule
Change Class Access Modifier	private to public in class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcUnionRule
Change Variable Type	union : LogicalUnion to union : Union in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcUnionRule
Change Method Access Modifier	private to public in method public JdbcUnionRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcUnionRule
Change Class Access Modifier	private to public in class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcIntersectRule
Change Variable Type	intersect : LogicalIntersect to intersect : Intersect in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcIntersectRule
Change Class Access Modifier	private to public in class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcMinusRule
Change Variable Type	minus : LogicalMinus to minus : Minus in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcMinusRule
Change Variable Type	modify : LogicalTableModify to modify : TableModify in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcTableModificationRule
Change Variable Type	values : LogicalValues to values : Values in method public convert(rel RelNode) : RelNode from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcValuesRule
Change Class Access Modifier	package to public in class org.apache.calcite.adapter.jdbc.JdbcTable
Change Attribute Access Modifier	package to protected in attribute protected jdbcTable : JdbcTable from class org.apache.calcite.adapter.jdbc.JdbcTableScan
Add Parameter	jethroInfo : JethroDataSqlDialect.JethroInfo in method private ContextImpl(databaseProduct DatabaseProduct, databaseProductName String, databaseVersion String, databaseMajorVersion int, databaseMinorVersion int, identifierQuoteString String, nullCollation NullCollation, jethroInfo JethroDataSqlDialect.JethroInfo) from class org.apache.calcite.sql.SqlDialect.ContextImpl
Extract Superclass	org.apache.calcite.rel.rules.AbstractJoinExtractFilterRule from classes [org.apache.calcite.rel.rules.JoinExtractFilterRule]
Pull Up Method	public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.JoinExtractFilterRule to public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.AbstractJoinExtractFilterRule
Add Variable Modifier	final in variable cartesianJoin : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.AbstractJoinExtractFilterRule
Rename Variable	cartesianJoinRel : RelNode to cartesianJoin : RelNode in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.AbstractJoinExtractFilterRule
Developers have reported that 10708 commits involve refactoring but only 478 involve refactoring operations
There are 12 duplicate commits with refactoring out of the 478 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3e8c26b42f23be182ba6
Issue Title: : In JDBC adapter, add SQL dialect for Jethro Data
Refactorings at 81d59679b3ffd90339df7d8463c9865b89867e98
Modify Class Annotation	@Suite.SuiteClasses({OsAdapterTest.class,TpcdsTest.class,TpchTest.class}) to @Suite.SuiteClasses({OsAdapterTest.class,TpcdsTest.class,TpchTest.class,EndToEndTest.class}) in class org.apache.calcite.test.PlusSuite
Developers have reported that 10708 commits involve refactoring but only 479 involve refactoring operations
There are 13 duplicate commits with refactoring out of the 479 commits.

No refactorings detected at 3ce09bdb2adb01fb7b7abed0cc9f17a86ad448f5

No refactorings detected at 73e57ad482b030368b8048874bc1f9159ecc42c4

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3ea826b42f23be182c70
Issue Title: : General improvements for materialized view rewriting rule
Refactorings at 353a8be07b431d04951c05ef2c195f207272f390
Add Parameter	targetNode : RelNode in method private rewriteExpression(rexBuilder RexBuilder, mq RelMetadataQuery, targetNode RelNode, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprToRewrite RexNode) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	targetNode : RelNode in method private rewriteExpressions(rexBuilder RexBuilder, mq RelMetadataQuery, targetNode RelNode, node RelNode, nodeExprs List<RexNode>, tableMapping BiMap<RelTableRef,RelTableRef>, ec EquivalenceClasses, swapTableColumn boolean, exprsToRewrite List<RexNode>) : List<RexNode> from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Rename Parameter	nodeExprs : List<RexNode> to node : RelNode in method private replaceWithOriginalReferences(rexBuilder RexBuilder, node RelNode, nodeLineage NodeLineage, exprToRewrite RexNode) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Change Parameter Type	nodeExprs : List<RexNode> to node : RelNode in method private replaceWithOriginalReferences(rexBuilder RexBuilder, node RelNode, nodeLineage NodeLineage, exprToRewrite RexNode) : RexNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Developers have reported that 10708 commits involve refactoring but only 480 involve refactoring operations
There are 13 duplicate commits with refactoring out of the 480 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3ea826b42f23be182c70
Issue Title: : General improvements for materialized view rewriting rule
Refactorings at aa25dcbe565196fb6b78149042ee817427ed4f68
Extract Variable	target : RelNode in method protected rewriteQuery(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, compensationColumnsEquiPred RexNode, otherCompensationPred RexNode, topProject Project, node RelNode, viewToQueryTableMapping BiMap<RelTableRef,RelTableRef>, viewEC EquivalenceClasses, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Parameter	unionRewritingPullProgram : HepProgram in method protected MaterializedViewJoinRule(operand RelOptRuleOperand, relBuilderFactory RelBuilderFactory, description String, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Parameter	fastBailOut : boolean in method protected MaterializedViewJoinRule(operand RelOptRuleOperand, relBuilderFactory RelBuilderFactory, description String, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Parameter	simplify : RexSimplify in method protected rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewJoinRule
Add Parameter	unionRewritingPullProgram : HepProgram in method public MaterializedViewProjectJoinRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewProjectJoinRule
Add Parameter	fastBailOut : boolean in method public MaterializedViewProjectJoinRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewProjectJoinRule
Add Parameter	unionRewritingPullProgram : HepProgram in method public MaterializedViewProjectFilterRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewProjectFilterRule
Add Parameter	fastBailOut : boolean in method public MaterializedViewProjectFilterRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewProjectFilterRule
Add Parameter	unionRewritingPullProgram : HepProgram in method public MaterializedViewOnlyJoinRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewOnlyJoinRule
Add Parameter	fastBailOut : boolean in method public MaterializedViewOnlyJoinRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewOnlyJoinRule
Add Parameter	unionRewritingPullProgram : HepProgram in method public MaterializedViewOnlyFilterRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewOnlyFilterRule
Add Parameter	fastBailOut : boolean in method public MaterializedViewOnlyFilterRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewOnlyFilterRule
Change Variable Type	newViewNode : RelNode to newViewNode : Aggregate in method protected compensateViewPartial(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, input RelNode, topProject Project, node RelNode, queryTableRefs Set<RelTableRef>, queryEC EquivalenceClasses, topViewProject Project, viewNode RelNode, viewTableRefs Set<RelTableRef>) : ViewPartialRewriting from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Extract Variable	viewAggregateTotalFieldCount : int in method protected rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Extract Variable	rollupAgg : SqlAggFunction in method protected rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Add Parameter	simplify : RexSimplify in method protected rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule
Add Parameter	unionRewritingPullProgram : HepProgram in method public MaterializedViewProjectAggregateRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewProjectAggregateRule
Add Parameter	unionRewritingPullProgram : HepProgram in method public MaterializedViewOnlyAggregateRule(relBuilderFactory RelBuilderFactory, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewOnlyAggregateRule
Change Attribute Access Modifier	private to protected in attribute protected generateUnionRewriting : boolean from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Extract Variable	newPred : RexNode in method protected perform(call RelOptRuleCall, topProject Project, node RelNode) : void from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	unionRewritingPullProgram : HepProgram in method protected AbstractMaterializedViewRule(operand RelOptRuleOperand, relBuilderFactory RelBuilderFactory, description String, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	fastBailOut : boolean in method protected AbstractMaterializedViewRule(operand RelOptRuleOperand, relBuilderFactory RelBuilderFactory, description String, generateUnionRewriting boolean, unionRewritingPullProgram HepProgram, fastBailOut boolean) from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Add Parameter	simplify : RexSimplify in method protected abstract rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Extract And Move Method	private shuttleReferences(rexBuilder RexBuilder, expr RexNode, exprsLineage Multimap<String,Integer>, node RelNode, rewritingMapping Mapping) : RexNode extracted from protected rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode in class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule & moved to class org.apache.calcite.rel.rules.AbstractMaterializedViewRule
Move And Inline Method	private generateMapping(rexBuilder RexBuilder, mq RelMetadataQuery, node RelNode, target RelNode, positions ImmutableBitSet, tableMapping BiMap<RelTableRef,RelTableRef>, sourceEC EquivalenceClasses) : Multimap<Integer,Integer> moved from class org.apache.calcite.rel.rules.AbstractMaterializedViewRule to class org.apache.calcite.rel.rules.AbstractMaterializedViewRule.MaterializedViewAggregateRule & inlined to protected rewriteView(relBuilder RelBuilder, rexBuilder RexBuilder, simplify RexSimplify, mq RelMetadataQuery, matchModality MatchModality, unionRewriting boolean, input RelNode, topProject Project, node RelNode, topViewProject Project, viewNode RelNode, queryToViewTableMapping BiMap<RelTableRef,RelTableRef>, queryEC EquivalenceClasses) : RelNode
Developers have reported that 10708 commits involve refactoring but only 481 involve refactoring operations
There are 13 duplicate commits with refactoring out of the 481 commits.

No refactorings detected at 0ced3b7f5d641c034a7c8867ec088e5c2decf4e3

No refactorings detected at a78400f43b5b4a8e7aa01273b2b76f9ad9c907b5

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3eb926b42f23be182d19
Issue Title: : Use Druid Expressions capabilities to improve the amount of work that can be pushed to Druid
Refactorings at 0e13a8a021b6bdfa64967b5640dc8b970c11883a
Move Class	org.apache.calcite.adapter.druid.DruidQuery.JsonFilter.Type moved to org.apache.calcite.adapter.druid.DruidJsonFilter.Type
Move Class	org.apache.calcite.adapter.druid.DruidQuery.JsonExpressionFilter moved to org.apache.calcite.adapter.druid.DruidJsonFilter.JsonExpressionFilter
Move Class	org.apache.calcite.adapter.druid.DruidQuery.JsonSelector moved to org.apache.calcite.adapter.druid.DruidJsonFilter.JsonSelector
Move Class	org.apache.calcite.adapter.druid.DruidQuery.JsonBound moved to org.apache.calcite.adapter.druid.DruidJsonFilter.JsonBound
Move Class	org.apache.calcite.adapter.druid.DruidQuery.JsonCompositeFilter moved to org.apache.calcite.adapter.druid.DruidJsonFilter.JsonCompositeFilter
Move Class	org.apache.calcite.adapter.druid.DruidQuery.JsonInFilter moved to org.apache.calcite.adapter.druid.DruidJsonFilter.JsonInFilter
Move And Rename Class	org.apache.calcite.adapter.druid.DruidQuery.Json moved and renamed to org.apache.calcite.adapter.druid.DruidJson
Inline Variable	timeInMillis : long in method private parseFieldForName(fieldNames List<String>, fieldTypes List<ColumnMetaData.Rep>, posTimestampField int, rowBuilder Row.RowBuilder, parser JsonParser, fieldName String) : void from class org.apache.calcite.adapter.druid.DruidConnectionImpl
Add Method Annotation	@Nullable in method public createInterval(e RexNode, timeZone String) : List<Interval> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Method Annotation	@Nullable in method protected extractRanges(node RexNode, timeZone TimeZone, withNot boolean) : List<Range<TimestampString>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Method Annotation	@Nullable in method protected leafToRanges(call RexCall, timeZone TimeZone, withNot boolean) : List<Range<TimestampString>> from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Method Annotation	@Nullable in method protected literalValue(node RexNode, timeZone TimeZone) : TimestampString from class org.apache.calcite.adapter.druid.DruidDateTimeUtils
Add Parameter	expression : String in method private JsonAggregation(type String, name String, fieldName String, expression String) from class org.apache.calcite.adapter.druid.DruidQuery.JsonAggregation
Change Attribute Type	collations : ImmutableList<JsonCollation> to collations : List<JsonCollation> in class org.apache.calcite.adapter.druid.DruidQuery.JsonLimit
Change Parameter Type	collations : ImmutableList<JsonCollation> to collations : List<JsonCollation> in method private JsonLimit(type String, limit Integer, collations List<JsonCollation>) from class org.apache.calcite.adapter.druid.DruidQuery.JsonLimit
Change Attribute Type	filter : JsonFilter to filter : DruidJsonFilter in class org.apache.calcite.adapter.druid.DruidQuery.JsonFilteredAggregation
Change Parameter Type	filter : JsonFilter to filter : DruidJsonFilter in method private JsonFilteredAggregation(filter DruidJsonFilter, aggregation JsonAggregation) from class org.apache.calcite.adapter.druid.DruidQuery.JsonFilteredAggregation
Rename Method	private isValidCast(e RexCall, boundedComparator boolean) : boolean renamed to private isValidLeafCast(rexNode RexNode) : boolean in class org.apache.calcite.adapter.druid.DruidQuery
Extract Method	protected computeProjectAsScan(projectRel Project, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<String>,List<VirtualColumn>> extracted from protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec in class org.apache.calcite.adapter.druid.DruidQuery
Extract Method	protected computeProjectGroupSet(projectNode Project, groupSet ImmutableBitSet, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<DimensionSpec>,List<VirtualColumn>> extracted from protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec in class org.apache.calcite.adapter.druid.DruidQuery
Extract Method	private computeSort(fetch Integer, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, queryOutputFieldNames List<String>) : JsonLimit extracted from protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec in class org.apache.calcite.adapter.druid.DruidQuery
Extract Method	private planAsTimeSeries(groupByKeyDims List<DimensionSpec>, jsonFilter DruidJsonFilter, virtualColumnList List<VirtualColumn>, aggregations List<JsonAggregation>, postAggregations List<JsonExpressionPostAgg>, limit JsonLimit, havingFilter DruidJsonFilter) : String extracted from protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec in class org.apache.calcite.adapter.druid.DruidQuery
Extract Method	private planAsTopN(groupByKeyDims List<DimensionSpec>, jsonFilter DruidJsonFilter, virtualColumnList List<VirtualColumn>, aggregations List<JsonAggregation>, postAggregations List<JsonExpressionPostAgg>, limit JsonLimit, havingFilter DruidJsonFilter) : String extracted from protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec in class org.apache.calcite.adapter.druid.DruidQuery
Extract Method	private planAsGroupBy(groupByKeyDims List<DimensionSpec>, jsonFilter DruidJsonFilter, virtualColumnList List<VirtualColumn>, aggregations List<JsonAggregation>, postAggregations List<JsonExpressionPostAgg>, limit JsonLimit, havingFilter DruidJsonFilter) : String extracted from protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec in class org.apache.calcite.adapter.druid.DruidQuery
Add Variable Modifier	final in variable projectedColumnsBuilder : ImmutableList.Builder<String> in method protected computeProjectAsScan(projectRel Project, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<String>,List<VirtualColumn>> from class org.apache.calcite.adapter.druid.DruidQuery
Add Variable Modifier	final in variable virColName : String in method protected computeProjectAsScan(projectRel Project, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<String>,List<VirtualColumn>> from class org.apache.calcite.adapter.druid.DruidQuery
Add Variable Modifier	final in variable usedFieldNames : Set<String> in method protected computeProjectAsScan(projectRel Project, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<String>,List<VirtualColumn>> from class org.apache.calcite.adapter.druid.DruidQuery
Rename Variable	builder : ImmutableList.Builder<String> to projectedColumnsBuilder : ImmutableList.Builder<String> in method protected computeProjectAsScan(projectRel Project, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<String>,List<VirtualColumn>> from class org.apache.calcite.adapter.druid.DruidQuery
Rename Variable	extractColumnName : String to virColName : String in method protected computeProjectAsScan(projectRel Project, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<String>,List<VirtualColumn>> from class org.apache.calcite.adapter.druid.DruidQuery
Change Variable Type	s : String to vc : VirtualColumn in method protected computeProjectGroupSet(projectNode Project, groupSet ImmutableBitSet, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<DimensionSpec>,List<VirtualColumn>> from class org.apache.calcite.adapter.druid.DruidQuery
Remove Variable Modifier	final in variable s : String in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Change Variable Type	project : RexNode to projectNode : Project in method protected computeProjectGroupSet(projectNode Project, groupSet ImmutableBitSet, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<DimensionSpec>,List<VirtualColumn>> from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter Annotation	@Nullable in parameter projectNode : Project in method protected computeProjectGroupSet(projectNode Project, groupSet ImmutableBitSet, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<DimensionSpec>,List<VirtualColumn>> from class org.apache.calcite.adapter.druid.DruidQuery
Remove Variable Modifier	final in variable project : RexNode in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Rename Variable	dimensions : List<DimensionSpec> to dimensionSpecList : List<DimensionSpec> in method protected computeProjectGroupSet(projectNode Project, groupSet ImmutableBitSet, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<DimensionSpec>,List<VirtualColumn>> from class org.apache.calcite.adapter.druid.DruidQuery
Rename Variable	s : String to vc : VirtualColumn in method protected computeProjectGroupSet(projectNode Project, groupSet ImmutableBitSet, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<DimensionSpec>,List<VirtualColumn>> from class org.apache.calcite.adapter.druid.DruidQuery
Parameterize Variable	project : RexNode to projectNode : Project in method protected computeProjectGroupSet(projectNode Project, groupSet ImmutableBitSet, inputRowType RelDataType, druidQuery DruidQuery) : Pair<List<DimensionSpec>,List<VirtualColumn>> from class org.apache.calcite.adapter.druid.DruidQuery
Change Variable Type	collations : ImmutableList<JsonCollation> to collations : List<JsonCollation> in method private computeSort(fetch Integer, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, queryOutputFieldNames List<String>) : JsonLimit from class org.apache.calcite.adapter.druid.DruidQuery
Add Variable Modifier	final in variable collations : List<JsonCollation> in method private computeSort(fetch Integer, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, queryOutputFieldNames List<String>) : JsonLimit from class org.apache.calcite.adapter.druid.DruidQuery
Parameterize Variable	fieldNames : List<String> to queryOutputFieldNames : List<String> in method private computeSort(fetch Integer, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, queryOutputFieldNames List<String>) : JsonLimit from class org.apache.calcite.adapter.druid.DruidQuery
Rename Variable	sortsMetric : boolean to hasExpressionOnTopOfTimeExtract : boolean in method private planAsTimeSeries(groupByKeyDims List<DimensionSpec>, jsonFilter DruidJsonFilter, virtualColumnList List<VirtualColumn>, aggregations List<JsonAggregation>, postAggregations List<JsonExpressionPostAgg>, limit JsonLimit, havingFilter DruidJsonFilter) : String from class org.apache.calcite.adapter.druid.DruidQuery
Inline Variable	finalGranularity : Granularity in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	converterOperatorMap : Map<SqlOperator,DruidSqlOperatorConverter> in method protected DruidQuery(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable, druidTable DruidTable, intervals List<Interval>, rels List<RelNode>, converterOperatorMap Map<SqlOperator,DruidSqlOperatorConverter>) from class org.apache.calcite.adapter.druid.DruidQuery
Change Parameter Type	e : RexCall to rexNode : RexNode in method private isValidLeafCast(rexNode RexNode) : boolean from class org.apache.calcite.adapter.druid.DruidQuery
Rename Parameter	e : RexCall to rexNode : RexNode in method private isValidLeafCast(rexNode RexNode) : boolean from class org.apache.calcite.adapter.druid.DruidQuery
Remove Parameter	boundedComparator : boolean in method private isValidCast(e RexCall, boundedComparator boolean) : boolean from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	converterOperatorMap : Map<SqlOperator,DruidSqlOperatorConverter> in method private create(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable, druidTable DruidTable, intervals List<Interval>, rels List<RelNode>, converterOperatorMap Map<SqlOperator,DruidSqlOperatorConverter>) : DruidQuery from class org.apache.calcite.adapter.druid.DruidQuery
Inline Variable	fieldName : String in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Inline Variable	queryType : QueryType in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Change Variable Type	aggregations : List<JsonAggregation> to aggregateStageFieldNames : List<String> in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Add Variable Modifier	final in variable postProjectFieldName : String in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Add Variable Modifier	final in variable timeseriesFieldNames : List<String> in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Change Variable Type	agg : Pair<AggregateCall,String> to dim : DimensionSpec in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Change Variable Type	postAggs : List<JsonPostAggregation> to postAggs : List<JsonExpressionPostAgg> in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Change Variable Type	jsonFilter : Json to jsonFilter : DruidJsonFilter in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Add Variable Modifier	final in variable jsonFilter : DruidJsonFilter in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Add Variable Modifier	final in variable limit : JsonLimit in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Rename Variable	aggregations : List<JsonAggregation> to aggregateStageFieldNames : List<String> in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Rename Variable	fieldName : String to postProjectFieldName : String in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Rename Variable	fieldName : String to existingFieldName : String in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Rename Variable	fieldNames : List<String> to timeseriesFieldNames : List<String> in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Rename Variable	agg : Pair<AggregateCall,String> to dim : DimensionSpec in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Change Parameter Type	filter : RexNode to filter : Filter in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	project : Project in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	havingFilter : Filter in method protected getQuery(rowType RelDataType, filter Filter, project Project, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project, havingFilter Filter) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Remove Parameter	projects : List<RexNode> in method protected getQuery(rowType RelDataType, filter RexNode, projects List<RexNode>, groupSet ImmutableBitSet, aggCalls List<AggregateCall>, aggNames List<String>, collationIndexes List<Integer>, collationDirections List<Direction>, numericCollationIndexes ImmutableBitSet, fetch Integer, postProject Project) : QuerySpec from class org.apache.calcite.adapter.druid.DruidQuery
Add Variable Modifier	final in variable config : CalciteConnectionConfig in method private getJsonAggregation(name String, aggCall AggregateCall, filterNode RexNode, fieldName String, aggExpression String, druidQuery DruidQuery) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Add Variable Modifier	final in variable aggregation : JsonAggregation in method private getJsonAggregation(name String, aggCall AggregateCall, filterNode RexNode, fieldName String, aggExpression String, druidQuery DruidQuery) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Split Variable	only : String to [aggExpression : String, fieldName : String] in method private getJsonAggregation(name String, aggCall AggregateCall, filterNode RexNode, fieldName String, aggExpression String, druidQuery DruidQuery) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	filterNode : RexNode in method private getJsonAggregation(name String, aggCall AggregateCall, filterNode RexNode, fieldName String, aggExpression String, druidQuery DruidQuery) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	fieldName : String in method private getJsonAggregation(name String, aggCall AggregateCall, filterNode RexNode, fieldName String, aggExpression String, druidQuery DruidQuery) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	aggExpression : String in method private getJsonAggregation(name String, aggCall AggregateCall, filterNode RexNode, fieldName String, aggExpression String, druidQuery DruidQuery) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	druidQuery : DruidQuery in method private getJsonAggregation(name String, aggCall AggregateCall, filterNode RexNode, fieldName String, aggExpression String, druidQuery DruidQuery) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Remove Parameter	fieldNames : List<String> in method protected getJsonAggregation(fieldNames List<String>, name String, aggCall AggregateCall, projects List<RexNode>, translator Translator) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Remove Parameter	projects : List<RexNode> in method protected getJsonAggregation(fieldNames List<String>, name String, aggCall AggregateCall, projects List<RexNode>, translator Translator) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Remove Parameter	translator : Translator in method protected getJsonAggregation(fieldNames List<String>, name String, aggCall AggregateCall, projects List<RexNode>, translator Translator) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Add Method Annotation	@Nullable in method private getJsonAggregation(name String, aggCall AggregateCall, filterNode RexNode, fieldName String, aggExpression String, druidQuery DruidQuery) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Change Method Access Modifier	protected to private in method private getJsonAggregation(name String, aggCall AggregateCall, filterNode RexNode, fieldName String, aggExpression String, druidQuery DruidQuery) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Add Method Modifier	static in method private getJsonAggregation(name String, aggCall AggregateCall, filterNode RexNode, fieldName String, aggExpression String, druidQuery DruidQuery) : JsonAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Inline Method	public checkPostAggregatorExist(rexNode RexNode) : boolean inlined to public onMatch(call RelOptRuleCall) : void in class org.apache.calcite.adapter.druid.DruidRules.DruidPostAggregationProjectRule
Add Variable Modifier	final in variable newQuery : DruidQuery in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.adapter.druid.DruidRules.DruidPostAggregationProjectRule
Change Method Access Modifier	public to protected in method protected getTypeFromMetric(type String) : DruidType from class org.apache.calcite.adapter.druid.DruidType
Change Method Access Modifier	public to protected in method protected getTypeFromMetaData(type String) : DruidType from class org.apache.calcite.adapter.druid.DruidType
Add Method Annotation	@Override in method public getOutputName() : String from class org.apache.calcite.adapter.druid.ExtractionDimensionSpec
Encapsulate Attribute	private format : String from class org.apache.calcite.adapter.druid.TimeExtractionFunction
Encapsulate Attribute	private granularity : Granularity from class org.apache.calcite.adapter.druid.TimeExtractionFunction
Change Variable Type	returnValue : DruidQuery.JsonInFilter to returnValue : DruidJsonFilter in method public testInFilter() : void from class org.apache.calcite.adapter.druid.DruidQueryFilterTest
Remove Thrown Exception Type	NoSuchMethodException in method public testInFilter() : void from class org.apache.calcite.adapter.druid.DruidQueryFilterTest
Remove Thrown Exception Type	InvocationTargetException in method public testInFilter() : void from class org.apache.calcite.adapter.druid.DruidQueryFilterTest
Remove Thrown Exception Type	IllegalAccessException in method public testInFilter() : void from class org.apache.calcite.adapter.druid.DruidQueryFilterTest
Change Variable Type	returnValue : DruidQuery.JsonBound to returnValue : DruidJsonFilter in method public testBetweenFilterStringCase() : void from class org.apache.calcite.adapter.druid.DruidQueryFilterTest
Remove Thrown Exception Type	NoSuchMethodException in method public testBetweenFilterStringCase() : void from class org.apache.calcite.adapter.druid.DruidQueryFilterTest
Remove Thrown Exception Type	InvocationTargetException in method public testBetweenFilterStringCase() : void from class org.apache.calcite.adapter.druid.DruidQueryFilterTest
Remove Thrown Exception Type	IllegalAccessException in method public testBetweenFilterStringCase() : void from class org.apache.calcite.adapter.druid.DruidQueryFilterTest
Rename Method	public testPushofOrderByWithMonthExtract() : void renamed to public testPushOfOrderByWithMonthExtract() : void in class org.apache.calcite.test.DruidAdapterIT
Remove Method Annotation	@Ignore in method public testPushAggregateOnTimeWithExtractHourOfDay() : void from class org.apache.calcite.test.DruidAdapterIT
Add Variable Modifier	final in variable postAggString : String in method public testHyperUniquePostAggregator() : void from class org.apache.calcite.test.DruidAdapterIT
Add Variable Modifier	final in variable postAggString : String in method public testPartiallyPostAggregation() : void from class org.apache.calcite.test.DruidAdapterIT
Add Variable Modifier	final in variable postAggString : String in method public testDivideByZeroDoubleTypeNaN() : void from class org.apache.calcite.test.DruidAdapterIT
Add Variable Modifier	final in variable postAggString : String in method public testInterleaveBetweenAggregateAndGroupOrderByOnDimension() : void from class org.apache.calcite.test.DruidAdapterIT
Rename Variable	postAggString : String to queryType : String in method public testOrderByOnMetricsInSelectDruidQuery() : void from class org.apache.calcite.test.DruidAdapterIT
Add Variable Modifier	final in variable expectedSubExplainNoApprox : String in method public testDistinctCountOnMetric() : void from class org.apache.calcite.test.DruidAdapterIT
Add Variable Modifier	final in variable sql : String in method public testDistinctCountOnMetric() : void from class org.apache.calcite.test.DruidAdapterIT
Rename Variable	expectedSubExplain : String to expectedSubExplainNoApprox : String in method public testDistinctCountOnMetric() : void from class org.apache.calcite.test.DruidAdapterIT
Add Variable Modifier	final in variable sql : String in method public testDistinctCountOnMetricRenamed() : void from class org.apache.calcite.test.DruidAdapterIT
Rename Variable	druidQueryPart1 : String to druidQuery : String in method public testTimeWithFilterOnFloorOnTimeAndCastToTimestamp() : void from class org.apache.calcite.test.DruidAdapterIT
Change Class Access Modifier	private to public in class org.apache.calcite.adapter.druid.DruidJsonFilter.JsonExpressionFilter
Change Method Access Modifier	private to package in method package JsonExpressionFilter(expression String) from class org.apache.calcite.adapter.druid.DruidJsonFilter.JsonExpressionFilter
Change Method Access Modifier	public to private in method private alwaysTrue() : JsonExpressionFilter from class org.apache.calcite.adapter.druid.DruidJsonFilter.JsonExpressionFilter
Remove Method Modifier	final in method public alwaysTrue() : JsonExpressionFilter from class org.apache.calcite.adapter.druid.DruidQuery.JsonExpressionFilter
Change Method Access Modifier	public to private in method private alwaysFalse() : JsonExpressionFilter from class org.apache.calcite.adapter.druid.DruidJsonFilter.JsonExpressionFilter
Remove Method Modifier	final in method public alwaysFalse() : JsonExpressionFilter from class org.apache.calcite.adapter.druid.DruidQuery.JsonExpressionFilter
Change Method Access Modifier	private to protected in method protected JsonBound(dimension String, lower String, lowerStrict boolean, upper String, upperStrict boolean, alphaNumeric boolean, extractionFunction ExtractionFunction) from class org.apache.calcite.adapter.druid.DruidJsonFilter.JsonBound
Change Attribute Type	fields : List<? extends JsonFilter> to fields : List<? extends DruidJsonFilter> in class org.apache.calcite.adapter.druid.DruidJsonFilter.JsonCompositeFilter
Change Parameter Type	fields : Iterable<? extends JsonFilter> to fields : Iterable<? extends DruidJsonFilter> in method private JsonCompositeFilter(type Type, fields Iterable<? extends DruidJsonFilter>) from class org.apache.calcite.adapter.druid.DruidJsonFilter.JsonCompositeFilter
Change Parameter Type	fields : JsonFilter... to fields : DruidJsonFilter... in method private JsonCompositeFilter(type Type, fields DruidJsonFilter...) from class org.apache.calcite.adapter.druid.DruidJsonFilter.JsonCompositeFilter
Change Method Access Modifier	private to protected in method protected JsonInFilter(dimension String, values List<String>, extractionFunction ExtractionFunction) from class org.apache.calcite.adapter.druid.DruidJsonFilter.JsonInFilter
Change Class Access Modifier	private to package in class org.apache.calcite.adapter.druid.DruidJsonFilter
Remove Class Modifier	static in class org.apache.calcite.adapter.druid.DruidQuery.JsonFilter
Change Attribute Access Modifier	package to protected in attribute protected type : Type from class org.apache.calcite.adapter.druid.DruidJsonFilter
Move And Rename Class	org.apache.calcite.adapter.druid.DruidQuery.JsonFilter moved and renamed to org.apache.calcite.adapter.druid.DruidJsonFilter
Change Return Type	JsonPostAggregation to DruidJsonFilter in method private toSimpleDruidFilter(e RexNode, rowType RelDataType, druidQuery DruidQuery) : DruidJsonFilter from class org.apache.calcite.adapter.druid.DruidJsonFilter
Rename Parameter	rexNode : RexNode to e : RexNode in method private toSimpleDruidFilter(e RexNode, rowType RelDataType, druidQuery DruidQuery) : DruidJsonFilter from class org.apache.calcite.adapter.druid.DruidJsonFilter
Add Parameter	rowType : RelDataType in method private toSimpleDruidFilter(e RexNode, rowType RelDataType, druidQuery DruidQuery) : DruidJsonFilter from class org.apache.calcite.adapter.druid.DruidJsonFilter
Add Parameter	druidQuery : DruidQuery in method private toSimpleDruidFilter(e RexNode, rowType RelDataType, druidQuery DruidQuery) : DruidJsonFilter from class org.apache.calcite.adapter.druid.DruidJsonFilter
Remove Parameter	name : String in method public getJsonPostAggregation(name String, rexNode RexNode, rel RelNode) : JsonPostAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Remove Parameter	rel : RelNode in method public getJsonPostAggregation(name String, rexNode RexNode, rel RelNode) : JsonPostAggregation from class org.apache.calcite.adapter.druid.DruidQuery
Add Method Annotation	@Nullable in method private toSimpleDruidFilter(e RexNode, rowType RelDataType, druidQuery DruidQuery) : DruidJsonFilter from class org.apache.calcite.adapter.druid.DruidJsonFilter
Change Method Access Modifier	public to private in method private toSimpleDruidFilter(e RexNode, rowType RelDataType, druidQuery DruidQuery) : DruidJsonFilter from class org.apache.calcite.adapter.druid.DruidJsonFilter
Add Method Modifier	static in method private toSimpleDruidFilter(e RexNode, rowType RelDataType, druidQuery DruidQuery) : DruidJsonFilter from class org.apache.calcite.adapter.druid.DruidJsonFilter
Move And Rename Method	public getJsonPostAggregation(name String, rexNode RexNode, rel RelNode) : JsonPostAggregation from class org.apache.calcite.adapter.druid.DruidQuery to private toSimpleDruidFilter(e RexNode, rowType RelDataType, druidQuery DruidQuery) : DruidJsonFilter from class org.apache.calcite.adapter.druid.DruidJsonFilter
Change Return Type	boolean to Pair<String,ExtractionFunction> in method protected toDruidColumn(rexNode RexNode, rowType RelDataType, druidQuery DruidQuery) : Pair<String,ExtractionFunction> from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	rowType : RelDataType in method protected toDruidColumn(rexNode RexNode, rowType RelDataType, druidQuery DruidQuery) : Pair<String,ExtractionFunction> from class org.apache.calcite.adapter.druid.DruidQuery
Add Parameter	druidQuery : DruidQuery in method protected toDruidColumn(rexNode RexNode, rowType RelDataType, druidQuery DruidQuery) : Pair<String,ExtractionFunction> from class org.apache.calcite.adapter.druid.DruidQuery
Change Method Access Modifier	public to protected in method protected toDruidColumn(rexNode RexNode, rowType RelDataType, druidQuery DruidQuery) : Pair<String,ExtractionFunction> from class org.apache.calcite.adapter.druid.DruidQuery
Add Method Modifier	static in method protected toDruidColumn(rexNode RexNode, rowType RelDataType, druidQuery DruidQuery) : Pair<String,ExtractionFunction> from class org.apache.calcite.adapter.druid.DruidQuery
Move And Rename Method	public checkPostAggregatorExist(rexNode RexNode) : boolean from class org.apache.calcite.adapter.druid.DruidRules.DruidPostAggregationProjectRule to protected toDruidColumn(rexNode RexNode, rowType RelDataType, druidQuery DruidQuery) : Pair<String,ExtractionFunction> from class org.apache.calcite.adapter.druid.DruidQuery
Add Method Annotation	@Override in method public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.VirtualColumn
Add Method Annotation	@Override in method public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.VirtualColumn
Add Method Annotation	@Override in method public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.VirtualColumn
Move Method	public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.DruidQuery.JsonFieldAccessor to public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.VirtualColumn
Move Method	public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.DruidQuery.JsonConstant to public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.VirtualColumn
Add Method Annotation	@Override in method public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.DruidQuery.JsonExpressionPostAgg
Add Method Annotation	@Override in method public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.DruidQuery.JsonExpressionPostAgg
Move Method	public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.DruidQuery.JsonGreatestLeast to public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.DruidQuery.JsonExpressionPostAgg
Move Method	public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.DruidQuery.JsonArithmetic to public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.DruidQuery.JsonExpressionPostAgg
Move Method	public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.DruidQuery.JsonHyperUniqueCardinality to public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.VirtualColumn
Move Method	public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.DruidQuery.JsonThetaSketchEstimate to public write(generator JsonGenerator) : void from class org.apache.calcite.adapter.druid.DruidQuery.JsonExpressionPostAgg
Extract And Move Method	protected toNotDruidFilter(druidJsonFilter DruidJsonFilter) : DruidJsonFilter extracted from protected getJsonAggregation(fieldNames List<String>, name String, aggCall AggregateCall, projects List<RexNode>, translator Translator) : JsonAggregation in class org.apache.calcite.adapter.druid.DruidQuery & moved to class org.apache.calcite.adapter.druid.DruidJsonFilter
Developers have reported that 10708 commits involve refactoring but only 482 involve refactoring operations
There are 13 duplicate commits with refactoring out of the 482 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3eb926b42f23be182d19
Issue Title: : Use Druid Expressions capabilities to improve the amount of work that can be pushed to Druid
Refactorings at 6b1d24746624b13c97df401f344449f44cb6b3bd
Inline Variable	converterOperatorMap : ImmutableMap in method public create(cluster RelOptCluster, traitSet RelTraitSet, table RelOptTable, druidTable DruidTable, rels List<RelNode>) : DruidQuery from class org.apache.calcite.adapter.druid.DruidQuery
Developers have reported that 10708 commits involve refactoring but only 483 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 483 commits.

No refactorings detected at 09693abbe333ecf3c973ddee33ff8d31b20386d4

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3ede26b42f23be182e88
Issue Title: : Extend rule to push predicates into CASE statement
Refactorings at 9e07f1332bfec6ac00e5b23e5d14a3295a5e12b0
Extract Variable	changed : boolean in method protected reduceExpressionsInternal(rel RelNode, simplify RexSimplify, expList List<RexNode>, predicates RelOptPredicateList) : boolean from class org.apache.calcite.rel.rules.ReduceExpressionsRule
Developers have reported that 10708 commits involve refactoring but only 484 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 484 commits.

No refactorings detected at 9085b601081689b5b7f1e9f57deb20e2229910cb

No refactorings detected at d83cb9029e37c52fba7d07a5a33978a9f01b8c5f

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3ef426b42f23be182f3d
Issue Title: : JDBC adapter incorrectly pushes windowed aggregates down to HSQLDB
Refactorings at 502c108473e535a76cebc5e09bd6be5efcc24531
Add Method Annotation	@Deprecated in method package JdbcConverterRule(clazz Class<? extends RelNode>, in RelTrait, out JdbcConvention, description String) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcConverterRule
Add Method Annotation	@Deprecated in method public JdbcJoinRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcJoinRule
Add Parameter	relBuilderFactory : RelBuilderFactory in method private JdbcCalcRule(out JdbcConvention, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcCalcRule
Add Parameter Modifier	final in parameter out : JdbcConvention in method public JdbcProjectRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProjectRule
Add Method Annotation	@Deprecated in method public JdbcProjectRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcProjectRule
Add Method Annotation	@Deprecated in method public JdbcFilterRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcFilterRule
Add Method Annotation	@Deprecated in method public JdbcAggregateRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcAggregateRule
Add Method Annotation	@Deprecated in method public JdbcSortRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcSortRule
Add Method Annotation	@Deprecated in method public JdbcUnionRule(out JdbcConvention) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcUnionRule
Add Parameter	relBuilderFactory : RelBuilderFactory in method private JdbcIntersectRule(out JdbcConvention, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcIntersectRule
Add Parameter	relBuilderFactory : RelBuilderFactory in method private JdbcMinusRule(out JdbcConvention, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcMinusRule
Add Parameter	relBuilderFactory : RelBuilderFactory in method private JdbcTableModificationRule(out JdbcConvention, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcTableModificationRule
Add Parameter	relBuilderFactory : RelBuilderFactory in method private JdbcValuesRule(out JdbcConvention, relBuilderFactory RelBuilderFactory) from class org.apache.calcite.adapter.jdbc.JdbcRules.JdbcValuesRule
Extract Method	public rules(out JdbcConvention, relBuilderFactory RelBuilderFactory) : List<RelOptRule> extracted from public rules(out JdbcConvention) : List<RelOptRule> in class org.apache.calcite.adapter.jdbc.JdbcRules
Developers have reported that 10708 commits involve refactoring but only 485 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 485 commits.

No refactorings detected at d83cb9029e37c52fba7d07a5a33978a9f01b8c5f

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3f0c26b42f23be183053
Issue Title: : Fix alerts raised by lgtm.com
Refactorings at 09be7e74a6a4d1b1c4f640c8e69b5ebdd467d811
Change Variable Type	rowCount : Double to rowCount : double in method public getDistinctRowCount(rel Union, mq RelMetadataQuery, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Variable Type	selectivity : Double to selectivity : double in method public getDistinctRowCount(rel Values, mq RelMetadataQuery, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Variable Type	nRows : Double to nRows : double in method public getDistinctRowCount(rel Values, mq RelMetadataQuery, groupKey ImmutableBitSet, predicate RexNode) : Double from class org.apache.calcite.rel.metadata.RelMdDistinctRowCount
Change Variable Type	population : Double to population : double in method public getPopulationSize(rel Union, mq RelMetadataQuery, groupKey ImmutableBitSet) : Double from class org.apache.calcite.rel.metadata.RelMdPopulationSize
Change Variable Type	d : Double to d : double in method public averageRowSize(rel RelNode, mq RelMetadataQuery) : Double from class org.apache.calcite.rel.metadata.RelMdSize
Change Variable Type	average : Double to average : double in method public averageTypeValueSize(type RelDataType) : Double from class org.apache.calcite.rel.metadata.RelMdSize
Change Variable Type	dimRows : Double to dimRows : double in method private computeScore(factRel RelNode, dimRel RelNode, semiJoin SemiJoin) : double from class org.apache.calcite.rel.rules.LoptSemiJoinOptimizer
Modify Class Annotation	@Suite.SuiteClasses({PrimitiveTest.class,Linq4jTest.class,ExpressionTest.class,OptimizerTest.class,InlinerTest.class,DeterministicTest.class,BlockBuilderTest.class,FunctionTest.class,TypeTest.class,CorrelateJoinTest.class}) to @Suite.SuiteClasses({PrimitiveTest.class,Linq4jTest.class,ExpressionTest.class,OptimizerTest.class,InlinerTest.class,LookupImplTest.class,DeterministicTest.class,BlockBuilderTest.class,FunctionTest.class,TypeTest.class,CorrelateJoinTest.class}) in class org.apache.calcite.linq4j.test.Linq4jSuite
Developers have reported that 10708 commits involve refactoring but only 486 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 486 commits.

No refactorings detected at fd5dc8adf4bca6a4f0c631479985cbb2b43b47e4

No refactorings detected at b0f470473087982c48518860b9199a7735d57a5f

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3f1626b42f23be1830a9
Issue Title: : Do not push down NOT condition in JOIN
Refactorings at e78f8c61e3ed9c9637a2061db426680b1b3ad042
Extract Variable	emptyProgram : HepProgram in method public testJoinPushTransitivePredicatesRule() : void from class org.apache.calcite.test.RelOptRulesTest
Rename Variable	hepProgram : HepProgram to program : HepProgram in method public testJoinPushTransitivePredicatesRule2() : void from class org.apache.calcite.test.RelOptRulesTest
Developers have reported that 10708 commits involve refactoring but only 487 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 487 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3f4226b42f23be183234
Issue Title: : AggregateJoinTransposeRule fails to split aggregate call if input contains an aggregate call and has distinct rows
Refactorings at 446945c7cd3a1770da89636783d60517d7f340ce
Extract Variable	index : int in method public onMatch(call RelOptRuleCall) : void from class org.apache.calcite.rel.rules.AggregateJoinTransposeRule
Developers have reported that 10708 commits involve refactoring but only 488 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 488 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3f4926b42f23be183289
Issue Title: : Strange cast created for ROW comparison
Refactorings at da568324ad84c5a792f2b9c2bd2c827c1440b19c
Move And Rename Class	org.apache.calcite.sql.type.SqlTypeFactoryTest.Fixture moved and renamed to org.apache.calcite.sql.type.SqlTypeFixture
Change Variable Type	f : Fixture to f : SqlTypeFixture in method public testLeastRestrictiveWithAny() : void from class org.apache.calcite.sql.type.SqlTypeFactoryTest
Change Variable Type	f : Fixture to f : SqlTypeFixture in method public testLeastRestrictiveWithNumbers() : void from class org.apache.calcite.sql.type.SqlTypeFactoryTest
Change Variable Type	f : Fixture to f : SqlTypeFixture in method public testLeastRestrictiveWithNullability() : void from class org.apache.calcite.sql.type.SqlTypeFactoryTest
Change Variable Type	f : Fixture to f : SqlTypeFixture in method public testLeastRestrictiveWithNull() : void from class org.apache.calcite.sql.type.SqlTypeFactoryTest
Change Variable Type	f : Fixture to f : SqlTypeFixture in method public testArrayPrecedenceList() : void from class org.apache.calcite.sql.type.SqlTypeFactoryTest
Modify Class Annotation	@Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,PrecedenceClimbingParserTest.class,SourceTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelDistributionTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,ExtensionSqlParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlValidatorMatchTest.class,SqlAdvisorTest.class,RelMetadataTest.class,DateRangeRulesTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,MutableRelTest.class,UdfTest.class,UdtTest.class,TableFunctionTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,ProfilerTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CoreQuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,CollectionTypeTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) to @Suite.SuiteClasses({ArrayTableTest.class,BitSetsTest.class,ImmutableBitSetTest.class,DirectedGraphTest.class,ReflectVisitorTest.class,RelOptUtilTest.class,RelCollationTest.class,UtilTest.class,PrecedenceClimbingParserTest.class,SourceTest.class,MappingTest.class,CalciteResourceTest.class,FilteratorTest.class,PermutationTestCase.class,SqlFunctionsTest.class,SqlTypeNameTest.class,ModelTest.class,SqlValidatorFeatureTest.class,VolcanoPlannerTraitTest.class,InterpreterTest.class,VolcanoPlannerTest.class,HepPlannerTest.class,TraitPropagationTest.class,RelDistributionTest.class,RelWriterTest.class,RexProgramTest.class,SqlOperatorBindingTest.class,RexTransformerTest.class,BinarySearchTest.class,EnumerablesTest.class,ExceptionMessageTest.class,InduceGroupingTypeTest.class,RelOptPlanReaderTest.class,RexBuilderTest.class,SqlTypeFactoryTest.class,SqlTypeUtilTest.class,SqlValidatorUtilTest.class,SqlParserTest.class,SqlUnParserTest.class,ExtensionSqlParserTest.class,SqlSetOptionOperatorTest.class,SqlPrettyWriterTest.class,SqlValidatorTest.class,SqlValidatorMatchTest.class,SqlAdvisorTest.class,RelMetadataTest.class,DateRangeRulesTest.class,RelOptRulesTest.class,ScannableTableTest.class,RexExecutorTest.class,SqlLimitsTest.class,JdbcFrontLinqBackTest.class,JdbcFrontJdbcBackTest.class,SqlToRelConverterTest.class,RelToSqlConverterTest.class,SqlOperatorTest.class,ChunkListTest.class,FrameworksTest.class,EnumerableCorrelateTest.class,LookupOperatorOverloadsTest.class,LexCaseSensitiveTest.class,CollationConversionTest.class,TraitConversionTest.class,ComboRuleTest.class,MutableRelTest.class,UdfTest.class,UdtTest.class,TableFunctionTest.class,PlannerTest.class,RelBuilderTest.class,PigRelBuilderTest.class,RexImplicationCheckerTest.class,MaterializationTest.class,JdbcAdapterTest.class,LinqFrontJdbcBackTest.class,JdbcFrontJdbcBackLinqMiddleTest.class,CalciteSqlOperatorTest.class,ProfilerTest.class,LatticeTest.class,ReflectiveSchemaTest.class,JdbcTest.class,CoreQuidemTest.class,CalciteRemoteDriverTest.class,StreamTest.class,TableInRootSchemaTest.class,RelMdColumnOriginsTest.class,MultiJdbcSchemaJoinTest.class,SqlLineTest.class,CollectionTypeTest.class,SqlToRelConverterExtendedTest.class,PartiallyOrderedSetTest.class,FoodmartTest.class}) in class org.apache.calcite.test.CalciteSuite
Change Class Access Modifier	private to package in class org.apache.calcite.sql.type.SqlTypeFixture
Remove Class Modifier	static in class org.apache.calcite.sql.type.SqlTypeFactoryTest.Fixture
Developers have reported that 10708 commits involve refactoring but only 489 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 489 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3f5026b42f23be1832d6
Issue Title: : Extend simplification of expressions with CEIL function over date types
Refactorings at e7a4e8431f56ee4acd92b0b2ec5731a97f4e2be2
Rename Method	private simplifyFloor(e RexCall) : RexNode renamed to private simplifyCeilFloor(e RexCall) : RexNode in class org.apache.calcite.rex.RexSimplify
Rename Method	public testSimplifyFloor() : void renamed to public testSimplifyCeilFloor() : void in class org.apache.calcite.test.RexImplicationCheckerTest
Rename Variable	simplifiedExpr : RexCall to floorSimplifiedExpr : RexCall in method public testSimplifyCeilFloor() : void from class org.apache.calcite.test.RexImplicationCheckerTest
Rename Variable	simplifiedExpr : RexCall to floorSimplifiedExpr : RexCall in method public testSimplifyCeilFloor() : void from class org.apache.calcite.test.RexImplicationCheckerTest
Developers have reported that 10708 commits involve refactoring but only 490 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 490 commits.

No refactorings detected at a9d6cfdfdce908b31a4361ac0460b83548d0fd4b

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3f7326b42f23be183474
Issue Title: : Enhance SubQueryRemoveRule to rewrite IN operator with the constant from the left side more optimally
Refactorings at 1ae6a52603006741a4cb6bf558c58d9ac08e866a
Extract Method	private rewriteScalarQuery(e RexSubQuery, variablesSet Set<CorrelationId>, builder RelBuilder, inputCount int, offset int) : RexNode extracted from protected apply(e RexSubQuery, variablesSet Set<CorrelationId>, logic RelOptUtil.Logic, builder RelBuilder, inputCount int, offset int) : RexNode in class org.apache.calcite.rel.rules.SubQueryRemoveRule
Extract Method	private rewriteSome(e RexSubQuery, builder RelBuilder) : RexNode extracted from protected apply(e RexSubQuery, variablesSet Set<CorrelationId>, logic RelOptUtil.Logic, builder RelBuilder, inputCount int, offset int) : RexNode in class org.apache.calcite.rel.rules.SubQueryRemoveRule
Extract Method	private rewriteExists(e RexSubQuery, variablesSet Set<CorrelationId>, logic RelOptUtil.Logic, builder RelBuilder) : RexNode extracted from protected apply(e RexSubQuery, variablesSet Set<CorrelationId>, logic RelOptUtil.Logic, builder RelBuilder, inputCount int, offset int) : RexNode in class org.apache.calcite.rel.rules.SubQueryRemoveRule
Extract Method	private rewriteIn(e RexSubQuery, variablesSet Set<CorrelationId>, logic RelOptUtil.Logic, builder RelBuilder, offset int) : RexNode extracted from protected apply(e RexSubQuery, variablesSet Set<CorrelationId>, logic RelOptUtil.Logic, builder RelBuilder, inputCount int, offset int) : RexNode in class org.apache.calcite.rel.rules.SubQueryRemoveRule
Extract Variable	isNullOpperands : List<RexNode> in method private rewriteIn(e RexSubQuery, variablesSet Set<CorrelationId>, logic RelOptUtil.Logic, builder RelBuilder, offset int) : RexNode from class org.apache.calcite.rel.rules.SubQueryRemoveRule
Extract Variable	refOffset : int in method private rewriteIn(e RexSubQuery, variablesSet Set<CorrelationId>, logic RelOptUtil.Logic, builder RelBuilder, offset int) : RexNode from class org.apache.calcite.rel.rules.SubQueryRemoveRule
Replace Loop With Pipeline	for(operand: e.getOperands()) with final List<RexNode> keyIsNulls=e.getOperands().stream().filter(operand -> operand.getType().isNullable()).map(builder::isNull).collect(Collectors.toList()); in method private rewriteIn(e RexSubQuery, variablesSet Set<CorrelationId>, logic RelOptUtil.Logic, builder RelBuilder, offset int) : RexNode from class org.apache.calcite.rel.rules.SubQueryRemoveRule
Extract Variable	allLiterals : boolean in method private rewriteIn(e RexSubQuery, variablesSet Set<CorrelationId>, logic RelOptUtil.Logic, builder RelBuilder, offset int) : RexNode from class org.apache.calcite.rel.rules.SubQueryRemoveRule
Developers have reported that 10708 commits involve refactoring but only 491 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 491 commits.

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3f7626b42f23be183481
Issue Title: : Add multiset operators MULTISET UNION, IS A SET, FUSION, etc.
Refactorings at d35c11c73cc78cf379d7e886cbbfb62b91d75fad
Change Attribute Type	FUSION : SqlFunction to FUSION : SqlAggFunction in class org.apache.calcite.sql.fun.SqlStdOperatorTable
Developers have reported that 10708 commits involve refactoring but only 492 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 492 commits.

No refactorings detected at 074d37a0343cf96349a9e2634562249e4693e468

No refactorings detected at 9beabf852e222c9733127f690df68fb0ca491d1f

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b3f7f26b42f23be1834da
Issue Title: : add tests using Fongo to Mongo Adapter
Refactorings at 6e8bb5a16c9c8c0397b79f3e98c0134ab9a32fb3
Rename Class	org.apache.calcite.adapter.elasticsearch2.ElasticSearch2AdapterTest renamed to org.apache.calcite.adapter.elasticsearch2.Elasticsearch2AdapterTest
Rename Class	org.apache.calcite.adapter.elasticsearch2.EmbeddedElasticNode renamed to org.apache.calcite.adapter.elasticsearch2.EmbeddedElasticsearchNode
Rename Class	org.apache.calcite.test.ElasticChecker renamed to org.apache.calcite.test.ElasticsearchChecker
Rename Class	org.apache.calcite.adapter.mongodb.MongoDatabaseRule renamed to org.apache.calcite.adapter.mongodb.MongoDatabasePolicy
Rename Class	org.apache.calcite.adapter.elasticsearch2.EmbeddedElasticRule renamed to org.apache.calcite.adapter.elasticsearch2.EmbeddedElasticsearchPolicy
Rename Class	org.apache.calcite.adapter.elasticsearch5.ElasticSearch5AdapterTest renamed to org.apache.calcite.adapter.elasticsearch5.Elasticsearch5AdapterTest
Rename Attribute	RULE : MongoDatabaseRule to POLICY : MongoDatabasePolicy in class org.apache.calcite.adapter.mongodb.MongoAdapterTest
Change Attribute Type	RULE : MongoDatabaseRule to POLICY : MongoDatabasePolicy in class org.apache.calcite.adapter.mongodb.MongoAdapterTest
Change Attribute Type	NODE : EmbeddedElasticRule to NODE : EmbeddedElasticsearchPolicy in class org.apache.calcite.adapter.elasticsearch2.Elasticsearch2AdapterTest
Change Return Type	EmbeddedElasticNode to EmbeddedElasticsearchNode in method private create(settings Settings) : EmbeddedElasticsearchNode from class org.apache.calcite.adapter.elasticsearch2.EmbeddedElasticsearchNode
Change Return Type	EmbeddedElasticNode to EmbeddedElasticsearchNode in method public create() : EmbeddedElasticsearchNode from class org.apache.calcite.adapter.elasticsearch2.EmbeddedElasticsearchNode
Change Return Type	MongoDatabaseRule to MongoDatabasePolicy in method package create() : MongoDatabasePolicy from class org.apache.calcite.adapter.mongodb.MongoDatabasePolicy
Rename Attribute	NODE : EmbeddedElasticRule to POLICY : EmbeddedElasticsearchPolicy in class org.apache.calcite.adapter.elasticsearch5.Elasticsearch5AdapterTest
Change Attribute Type	NODE : EmbeddedElasticRule to POLICY : EmbeddedElasticsearchPolicy in class org.apache.calcite.adapter.elasticsearch5.Elasticsearch5AdapterTest
Developers have reported that 10708 commits involve refactoring but only 493 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 493 commits.

No refactorings detected at 0db06f780e9276424467690c703004df9f012314

No refactorings detected at 3c051474dd86fb14b85df55fd54b869ff5381cb0

No refactorings detected at 242e12f256d62c72dafcec57cf60f1a5960ac738

VCS System: https://github.com/apache/calcite.git
Issue ID: : 5b3b400626b42f23be183983
Issue Title: : Add rule to push Project past Correlate
Refactorings at 68ba411e23ba930bb2086bb3eed4c46edfac23eb
Change Method Access Modifier	private to protected in method protected getTesterWithDynamicTable() : Tester from class org.apache.calcite.test.SqlToRelTestBase
Pull Up Method	private getTesterWithDynamicTable() : Tester from class org.apache.calcite.test.SqlToRelConverterTest to protected getTesterWithDynamicTable() : Tester from class org.apache.calcite.test.SqlToRelTestBase
Developers have reported that 10708 commits involve refactoring but only 494 involve refactoring operations
There are 14 duplicate commits with refactoring out of the 494 commits.

